[{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"\ntitle:bom和dom1、JavaScript组成JavaScript由三部分组成：\n\nJS的核心语法：注释、标识符、关键字、变量、运算符、判断结构、循环结构、函数、数组、对象\nBOM：浏览器对象模型，提供可以通过JS操作、控制浏览器\nDOM：文档对象模型，提供可以通过JS操作、控制浏览器加载的HTML文件\n\n2、BOM介绍BOM ：Browser  Object  Model （浏览器对象模型），将浏览器软件看成一个对象 ，通过对象提供的属性和函数对浏览器进行一些简单的操作。\nBOM它不是一个对象，而是一组对象：\nwindow：大对象，当前浏览器的窗口\n​\tlocation：地址栏\n​\thistory：浏览器历史记录\n​\tscreen：屏幕\n​\tnavigator：浏览器自身数据\n​\tdocument：浏览器窗口加载的html文件\n3、window对象3.1、window对象介绍window对象是JS中的顶层（最基础）对象，在JS的任何代码处都可以随时使用window对象，由于window对象是顶级（基础、全局）对象，在使用的时候，可以省略   window.\nwindow代表的是当前的窗口。window对象不需要自己手动创建，浏览器只要打开，window对象自动创建。\n1234// 全局位置定义变量和函数var a = 12;  //  window.a = 12;function aaa()&#123;&#125;   // window.aaa = function()&#123;&#125;console.log(window);\n\n在js的全局位置上，使用var 定义变量，相当于给window对象上添加新的属性，定义的函数，也相当于给window添加新的函数。\n3.2、window中的属性细节123456789// var定义变量name，这时会将这个name帮到window上，// 但是window对象本身有一个name属性，用来给当前的window窗口命名var name = [&quot;赵敏&quot;,&quot;周芷若&quot;,&quot;灭绝&quot;];console.log(name);var ages = [11,22,33,44];console.log(ages);console.log(window);\n\n注意：自己在定义全局变量的时候，尽量不要使用var关键字，而是let定义，如果使用var关键字定义全局变量，变量会帮到window上，这是一定要注意，自己的变量名不能和window对象中的已有的变量重名。\n12// 获取滚动条的位置Y轴方向console.log(window.scrollY);\n\n3.3、window对象中的函数\nalert() : 警告框\n\nconfirm( 提示信息 ) ： 确认框 ， 点击确定，返回true，点击取消，返回false\n\nscrollTo( x轴位置， y轴位置 ) : 调整滚动条的位置\n1234567window.scrollTo( 0, 1000 );// 设置滚动行为改为平滑的滚动window.scrollTo(&#123;    top: 1000,    behavior: &quot;smooth&quot;&#125;);\n\n3.4、定时器\n\n\n函数名\n作用\n\n\n\nsetInterval( function(){} , 时间 )\n设置周期性的定时器，可以重复执行传递函数\n\n\nclearInterval( 定时器编号 )\n清除周期性定时器\n\n\nsetTimeout( function(){} , 时间 )\n设置一次性的定时器，从设置时刻往后延迟多久执行\n\n\nclearTimeout( 定时器编号 )\n清除一次性定时器\n\n\n123456789101112131415161718192021222324252627282930313233343536&lt;body&gt;    &lt;h2&gt;下课时间：2022-08-31 17:00:00&lt;/h2&gt;    &lt;h2&gt;剩余时间：        &lt;span id=&quot;h&quot;&gt;5&lt;/span&gt;:        &lt;span id=&quot;m&quot;&gt;50&lt;/span&gt;:        &lt;span id=&quot;s&quot;&gt;35&lt;/span&gt;    &lt;/h2&gt;    &lt;script&gt;        // window.setInterval( function()&#123;        //     console.log(&quot;111&quot;);        // &#125; , 1000 );                        let dd = function ()&#123;            // 当前系统时间            let d = new Date();            let d2 = new Date(&quot;2022-08-31 17:00:00&quot;);                        // 计算时间差            let time = Math.floor((d2.getTime() - d.getTime()) / 1000);                        // 计算剩余的小时            let h1 = Math.floor(time / 3600);            let m1 = Math.floor(time % 3600 / 60);            let s1 = Math.floor(time % 60);                        // 放到页面上            h.innerHTML = h1;            m.innerHTML = m1;            s.innerHTML = s1;        &#125; ;        window.setInterval( dd , 1000 );                    &lt;/script&gt;&lt;/body&gt;\n\n12345678910111213141516171819202122&lt;body&gt;    &lt;button id=&quot;start&quot;&gt;开始&lt;/button&gt;    &lt;button id=&quot;end&quot;&gt;结束&lt;/button&gt;    &lt;script&gt;        // 点击开始按钮的时候，在控制台从1开始输出数据        // 点击结束按钮，停止输出        // 定义定时器的编号变量        let timerID;        start.onclick = function()&#123;            let x = 1            timerID = window.setInterval(function()&#123;                console.log(x);                x++;            &#125;,500);        &#125;        end.onclick = function()&#123;            // 清除定时器            clearInterval( timerID );        &#125;    &lt;/script&gt;&lt;/body&gt;\n\n4、BOM中的其他对象\nscreen ： 与屏幕有关系对象，屏幕高度，宽度，可用宽度和高度。\n\nnavigator ： 获取与浏览器自身相关的数据信息\n\nhistory：表示当前窗口的历史记录。\n\nback() : 返回前一个历史记录页面\nforward() : 去下一个历史记录页面\ngo( 数字 ) : 去指定的页面\n\n\nlocation：表示的浏览器的地址栏\n\nport ： 访问端口号\nhost：主机（域名）\nprotocol：协议\nhref：浏览器地址中的全部信息\n\n\nURL：统一资源定位符。其实简单理解：浏览器地址栏中的所有内容\n\n\n5、DOM介绍5.1、什么是DOMDOM：Document  Object  Model，文档对象模型。让我们可以使用JS去操作HTML文件（文档）\nDOM技术：它是W3C组织制定的用于操作标记型文档的规范。\n\n5.2、节点树(倒立的树)将浏览器加载的每个HTML文件看成一个一个独立的文档对象（Document）。\n在浏览器解析HTML的时候，将文件中的不同内容解析成各自不同的对象：\n标签对象（元素节点Element）：html文件中出现的任何的标签\n属性对象（属性节点Attribute）：标签上的不同的属性\n文本对象（文本节点Text）：开始标签和结束标签之间包裹的文本数据（字符串）\n在DOM的规范中，不管是元素、属性、文本，统一都称为节点（Node）\n6、节点操作6.1、特殊的节点html和body标签：\n12345// 获取网页的根标签，html标签console.log( document.documentElement );// 获取body标签console.log( document.body );\n\n6.2、通过dom提供函数获取标签\nHTML4中获取标签的方式：\n\ndocument.getElementById( “id属性值” ) ： 通过标签上的id属性获取到当前这个标签，只能获取到第一个。\ndocument.getElementsByTagName(“标签名”)：通过标签名获取标签，返回一个数组。\ndocument.getElementsByName(“name属性值”)：通过标签的name属性获取标签，返回一个数组。\ndocument.getElementsByClassName(“class属性值”)：通过标签的class属性获取标签，返回一个数组\n\n\nHTML5中获取标签的方式：\n\ndocument.querySelector( “css选择器” ) : 通过指定的选择器来选中页面标签，返回选中的第一个标签\ndocument.querySelectorAll(“css选择器”) ：通过指定的选择器选中所有标签，返回一个数组\n\n\n\n6.3、页面添加标签\ndocument.createElement( “标签名”) ： 创建出一个标签对象，它在内存中，不会直接放到页面上\n父标签对象.appendChild( 子标签对象 ) ： 将标签添加到父标签对象中\n\n12345678910111213141516171819202122&lt;body&gt;    &lt;ul&gt;        &lt;li&gt;新闻&lt;/li&gt;    &lt;/ul&gt;    &lt;button&gt;添加新闻标题&lt;/button&gt;    &lt;script&gt;        // 点击按钮，给ul中添加一个li        // 获取按钮        let btn = document.querySelector(&quot;button&quot;);        // 给按钮添加点击动作        btn.onclick = function()&#123;            // 通过dom动态的创建一个新的li标签   &lt;li&gt;&lt;/li&gt;            let li = document.createElement(&quot;li&quot;);            // 给标签中添加文本  &lt;li&gt;新闻----&lt;/li&gt;            li.innerText=&quot;新闻----&quot;;            // 将li标签添加到页面上            let ul = document.querySelector(&quot;ul&quot;);            ul.appendChild(li);            console.log(li);        &#125;    &lt;/script&gt;&lt;/body&gt;\n\n6.4、替换标签1234567891011121314151617181920&lt;body&gt;    &lt;a href=&quot;https://www.jd.com&quot;&gt;京东&lt;/a&gt;    &lt;button&gt;修改标签&lt;/button&gt;    &lt;script&gt;        // 点击按钮，修改页面上的a标签        let btn = document.querySelector(&quot;button&quot;);        // 添加点击动作        btn.onclick = function()&#123;            // 替换页面上a标签            let newA = document.createElement(&quot;a&quot;);            newA.innerText = &quot;淘宝&quot;;  //&lt;a&gt;淘宝&lt;/a&gt;            //&lt;a href=&#x27;https://www.taobao.com&#x27;&gt;淘宝&lt;/a&gt;            newA.href=&quot;https://www.taobao.com&quot;;              // 需要通过父标签调用对应的函数来替换其中的某个子标签            let oldA = document.querySelector(&quot;a&quot;);            document.body.replaceChild(newA , oldA);        &#125;    &lt;/script&gt;&lt;/body&gt;\n\n6.5、删除标签12345678910111213141516171819202122232425262728&lt;body&gt;    &lt;ul&gt;        &lt;li&gt;新闻1&lt;/li&gt;        &lt;li&gt;新闻2&lt;/li&gt;        &lt;li&gt;新闻3&lt;/li&gt;        &lt;li&gt;新闻4&lt;/li&gt;        &lt;li&gt;新闻5&lt;/li&gt;        &lt;li&gt;新闻6&lt;/li&gt;        &lt;li&gt;新闻7&lt;/li&gt;    &lt;/ul&gt;    &lt;script&gt;        // 点击某个li的时候，将其删除页面删除        // 1、获取到页面上的所有li        let lis = document.querySelectorAll(&quot;li&quot;);        // 2、需要遍历数组，取出每个li，        lis.forEach(function( v )&#123;            // 给其添加点击动作            v.onclick = function()&#123;                // html5中的删除。 标签对象.remove()                // this.remove();                                // html4中删除子标签                let ul = document.querySelector(&quot;ul&quot;);                ul.removeChild(this);            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;\n\n6.6、通过dom属性获取标签\nparentNode ： 获取父标签\npreviousSibling ： 获取上一个兄弟（可能是标签，可能是回车）\npreviousElementSibling：获取上一个兄弟标签（一定是标签）\nnextSibling：获取下一个兄弟（可能是标签，可能是回车）\nnextElementSibling：获取下一个兄弟标签（一定是标签）\nfirstChild ：获取第一个子标签（可能是标签，可能是回车）\nfirstElementChild：获取第一个子标签（一定是标签）\nlastChild：获取最后一个子标签（可能是标签，可能是回车）\nlastElementChild：获取最后一个子标签（一定是标签）\nchildElementCount：获取当前父标签拥有多少个子标签（一定是标签）\nchildNodes：获取所有子标签，包含回车，得到是一个数组\nchildren：获取所有子标签（只有标签），得到一个数组\n\n7、标签中的文本操作\ninnerHTML : 设置或获取标签中的文本数据（包含标签中的HTML片段，如果是设置，html片段会被解析）\ninnerText：设置或获取标签中的文本数据（文本中包含标签，标签不解析，原样显示在页面上）\ntextContent：设置或获取标签中的文本数据\n\n123456789101112131415161718&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        div中的数据        &lt;strong&gt;数据加粗&lt;/strong&gt;    &lt;/div&gt;    &lt;script&gt;        let div = document.querySelector(&quot;.box&quot;);        // 获取标签中的文本        console.log( div.innerHTML );        console.log( div.innerText );        console.log( div.textContent );        // 设置标签中的文本数据        // div.innerHTML = &quot;hahahaha&lt;a href=&#x27;#&#x27;&gt;xxxx&lt;/a&gt;&quot;;        div.textContent = &quot;hahahaha&lt;a href=&#x27;#&#x27;&gt;xxxx&lt;/a&gt;&quot;;    &lt;/script&gt;&lt;/body&gt;\n\n8、样式操作8.1、行内样式通过js操作页面标签的样式。最终都是以行内样式体现。\n操作的步骤：获取页面标签.style.css属性名 &#x3D; css属性值\n1234567891011121314151617&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;    &lt;button&gt;添加样式&lt;/button&gt;    &lt;script&gt;        // 点击按钮，给div添加宽度、高度、背景颜色、边框等样式        let btn = document.querySelector(&quot;button&quot;);        btn.onclick = function()&#123;            let box = document.querySelector(&quot;.box&quot;);            // 设置宽度            box.style.width = &quot;100px&quot;;            // 设置高度            box.style.height = &quot;100px&quot;;            // 设置背景颜色            box.style.backgroundColor = &quot;#fa0&quot;;        &#125;    &lt;/script&gt;&lt;/body&gt;\n\n如果css的属性是多个单词，需要去掉减号，将后面单词的首字母大写（小驼峰命名规范）\n8.2、通过className属性设置class名称123456789101112131415161718192021&lt;head&gt;    &lt;style&gt;        .box&#123;            width: 200px;            height: 200px;            border: 5px solid #0a0;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;&lt;/div&gt;    &lt;button&gt;添加样式&lt;/button&gt;    &lt;script&gt;        // 点击按钮，给div动态添加class属性        let btn = document.querySelector(&quot;button&quot;);        btn.onclick = function()&#123;            let div = document.querySelector(&quot;div&quot;);            div.className = &quot;box&quot;;        &#125;    &lt;/script&gt;&lt;/body&gt;\n\n9、属性操作9.1、原生属性标签上的原生属性，直接通过标签对象.属性名 操作\n123456789101112131415161718&lt;body&gt;    &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;    &lt;input type=&quot;text&quot; id=&quot;username&quot;&gt;    &lt;script&gt;        // 标签上原生的属性操作：        // 获取属性值：标签对象.属性        // 设置属性值：标签对象.属性 = 值;        let a = document.querySelector(&quot;a&quot;);        console.log(a.href);        console.log(a.target);        let input = document.querySelector(&quot;input&quot;);        console.log(input.type);        console.log(input.value);        // 给标签原生属性设置值        input.value = &quot;zhangsan&quot;;        input.type = &quot;password&quot;;    &lt;/script&gt;&lt;/body&gt;\n\n9.2、自定义属性dom给任何标签都提供了：他是HTML4时候提供的，html5中对齐进行优化\ngetAttribute( “属性名” ) ： 获取标签某个属性值\nsetAttribute( “属性名” ,”属性值”) ： 设置或添加标签某个属性值\nremoveAttribute( “属性名” ) ： 删除标签某个属性值\n123456789101112131415161718192021&lt;body&gt;    &lt;h1 itsource=&quot;源码&quot; zhangkai=&quot;张凯&quot; class=&quot;title&quot;&gt;随便写&lt;/h1&gt;    &lt;script&gt;        let h1 = document.querySelector(&quot;h1&quot;);        // console.log(h1.itsource);        // 标签自定义的属性必须通过对应的函数操作        // 获取属性：getAttribute(&quot;属性名&quot;)        console.log( h1.getAttribute(&quot;itsource&quot;) );        console.log( h1.getAttribute(&quot;zhangkai&quot;) );        // 修改或添加属性：setAttribute(&quot;属性名&quot;,&quot;属性值&quot;);        h1.setAttribute(&quot;shaanxi&quot;,&quot;西安&quot;);        h1.setAttribute(&quot;itsource&quot;,&quot;西安源码&quot;);        // 删除属性：removeAttriute(&quot;属性名&quot;)        h1.removeAttribute(&quot;itsource&quot;);        console.log(h1.getAttribute(&quot;class&quot;));    &lt;/script&gt;&lt;/body&gt;\n\n9.3、html5中的自定义属性html5中建议在自定义属性的前面添加前缀：data-自定义属性名\n1&lt;h1 id=“” class=“” title=“” data-username=“” data-age=“”&gt;陕西省西安市&lt;/h1&gt;\n\n123456789101112131415&lt;h1 id=&quot;title&quot; class=&quot;title&quot; data-username=&quot;renlei&quot; data-age=&quot;18&quot;&gt;陕西省西安市&lt;/h1&gt;&lt;script&gt;    let h1 = document.querySelector(&quot;#title&quot;)        // 使用dom中提供函数操作自定义属性    let usename = h1.getAttribute(&quot;data-username&quot;)    console.log(usename)    // h5中提供的dataset操作自定义属性    h1.dataset[&quot;username&quot;] = &quot;张凯&quot;    console.log(h1.dataset[&quot;username&quot;])    console.log(h1.dataset[&quot;age&quot;])&lt;/script&gt;\n\n12345678910111213141516&lt;ul&gt;    &lt;li data-bg-color=&quot;red&quot;&gt;红色&lt;/li&gt;    &lt;li data-bg-color=&quot;green&quot;&gt;绿色&lt;/li&gt;    &lt;li data-bg-color=&quot;blue&quot;&gt;蓝色&lt;/li&gt;&lt;/ul&gt;&lt;script&gt;    // 需求：点击不同的li，将li的背景颜色修改自定义属性指定的颜色    let li = document.querySelectorAll(&quot;li&quot;)    // 遍历    li.forEach(function(v)&#123;        v.addEventListener(&quot;click&quot;,function()&#123;            this.style.backgroundColor = this.dataset[&quot;bgColor&quot;]        &#125;)    &#125;)&lt;/script&gt;\n\n注意事项：如果自定义属性中多个单词之间使用 - 隔开，在通过 标签对象.dataset[“属性名”]  操作的时候，属性名需要遵守小驼峰格式，将 - 与后面的字母合并，字母大写\n10、事件介绍10.1、什么是事件？事件Event：可以通过对应的设备去操作界面，根据不同的操作（动作），给出不同的处理方案。\n在页面（界面）上发生了某件事。需要基于这个事，然后去编写对应的处理逻辑。\n在前端编程中，界面上发生的动作被称为某个事件，基于事件需要给出对应的js函数，在函数中处理当前这个事件。\n10.2、事件的四要素\n事件源：事件具体在哪个对象上发生的。\n事件处理函数：在事件发生后，需要给出的对应的处理方案\n事件类型：具体发生了什么事件（动作）\n事件对象：在事件源上发生的事件（动作），浏览器会事件封装成一个对象（Event）传给处理函数\n\n10.3、事件三种注册方式10.3.1、直接在标签上注册事件&lt;标签名 onxxxxx&#x3D;”调用函数”&gt;xxxxxxxxxxxx&lt;&#x2F;标签名&gt;\n123456789&lt;body&gt;    &lt;h1 onclick=&quot;show()&quot;&gt;演示事件注册&lt;/h1&gt;    &lt;script&gt;        function show()&#123;            console.log(1111);        &#125;    &lt;/script&gt;&lt;/body&gt;\n\n10.3.2、基于dom注册事件通过dom技术获取到页面的某个标签，然后给标签绑定对应的事件\nlet 标签对象 &#x3D; document.querySelector(“css选择器”)\n标签对象.onxxxxx &#x3D; function(){}\n12345// 2、第二种方式: dom对象注册let h1 = document.querySelector(&quot;h1&quot;);h1.onmouseover = function()&#123;    console.log(222);&#125;\n\n10.3.3、w3c的标准方式注册也需要获取到页面的标签对象，然后使用w3c提供的函数，addEventListener()\n1234标签对象.addEventListener( &quot;事件类型&quot; , function()&#123;&#125; , 事件处理方式 )// 事件类型：标签上需要注册具体什么事件，例如：click（单击），mouseover（鼠标移入）// function()&#123;&#125; : 事件处理函数// 事件处理方式 : 默认false，表示事件默认方式是冒泡。省略不写\n\n12345// 3、w3c的标准方式注册事件let div = document.querySelector(&quot;.box&quot;);div.addEventListener( &quot;mouseout&quot; , function()&#123;    console.log(&quot;鼠标移出&quot;);&#125; );\n\n10.3.4、注册事件细节基于dom注册事件：事件只能被注册一次，后续的注册，覆盖前面（前提：同一个标签，同一个事件）\nw3c标签方式注册：事件可以被多册注册，都会执行（前提：同一个标签，同一个事件）\n10.4、常用事件10.4.1、鼠标事件1234567891011121314151617181920&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;    &lt;script&gt;        let box = document.querySelector(&quot;.box&quot;);        // 鼠标点击事件        box.addEventListener(&quot;click&quot;,function( e )&#123;            console.log(e);            box.style.width = &quot;500px&quot;        &#125;);        // 鼠标移入事件        box.addEventListener(&quot;mouseover&quot;,function()&#123;            box.style.backgroundColor = &quot;#0a0&quot;        &#125;);        // 鼠标移出事件        box.addEventListener(&quot;mouseout&quot;,function()&#123;            box.style.backgroundColor = &quot;#f00&quot;        &#125;);    &lt;/script&gt;&lt;/body&gt;\n\n10.4.2、键盘事件键盘事件只能针对某些标签（事件源）有效：input、textarea、body\n键盘上按下的任意一个键都有一个数字和其一一对应，称为键码，keycode获取到，在现在的主流浏览器中keycode和which效果一样。\n123456789101112131415161718192021222324252627282930313233343536373839404142&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            position: absolute;            top: 10px;            left: 20px;            width: 100px;            height: 100px;            background-color: #f00;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;    &lt;script&gt;        // 按键盘的上下左右，w a s d 移动div在页面上的位置        let div = document.querySelector(&quot;.box&quot;);        // div 绑定键盘事件无效        document.body.addEventListener(&quot;keydown&quot;,function( e )&#123;            // 判断按下的是什么键，然后给出具体的操作，控制div在页面上显示的位置            console.log(e);            console.dir(div);            if( e.keyCode === 87 || e.which === 38 )&#123;                div.style.top = div.offsetTop - 100 + &quot;px&quot;;            &#125;            if( e.keyCode === 83 || e.which === 40 )&#123;                div.style.top = div.offsetTop + 100 + &quot;px&quot;;            &#125;            if( e.keyCode === 65 || e.which === 37 )&#123;                div.style.left = div.offsetLeft - 100 + &quot;px&quot;;            &#125;            if( e.keyCode === 68 || e.which === 39 )&#123;                div.style.left = div.offsetLeft + 100 + &quot;px&quot;;            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;\n\n10.4.3、表单事件\nonsubmit ：用在form标签上，用于决定表单是否提交。这个事件要求必须有返回值\n123456789101112131415161718192021222324&lt;body&gt;    &lt;form action=&quot;#&quot; method=&quot;get&quot; onsubmit=&quot;return checkForm()&quot;&gt;         &lt;p&gt;用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;        &lt;p&gt;密码：&lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt;&lt;/p&gt;        &lt;p&gt;&lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;&lt;/p&gt;    &lt;/form&gt;    &lt;script&gt;        function checkForm()&#123;            // 进行表单验证             let username = document.querySelector(&quot;input[type=&#x27;text&#x27;]&quot;);            if(username.value.length &lt;= 5)&#123;                username.style.border = &quot;1px solid red&quot;                return false;            &#125;            let password = document.querySelector(&quot;input[type=&#x27;password&#x27;]&quot;);            if(password.value.length &lt;= 5 || password.value.length &gt; 12)&#123;                password.style.border = &quot;1px solid red&quot;                return false;            &#125;            return true;        &#125;    &lt;/script&gt;&lt;/body&gt;\n\nblur : 页面某个元素失去焦点触发，一般用在页面上表单项光标离开时进行数据验证\n12345678// 失去焦点事件let username = document.querySelector(&quot;input[type=&#x27;text&#x27;]&quot;);username.addEventListener(&quot;blur&quot;,function()&#123;    if(username.value.length &lt;= 5)&#123;        username.style.border = &quot;1px solid red&quot;        return false;    &#125;&#125;)\n\ninput：输入事件\n123456// 输入事件username.addEventListener(&quot;input&quot;,function( e )&#123;    console.log(e.data);    let span = document.querySelector(&quot;span&quot;);    span.innerText += e.data;&#125;)\n\nchange ：改变事件\n12345// 改变事件，一般在select上面let select = document.querySelector(&quot;select&quot;)select.addEventListener(&quot;change&quot; , function()&#123;    console.log(111);&#125;)\n\n10.4.4、窗口事件\nload ： 表示页面资源加载完成后触发\n1234567891011121314&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;script&gt;        window.onload = function()&#123;            let input = document.querySelector(&quot;input&quot;);            input.addEventListener(&quot;input&quot;,function()&#123;                console.log(111);            &#125;)        &#125;    &lt;/script&gt;&lt;/head&gt;\n\nscroll ： 窗口个滚动事件，一般注册在window对象上\n123window.addEventListener(&quot;scroll&quot; , function()&#123;    console.log(window.scrollY);&#125;)\n\n10.5、事件处理机制事件默认有两种处理机制（事件的执行顺序）：在父子标签嵌套的情况下，父子标签注册相同的事件，这时就会触发事件的处理机制，默认冒泡机制。\n冒泡机制：子标签事件被触发，子标签的处理函数一定会执行，虽然父标签没有直接被触发，而是事件会冒泡到父标签上，导致父标签的事件也会被触发。\n捕获机制：子标签事件被触发，这时优先执行父标签的事件处理，然后再执行子标签的事件处理。需要使用w3c提供的事件标准注册方式，将第三个参数修改true。\n123456789101112131415161718192021222324252627&lt;body&gt;    &lt;div class=&quot;out&quot;&gt;        &lt;div class=&quot;in&quot;&gt;            &lt;img src=&quot;./imgs/1.webp&quot; alt=&quot;&quot;&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;script&gt;        // 给页面上两个div和img 三个标签都添加鼠标点击事件        let divOut = document.querySelector(&quot;.out&quot;);        let divIn = document.querySelector(&quot;.in&quot;);        let img = document.querySelector(&quot;img&quot;);        divOut.addEventListener(&quot;click&quot; , function()&#123;            console.log(&quot;divOut 111&quot;);        &#125; , true)        divIn.addEventListener(&quot;click&quot; , function()&#123;            console.log(&quot;divIn 222&quot;);        &#125;, false)        img.addEventListener(&quot;click&quot; , function( e )&#123;            console.log(&quot;img 333&quot;);            // 阻止事件冒泡            // e.stopPropagation()        &#125;, true)    &lt;/script&gt;&lt;/body&gt;\n\n10.6、事件委派事件委派：事件代理、事件委托。\n将事件绑定到父标签（已经在也初始化的时候就存在的标签），在后期动态给父标签添加的子标签，这时子标签上发生事件之后，会利用事件的冒泡机制，触发父标签的事件执行。\n父标签的事件被触发分为两种情况：\n1、真正直接触发的标签事件\n2、子标签的事件冒泡到父标签上\n这时可以使用事件对象Event中的target属性，来确定到底在哪个标签上发生的事件\n12345678910111213141516171819202122232425262728&lt;body&gt;    &lt;button&gt;添加新闻标题&lt;/button&gt;    &lt;ul&gt;        &lt;li bg=&quot;red&quot;&gt;新闻&lt;/li&gt;        &lt;li bg=&quot;blue&quot;&gt;新闻&lt;/li&gt;    &lt;/ul&gt;    &lt;script&gt;        // 1、点击按钮需要ul中添加li标签        document.querySelector(&quot;button&quot;).addEventListener(&quot;click&quot;,function()&#123;            let ul = document.querySelector(&quot;ul&quot;)            ul.innerHTML += `&lt;li bg=&quot;(123,213,222)&quot;&gt;新闻&lt;/li&gt;`;        &#125;)        // 将事件绑定ul上        let ul = document.querySelector(&quot;ul&quot;)        ul.addEventListener(&quot;click&quot;,function( e )&#123;            // e 表示事件对象（其中包含事件具体发生在哪个源头）            // e对象，其中有target属性，代表的事件源            // e.target 事件源对象（标签对象）            // 任何的标签对象中有一个nodeName属性，可以获取到标签的名称            console.dir( e.target.nodeName );            if( e.target.nodeName === &quot;LI&quot; )&#123;                e.target.style.backgroundColor = &quot;red&quot;            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;\n\n事件委派步骤：\n1、将事件绑定父标签上\n2、在事件处理函数中，通过事件对象event，来获取事件源（哪个标签上发生的事件）\n10.7、事件处理函数返回值1234567891011121314151617181920&lt;body&gt;    &lt;a href=&quot;https://www.baidu.com&quot; onclick=&quot;return goBaidu()&quot;&gt;百度一下&lt;/a&gt;    &lt;a href=&quot;https://www.jd.com&quot; class=&quot;jd&quot; target=&quot;_blank&quot;&gt;jd&lt;/a&gt;    &lt;script&gt;        function goBaidu()&#123;            if( confirm(&quot;确定跳转到百度吗？&quot;) )&#123;                return true;            &#125;else&#123;                return false;            &#125;        &#125;        let jd = document.querySelector(&quot;.jd&quot;)        jd.addEventListener(&quot;click&quot;,function( e )&#123;            console.log(123);            // 阻止事件的默认行为            e.preventDefault()        &#125;)    &lt;/script&gt;&lt;/body&gt;\n\n11、web存储技术web存储：在浏览器端如何保存客户端（用户端）的一些数据（非重要的，甚至可以公开的部分数据）\n常用的浏览器端存储数据的解决方案：Cookie、sessionStorage、localStorage\n11.1、Cookie技术cookie技术，他是所有浏览器都支持的。可以在浏览器（客户端）存储部分少量的数据，需要依赖服务端程序支持。主要是给后台程序员提供的一些数据操作。\n\n11.2、sessionStorage对象sessionStorage ： 会话存储\n\n\n\n函数名\n含义\n\n\n\n.getItem(“属性名”)\n获取数据\n\n\n.setItem(“属性名”,”属性值”)\n添加或者修改数据\n\n\n.removeItem(“属性名”)\n删除某一项数据\n\n\nclear()\n删除所有数据\n\n\n注意事项：1、删除需谨慎。2、存储数据的时候，属性值只能是字符串。不能是其他类型数据\n1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;button class=&quot;btn1&quot;&gt;保存数据&lt;/button&gt;    &lt;button class=&quot;btn2&quot;&gt;获取数据&lt;/button&gt;    &lt;button class=&quot;btn3&quot;&gt;修改数据&lt;/button&gt;    &lt;button class=&quot;btn4&quot;&gt;删除数据&lt;/button&gt;    &lt;button class=&quot;btn5&quot;&gt;删除所有数据&lt;/button&gt;    &lt;script&gt;        let btn1 = document.querySelector(&quot;.btn1&quot;)        let btn2 = document.querySelector(&quot;.btn2&quot;)        let btn3 = document.querySelector(&quot;.btn3&quot;)        let btn4 = document.querySelector(&quot;.btn4&quot;)        let btn5 = document.querySelector(&quot;.btn5&quot;)        btn1.addEventListener(&quot;click&quot;, function () &#123;            // 存储数据            sessionStorage.setItem(&quot;username&quot;, &quot;张无忌&quot;)            sessionStorage.setItem(&quot;age&quot;, &quot;18&quot;)            sessionStorage.setItem(&quot;sex&quot;, &quot;女&quot;)            let p = &#123;                name:&quot;赵敏&quot;,                sex:&quot;男&quot;,                age:20            &#125;            sessionStorage.setItem(&quot;person&quot;,p)        &#125;)        // 获取数据        btn2.onclick = function () &#123;            let age = sessionStorage.getItem(&quot;person&quot;)            console.log(age);        &#125;        // 修改数据        btn3.onclick = function () &#123;            sessionStorage.setItem(&quot;age&quot;,32)        &#125;        // 删除数据        btn4.onclick = function () &#123;            sessionStorage.removeItem(&quot;sex&quot;)        &#125;        // 删除所有数据        btn5.onclick = function () &#123;            sessionStorage.clear()        &#125;    &lt;/script&gt;\n\nsessionStorage特点：它属于会话级别。只要当前页面所在的窗口没有关闭，sessionStorage中的数据就永远保存。窗口只要关闭，数据就丢失了。\n11.3、localStorage对象localStorage：本地存储（永久存储、持久存储）\n\n\n\n函数名\n含义\n\n\n\n.getItem(“属性名”)\n获取数据\n\n\n.setItem(“属性名”,”属性值”)\n添加或者修改数据\n\n\n.removeItem(“属性名”)\n删除某一项数据\n\n\nclear()\n删除所有数据\n\n\n123456789101112131415161718192021222324252627282930313233&lt;button class=&quot;btn1&quot;&gt;保存数据&lt;/button&gt;&lt;button class=&quot;btn2&quot;&gt;获取数据&lt;/button&gt;&lt;button class=&quot;btn3&quot;&gt;修改数据&lt;/button&gt;&lt;button class=&quot;btn4&quot;&gt;删除数据&lt;/button&gt;&lt;button class=&quot;btn5&quot;&gt;删除所有数据&lt;/button&gt;&lt;script&gt;    let btn1 = document.querySelector(&quot;.btn1&quot;)    let btn2 = document.querySelector(&quot;.btn2&quot;)    let btn3 = document.querySelector(&quot;.btn3&quot;)    let btn4 = document.querySelector(&quot;.btn4&quot;)    let btn5 = document.querySelector(&quot;.btn5&quot;)        btn1.onclick = function()&#123;        localStorage.setItem(&quot;username&quot;,&quot;灭绝师太&quot;)        localStorage.setItem(&quot;age&quot;,&quot;100&quot;)        localStorage.setItem(&quot;address&quot;,&quot;峨眉山&quot;)    &#125;    btn2.onclick =function()&#123;        console.log( localStorage.getItem(&quot;age&quot;) )    &#125;    btn3.onclick =function()&#123;        localStorage.setItem(&quot;address&quot;,&quot;少林寺&quot;)    &#125;    btn4.onclick =function()&#123;        localStorage.removeItem(&quot;address&quot;)    &#125;    btn5.onclick =function()&#123;        localStorage.clear()    &#125;&lt;/script&gt;\n\n12、JSON对象的两个重要方法JSON对象：JSON: JavaScript Object Notation(JavaScript  对象表示法)。用来网络中传输数据。\nXML文档：可扩展的笔记语言。作为网络数据传输的一种格式，或者作为软件的配置文件存在。\nJSON的语法规则：JSON是JS中存储在一种数据书写格式。\n12345let person = &#123;    &quot;name&quot; ： &quot;张三&quot;,    &quot;age&quot; : 23,    &quot;sex&quot; : &quot;男&quot;&#125;\n\n在JSON格式的数据中，要求key，冒号左侧的数据必须使用双引号引用。冒号右侧可以是JS中支持的任意数据类型\n\n\n\n函数名\n含义\n\n\n\nJSON.parse(“字符串格式数据”)\n将字符串格式的数据转成JS对象\n\n\nJSON.stringify(JS对象)\n将JS的对象转成字符串格式数据\n\n\n123456789101112131415161718192021let objStr = &#x27;&#123;&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:23&#125;&#x27;; // 将字符串转成JS的对象 let obj = JSON.parse(objStr) console.log(objStr); console.log(obj); let arrStr = &quot;[1,2,3,4,5,6,7]&quot;; let arr = JSON.parse(arrStr); console.log(arr); // 将JS中的对象转成字符串格式数据 let person = &#123;     name:&quot;张三&quot;,     age:23,     sex:&quot;男&quot; &#125; console.log(person); let s = JSON.stringify(person); console.log(s); localStorage.setItem(&quot;person&quot;,s);\n\n\n\n\n\n\n\n\n\n\n\n","slug":"bom和dom","date":"2024-10-16T08:50:25.127Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"1 jQuery（一）jQuery遍历数组的方式数组遍历：\n在JS中，我们使用普通for循环即可遍历数组。\n在jQuery中，我们可以使数组的遍历变得更为简单（使用for遍历，取出的元素为js对象而非jQuery对象）\n语法\n\n\n\n属性名\n属性说明\n\n\n\nJQ数组.each(fn);\n遍历jQuery数组\n\n\n$.each(jQuery数组,fn);\n遍历jQuery数组\n\n\n代码准备\n12345678910111213&lt;script&gt;\t$(function()&#123;\t\t// 1、普通js方式遍历\t\t// 2、jQuery方式1\t\t// 3、jQuery方式2 \t\t// 4、使用$.each() 遍历普通的js数组\t&#125;);&lt;/script&gt;\t\t&lt;div&gt;1111&lt;/div&gt;\t\t&lt;div&gt;2222&lt;/div&gt;\t\t&lt;div&gt;3333&lt;/div&gt;\t\t&lt;div&gt;4444&lt;/div&gt;\n\n示例代码\n123456789101112131415161718192021222324&lt;script&gt;\t$(function()&#123;\t\t// 1 、普通遍历\t\tvar ds = $(&#x27;div&#x27;);\t\tfor(var i=0;i&lt;ds.length;i++)&#123;\t\t\t\talert(ds[i].innerHTML);\t\t&#125;// 2、jQuery方式1\t\tvar ds = $(&#x27;div&#x27;);\t\tds.each(function(index)&#123;  //index是循环因子\t\t\t   alert(index+&quot;&gt;&gt;&gt;&gt;&gt;&quot;+$(this).html());\t\t&#125;);\t\t// 3、jQuery方式2\t\t var ds = $(&#x27;div&#x27;);\t\t  $.each(ds, function(index) &#123; //index是循环因子\t\t\t   alert(index+&quot;&gt;&gt;&gt;&gt;&quot;+$(this).html());\t\t &#125;);\t\t\t// 4、使用$.each() 遍历普通的js数组\t\t var ss = [&quot;aaa&quot;,&quot;bbb&quot;,&quot;ccc&quot;,&quot;ddd&quot;];\t\t $.each(ss,function(index)&#123;\t\t\talert(index+&quot;&gt;&gt;&gt;&gt;&quot;+this);\t\t &#125;);\t\t &#125;);&lt;/script&gt;\n\n（二）操作属性1、prop():::success语法\nprop(“属性名”);            获取元素的某个属性的值\nprop(“属性名”,属性值);     给属性赋值\nremoveProp(“属性名”);     删除元素的某个属性的值\n注：prop命令是jQuery1.6版本后的新操作方式，用以替代attr命令。\n:::\n代码准备\n1234567891011121314151617181920212223&lt;style&gt;\t.blueDiv&#123;\t\tbackground-color: #87CEFA;\t\twidth:300px;\t\theight:300px;\t&#125;\t.redDiv&#123;\t\tbackground-color: red;\t\twidth:300px;\t\theight:300px;\t&#125;&lt;/style&gt;&lt;script&gt;\t$(function()&#123;\t\t//1、获取d2这个div标签的class值\t\t\t\t\t//2、设置d1这个div标签样式为blueDiv\t\t\t//3、移除d2这个div标签的redDiv样式        //4、设置文本框的value为ADMIN\t\t\t\t\t\t\t&#125;);&lt;/script&gt;&lt;div id=&quot;d1&quot;&gt;11111&lt;/div&gt;&lt;div id=&quot;d2&quot; class=&quot;redDiv&quot;&gt;22222&lt;/div&gt;&lt;input type=&quot;text&quot; id=&quot;username&quot;  /&gt;\n\n示例代码\n123456789101112131415&lt;script&gt;\t$(function()&#123;\t\t//1、获取d2这个div标签的class值\t\talert($(&#x27;#d2&#x27;).prop(&#x27;class&#x27;));\t\t//2、设置d1这个div标签样式为blueDiv\t\t$(&#x27;#d1&#x27;).prop(&#x27;class&#x27;,&#x27;blueDiv&#x27;);\t\t//3、移除d2这个div标签的redDiv样式\t\t$(&#x27;#d2&#x27;).removeProp(&#x27;class&#x27;);         //4、设置文本框的value为ADMIN\t\t$(&#x27;#username&#x27;).prop(&#x27;value&#x27;,&#x27;ADMIN&#x27;);\t&#125;);&lt;/script&gt;\n\n2、案例：全选、全不选和反选代码准备\n123456789101112131415161718&lt;script&gt;\tfunction quanxuan()&#123;\t&#125;\tfunction quanbuxuan()&#123;\t&#125;\tfunction fanxuan()&#123;\t&#125;&lt;/script&gt;&lt;div&gt;\t &lt;input type=&quot;button&quot; value=&quot;全选&quot; onclick=&quot;quanxuan()&quot; /&gt;\t &lt;input type=&quot;button&quot; value=&quot;全不选&quot; onclick=&quot;quanbuxuan()&quot; /&gt;\t &lt;input type=&quot;button&quot; value=&quot;反选&quot; onclick=&quot;fanxuan()&quot; /&gt;&lt;/div&gt;&lt;input type=&quot;checkbox&quot; value=&quot;math&quot;  /&gt;数学&lt;input type=&quot;checkbox&quot; value=&quot;chinese&quot;  /&gt;语文&lt;input type=&quot;checkbox&quot; value=&quot;english&quot;  /&gt;英语\n\n\n\n示例代码\n12345678910111213141516&lt;script&gt;\tfunction quanxuan()&#123;\t\tvar cs = $(&#x27;:checkbox&#x27;);\t\t\tcs.prop(&#x27;checked&#x27;,true);  // prop对数组对象有自动遍历的能力\t&#125;\t\t\tfunction quanbuxuan()&#123;\t\t var cs = $(&#x27;:checkbox&#x27;);\t\t\t  cs.prop(&#x27;checked&#x27;,false);  // prop对数组对象有自动遍历的能力\t&#125;function fanxuan()&#123;\t\t  var cs = $(&#x27;:checkbox&#x27;);\t\t  cs.each(function()&#123;\t\t\t\t$(this).prop(&#x27;checked&#x27;,!$(this).prop(&#x27;checked&#x27;));\t\t  &#125;);\t&#125;&lt;/script&gt;\n\n3、获取value属性的其他方式:::successjs方式：\nks对象.value\njQuery方式：\ntxtjQuery对象.prop(“value”):::\n语法\njQuery中，还有一种快捷操作方式：\n\n\n\n属性名\n属性说明\n\n\n\njQuery对象.val();\n获取元素的value属性值\n\n\njQuery对象.val(值);\n设置元素的value属性Prop(“value”,”值”)\n\n\n代码准备\n:::success\n\n\n    // 取值\n\n    function run1(){\n\n\n\n    }\n\n    //赋值\t\n\n    function run2(){\n\n\n\n    }\n\n\n\n\n\n\n\n\n:::\n示例代码\n:::success\n\n\n    function run1(){\n\n        alert($('#uname').val());\n\n    }\n\nfunction run2(){\n\n        $('#uname').val(\"郭靖\");\n\n    }\n\n\n\n:::\n（三）获取元素内容操作元素1、获取&#x2F;设置元素内容体（1）获取&#x2F;设置元素内容体HTML代码语法\n\n\n\n属性名\n属性说明\n\n\n\njQuery对象.html()\n获得内容体html代码，如果有标签代码，一并获得。\n\n\njQuery对象.html(“HTML代码”)\n设置html代码，如果有标签，将进行解析。\n\n\n代码准备\n:::successfunction run1(){\n&#x2F;&#x2F;获取div中的html内容\n}\nfunction run2(){\n&#x2F;&#x2F;把div中的内容设置为蓝色你好\n}\n\n\ntxt&lt;font color=&quot;red&quot;&gt;你好&lt;/font&gt;\n\n\n\n\n\n\n\n:::\n示例代码\n:::successfunction run1(){\ntxt//获取div中的html内容\n\nalert($(&#39;#d1&#39;).html());}\nfunction run2(){\ntxt  //把div中的内容设置为蓝色你好\n\n    $(&#39;#d1&#39;).html(&quot;&lt;font color=&#39;blue&#39;&gt;你好&lt;/font&gt;&quot;);}\n:::\n（2）获取&#x2F;设置元素内容体纯文本语法\n\n\n\n属性名\n属性说明\n\n\n\nJQ对象.text()\n获得文本，如果有标签，忽略。\n\n\nJQ对象.text(“纯文本”)\n设置文本，如果含有HTML标签，不进行解析。原样输出。\n\n\n代码准备\n:::successfunction run3(){\ntxt//获取div中的纯文本内容}\nfunction run4(){\ntxt//把div中的文本内容设置为hello}\n\n\ntxt&lt;font color=&quot;red&quot;&gt;你好&lt;/font&gt;\n\n\n\n\n\n\n\n:::\n示例代码\n:::successfunction run3(){\ntxt //获取div中的纯文本内容\n\n alert($(&#39;#d1&#39;).text());}\nfunction run4(){\ntxt //把div中的文本内容设置为hello\n\n $(&#39;#d1&#39;).text(&quot;hello&quot;);}\n:::\n2、追加元素内容体（1）作为子标签追加到末尾语法\n\n\n\n属性名\n属性说明\n\n\n\n$(‘jQuery对象‘).append(‘HTML代码’)\n先获取jQuery对象，把html作为子标签追加到jQuery对象的末尾\n\n\n$(‘html代码’).appendTo(‘jQuery对象’);\nHtml代码要放在$()中，作为子标签追加到jQuery对象的末尾\n\n\n代码准备\n:::successfunction run1(){\ntxt//列表尾部追加Java}\n\n\ntxt&lt;li&gt;Php&lt;/li&gt;\n\n&lt;li&gt;Android&lt;/li&gt;\n\n&lt;li&gt;Ios&lt;/li&gt;\n\n\n\n\n\n:::\n示例代码\n:::successfunction run1(){\ntxt//$(&#39;#rank&#39;).append(&quot;&lt;li&gt;Java&lt;/li&gt;&quot;);\n\n$(&#39;&lt;li&gt;Java&lt;/li&gt;&#39;).appendTo(&#39;#rank&#39;);}\n:::\n（2）作为子标签添加到开头语法\n\n\n\n属性名\n属性说明\n\n\n\n$(‘jQuery对象‘).prepend(‘HTML代码’)\n获取jQuery对象，把html作为子标签添加到jQuery对象的开始\n\n\n$(‘html代码’).prependTo(‘jQuery对象’);\nhtml代码要放在$()中，作为子标签追加到jQuery对象的开始\n\n\n代码准备\n:::successfunction run2(){\ntxt//列表头部添加python}\n\n\ntxt&lt;li&gt;Php&lt;/li&gt;\n\n&lt;li&gt;Android&lt;/li&gt;\n\n&lt;li&gt;Ios&lt;/li&gt;\n\n\n\n\n\n:::\n示例代码\n:::successfunction run2(){\ntxt//$(&#39;#rank&#39;).prepend(&quot;&lt;li&gt;python&lt;/li&gt;&quot;);\n\n   $(&#39;&lt;li&gt;python&lt;/li&gt;&#39;).prependTo(&#39;#rank&#39;);\t\t\t\t}\n:::\n（3）作为兄弟标签添加到前面语法\n\n\n\n属性名\n属性说明\n\n\n\n$(‘jQuery对象’).before(‘HTML代码’)\n获取jQuery对象，把html作为兄弟标签添加到jQuery对象的前面\n\n\n$(‘html代码’).insertBefore(‘jQuery对象’);\nhtml代码要放在$()中，作为兄弟标签添加到jQuery对象的前面\n\n\n代码准备\n:::successfunction run3(){\ntxt//列表前添加&lt;div&gt;大数据&lt;/div&gt;}\n\n\ntxt&lt;li&gt;Php&lt;/li&gt;\n\n&lt;li&gt;Android&lt;/li&gt;\n\n&lt;li&gt;Ios&lt;/li&gt;\n\n\n\n大数据\" onclick=\"run3()\" />\n\n:::\n示例代码\n:::successfunction run3(){\ntxt//列表前添加&lt;div&gt;大数据&lt;/div&gt;&#x2F;&#x2F;$(‘#rank’).before(‘大数据‘);\ntxt$(&#39;&lt;div&gt;大数据&lt;/div&gt;&#39;).insertBefore(&#39;#rank&#39;);}\n:::\n（4）作为兄弟标签添加到后面语法\n\n\n\n属性名\n属性说明\n\n\n\n$(‘jQuery对象‘).after(‘HTML代码’)\n获取jQuery对象，把html作为兄弟标签添加到jQuery对象的后面\n\n\n$(‘html代码’).insertAfter(‘jQuery对象’);\nhtml代码要放在$()中，作为兄弟标签添加到jQuery对象的后面\n\n\n代码准备\n:::successfunction run4(){\ntxt//列表后添加&lt;h1&gt;标题1&lt;/h1&gt;}\n\n\ntxt&lt;li&gt;Php&lt;/li&gt;\n\n&lt;li&gt;Android&lt;/li&gt;\n\n&lt;li&gt;Ios&lt;/li&gt;\n\n\n\n标题1\" onclick=\"run4()\" />\n\n:::\n示例代码\n:::successfunction run4(){\ntxt//列表后添加&lt;h1&gt;标题1&lt;/h1&gt;&#x2F;&#x2F;$(‘#rank’).after(‘标题1‘);\ntxt$(&#39;&lt;h1&gt;标题1&lt;/h1&gt;&#39;).insertAfter(&#39;#rank&#39;);}\n:::\n（5）添加父标签语法\n\n\n\n属性名\n属性说明\n\n\n\n$(‘jQuery对象‘).wrap(‘HTML代码’)\n获取jQuery对象，把html作为父标签添加\n\n\n代码准备\n123456789101112function run5()&#123;\t//给列表一个黄色背景的div父标签&#125;&lt;ul id=&quot;rank&quot;&gt;\t&lt;li&gt;Php&lt;/li&gt;\t&lt;li&gt;Android&lt;/li&gt;\t&lt;li&gt;Ios&lt;/li&gt;&lt;/ul&gt;&lt;input type=&quot;button&quot; value=&quot;给列表一个黄色背景的div父标签&quot; onclick=&quot;run5()&quot; /&gt;\n\n\n\n示例代码\n123function run5()&#123;\t\t$(&#x27;#rank&#x27;).wrap(&quot;&lt;div style=&#x27;width:300px;height:300px;background:yellow&#x27;&gt;&lt;/div&gt;&quot;);&#125;\n\n（6）删除标签语法\n\n\n\n属性名\n属性说明\n\n\n\n$(‘jQuery对象‘).empty()\n清除选择的标签中的所有子标签\n\n\n$(‘jQuery对象‘).remove()\n删除标签自身，包括子标签\n\n\n代码准备\n123456789101112131415161718function run6()&#123;    // 删除区域块1这个div中的内容&#125;function run7()&#123;    //删除区域块2这div&#125;&lt;div id=&quot;dd1&quot; style=&quot;width:300px;height:300px;background:greenyellow&quot;&gt;\t区域块1&lt;/div&gt;&lt;div id=&quot;dd2&quot; style=&quot;width:300px;height:300px;background:blue&quot;&gt;\t区域块2&lt;/div&gt;&lt;input type=&quot;button&quot; value=&quot;empty&quot; onclick=&quot;run6()&quot; /&gt;&lt;input type=&quot;button&quot; value=&quot;remove&quot; onclick=&quot;run7()&quot; /&gt;\n\n示例代码\n123456789function run6()&#123;    // 删除区域块1这个div中的内容\t$(&#x27;#dd1&#x27;).empty();&#125;function run7()&#123;    //删除区域块2这div\t$(&#x27;#dd2&#x27;).remove();&#125;\n\n（四）jQuery事件1、常见事件列表\n2、jQuery事件定义方式:::success语法\njQuery对象.事件([[data,]function(){}])\n:::\n代码准备\n12345678910$(function()&#123;\t//页面加载完成时，为d1加入鼠标移入和点击事件。为d2添加鼠标移入事件。\t//1、鼠标移入d1时，改变div的背景颜色为黄色//2、鼠标单击d1时，弹出d1中的内容//3、鼠标单击d2时，使用传参数的方式，弹出 d2中的内容和“hello,zhangsan”&#125;);&lt;div id=&quot;d1&quot;&gt;我是div1&lt;/div&gt;&lt;div id=&quot;d2&quot;&gt;我是div2&lt;/div&gt;\n\n示例代码\n12345678910111213141516$(function()&#123;\t//页面加载完成时，为d1加入鼠标移入和点击事件。为d2添加鼠标移入事件。\t//1、鼠标移入d1时，改变div的背景颜色为黄色     $(&#x27;#d1&#x27;).mouseover(function()&#123;\t\t$(this).css(&#x27;backgroundColor&#x27;,&#x27;yellow&#x27;);\t &#125;);     //2、鼠标单击d1时，弹出d1中的内容     $(&#x27;#d1&#x27;).click(function()&#123;\t\t alert($(this).html());\t &#125;);     //3、鼠标单击d2时，使用传参数的方式，弹出 d2中的内容和“hello,zhangsan”     $(&#x27;#d2&#x27;).click(&#123;username:&#x27;zhangsan&#x27;&#125;,function(e)&#123;\t\talert($(this).html()+&quot;&lt;&lt;&lt;&gt;&gt;&gt;&quot;+e.data.username);\t&#125;);&#125;);\n\n\n\n（五）案例1、倒计时案例需求\n在页面中有按钮，实现5秒以后才可以点击，有倒计时效果；（5秒后图1变为图2）\n图1：\n\n\n\n\n\n\n\n图2：\n\n\n\n\n\n\n\n示例代码\n1234567891011121314151617181920212223242526272829303132333435&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;\t\t&lt;script&gt;\t\t\tvar timer;\t\t\t$(function()&#123;\t\t\t\t$(&#x27;#btn&#x27;).prop(&#x27;disabled&#x27;,true);\t\t\t\tvar count = 5;\t\t\t\ttimer = setInterval(function()&#123;\t\t\t\t\tcount--;\t\t\t\t\tif(count&lt;0)&#123;\t\t\t\t\t\tclearInterval(timer);\t\t\t\t\t\t$(&#x27;#btn&#x27;).val(&quot;同意&quot;);\t\t\t\t\t\t$(&#x27;#btn&#x27;).prop(&quot;disabled&quot;,false);\t\t\t\t\t&#125;else&#123;\t\t\t\t\t\t$(&#x27;#btn&#x27;).val(&#x27;请仔细阅读协议(&#x27;+count+&#x27;)&#x27;);\t\t\t\t\t&#125;\t\t\t\t&#125;,1000);\t\t\t&#125;)\t\t&lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t\t&lt;input type=&quot;button&quot; value=&quot;请仔细阅读协议(5)&quot;  id=&quot;btn&quot;  /&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n2、数组内容显示到下拉列表案例需求\n\n当页面加载完成后，就将数组的内容显示到下拉列表\n示例代码\n1234567891011121314151617181920212223&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.js&quot; &gt;&lt;/script&gt;\t\t&lt;script&gt;\t\t\tvar mvs = [&quot;西施&quot;,&quot;貂蝉&quot;,&quot;王昭君&quot;,&quot;杨贵妃&quot;];\t\t\t$(function()&#123;\t\t\t\t$.each(mvs,function()&#123;\t\t\t\t\t$(&#x27;#mv&#x27;).append(&quot;&lt;option&gt;&quot;+this+&quot;&lt;/option&gt;&quot;);\t\t\t\t&#125;);\t\t\t&#125;);\t\t&lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t\t&lt;select id=&quot;mv&quot;&gt;\t\t\t&lt;option&gt;四大美女&lt;/option&gt;\t\t&lt;/select&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n3、列表左右选择案例需求\n\n\n\n\n示例代码\n1234567891011121314151617181920212223242526272829303132333435363738394041&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;\t\t&lt;script&gt;\t\t\tfunction run1()&#123;\t\t\t\t$(&#x27;#left option:selected&#x27;).appendTo(&#x27;#right&#x27;);\t\t\t&#125;\t\t\tfunction run2()&#123;\t\t\t\t$(&#x27;#left option&#x27;).appendTo(&#x27;#right&#x27;);\t\t\t&#125;\t\t\tfunction run3()&#123;\t\t\t\t$(&#x27;#right option:selected&#x27;).appendTo(&#x27;#left&#x27;);\t\t\t&#125;\t\t\tfunction run4()&#123;\t\t\t\t$(&#x27;#right option&#x27;).appendTo(&#x27;#left&#x27;);\t\t\t&#125;\t\t&lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t\t&lt;select id=&quot;left&quot; multiple=&quot;multiple&quot; style=&quot;width:100px;height:100px&quot;&gt;\t\t\t&lt;option&gt;北京&lt;/option&gt;\t\t\t&lt;option&gt;上海&lt;/option&gt;\t\t\t&lt;option&gt;广州&lt;/option&gt;\t\t\t&lt;option&gt;深圳&lt;/option&gt;\t\t&lt;/select&gt;\t\t&lt;input type=&quot;button&quot; value=&quot; &gt; &quot;  onclick=&quot;run1()&quot;/&gt;\t\t&lt;input type=&quot;button&quot; value=&quot; &gt;&gt; &quot;  onclick=&quot;run2()&quot;/&gt;\t\t&lt;input type=&quot;button&quot; value=&quot; &lt; &quot;  onclick=&quot;run3()&quot;/&gt;\t\t&lt;input type=&quot;button&quot; value=&quot; &lt;&lt; &quot;  onclick=&quot;run4()&quot;/&gt;\t\t&lt;select id=&quot;right&quot; multiple=&quot;multiple&quot; style=&quot;width:100px;height:100px&quot;&gt;\t\t&lt;/select&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n2、Ajax参考：jQuery AJAX 方法 | 菜鸟教程 (runoob.com)\n","slug":"jQuery2","date":"2024-10-16T08:39:46.372Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"一、jQuery（一）概述1、jQuery概念\njQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。\n2、jQuery的优势\n兼容CSS3，CSS3风格的选择器，兼容各种浏览器。\n使用非常广泛，说明文档详细，社区活跃。\n丰富的插件。（表单校验插件、EasyUI）\n\n3、jQuery版本说明\n压缩版和非压缩版功能代码一模一样，区别仅为压缩版将所有的回车换行全部删掉，并且删除了绝大部分的注释，使得代码没有格式地堆在一起。这样虽然牺牲了代码的可读性，但可以大大减少回车换行和注释占用的空间，功能和原来也是相同的。\n非压缩版适合于学习jQuery查看源码。\n压缩版适合于正式开发。\njQuery2.0及后续版本不再支持IE6&#x2F;7&#x2F;8浏览器\n4、jQuery的引入jQuery版本有很多，不同版本的jQuery之间方法和功能有一定改变。\n为了教学统一，我们统一使用jquery-1.11.3版本。\n（1）导入jQuery文件到项目中这里可以修改jQuery文件的文件名。\n   案例中将jquery-1.11.3.js 改名为 jquery.js\n\n（2）在使用jQuery的html页面引入\n\n（二）jQuery入门案例基本语法：\njQuery(选择器);\n$(选择器); 常用\n选择器的作用：选择html的某个或某些标签\n1234567891011121314151617181920212223&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;\t\t&lt;script&gt;  \t\t    window.onload=function()&#123;               //js方式获取对象，访问属性或方法  \t\t       var dd = document.getElementById(&#x27;dd1&#x27;);  \t\t       alert(dd.innerHTML);                //jQuery方式获取对象，方法属性或方法  \t\t        //var dd = jQuery(&#x27;#dd1&#x27;);  \t\t        var dd1 = $(&#x27;#dd1&#x27;); //dd1是jQuery对象  \t\t        alert(dd1.html());  \t\t    &#125;        &lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t\t&lt;div id=&quot;dd1&quot;&gt;div1&lt;/div&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n\n\n以上代码，#dd1为jQuery的选择器中的一种（id选择器），简化了js的代码。\n（三）jQuery基本选择器jQuery和CSS一样，也有选择器概念，即选择性获取某些标签对象。\njQuery有大量复杂选择器，这里先介绍三个最常用的基本选择器。\nID选择器    $(‘#标签id属性值’)  \n元素选择器   $(‘#标签名’)\n类选择器   $(‘.标签class属性值’)\n1 ID选择器作用：根据标签的id属性值，选择html页面的某个标签，获取jQuery对象。\n$(‘#标签id属性值’)\n代码准备\n123456789&lt;script&gt;\t$(function()&#123; //页面加载完成时，获取对应的标签对象，这里后面会详细讲\t\t//获取id为r01的标签对象&#125;);\t\t&lt;/script&gt;&lt;input type=&quot;radio&quot; name=&quot;hobby&quot; value=&quot;敲代码&quot; id=&quot;r01&quot;/&gt;\n\n\n\n示例代码\nvar r01 &#x3D; $(‘#r01’);\n2 标签选择器作用：根据标签名，选择html页面上的某个或某些对应的标签。获取到的是jQuery对象，也可能是数组。\n$(‘#标签id属性值’)\n代码准备\n123456789101112&lt;script&gt;\t$(function()&#123;\t\t//获取所有li标签\t\t&#125;);\t\t&lt;/script&gt;&lt;ul&gt;    &lt;li&gt;苹果&lt;/li&gt;    &lt;li&gt;香蕉&lt;/li&gt;    &lt;li&gt;橘子&lt;/li&gt;    &lt;li&gt;葡萄&lt;/li&gt;&lt;/ul&gt;\n\n\n\n示例代码\n12var fruits = $(&#x27;li&#x27;);alert(fruits.length);\n\n\n\n3 class选择器作用：根据标签的class属性的值，选择html页面上的某个或某些对应的标签。获取到的是jQuery对象，也可能是数组。\n$(‘#标签class属性值’)\n代码准备\n12345678910&lt;script&gt;\t$(function()&#123;\t\t//获取class为aaa的标签\t&#125;);&lt;/script&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;敲代码&quot; /&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;调试bug&quot; class=&quot;aaa&quot;/&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;谈需求&quot; class=&quot;aaa&quot;/&gt;\n\n\n\n示例代码\n12var hs= $(&#x27;.aaa&#x27;);alert(hs.length);\n\n（四）jQuery对象和JS对象互相转换jQuery对象只能调用jQuery中的属性和方法，不能调用js对象中的属性和方法\njs对象只能调用js中的属性和方法，不能调用jQuery对象中的属性和方法\n但是：\n实际开发中，经常会涉及到这两种对象的混用，需要学习jQuery对象和JS对象的互转。\n1、jQuery对象转成js对象开发中，为了使用JS方法和属性，我们也会选择将jQuery对象转回JS对象。\n语法格式：var js对象 &#x3D; jQuery对象[0];  或  var js对象 &#x3D; jQuery对象.get(0);\nJq对象，本质：是一个js数组\n代码准备\n1234567&lt;script&gt;\twindow.onload = function()&#123;\t\t//jQuery对象转换成js对象\t\t\t\t\t&#125;&lt;/script&gt;&lt;div id=&quot;dd1&quot;&gt;DIV&lt;/div&gt;\n\n\n\n示例代码\n12345var d = $(&#x27;#dd1&#x27;);var jsd = d[0];var jsd2 = d.get(0);alert(jsd.innerHTML);alert(jsd2.innerHTML);\n\n2、js对象转成jQuery对象开发中，我们为了方便开发，会将JS对象转为jQuery对象使用；\n:::success格式：var jQuery对象 &#x3D;  $(js对象)\n:::\n代码准备\n12345678&lt;script&gt;\twindow.onload = function()&#123;\t\t\t\t//js对象转换成jQuery对象\t&#125;&lt;/script&gt;&lt;div id=&quot;dd1&quot;&gt;DIV&lt;/div&gt;\n\n示例代码\n123var dd = document.getElementById(&#x27;dd1&#x27;);var jdd = $(dd);alert(jdd.html());\n\n（五）jQuery页面加载完成时执行代码页面加载完成时执行某个函数\n1、js两种方式:::success1、\n2、window.onload &#x3D; function(){}\n:::\n2、jQuery三种方式:::success$(document).ready(function(){})\n$().ready(function(){})\n$(function(){})\n:::\n示例代码\n123456789101112131415161718&lt;script&gt;\t/*\t\t   $(document).ready(function()&#123;\t\t   \t   alert($(&#x27;#dd1&#x27;).html());\t\t   &#125;);\t*/\t\t/*\t\t   $().ready(function()&#123;\t\t   \t   alert($(&#x27;#dd1&#x27;).html());\t\t   );\t*/\t\t\t/*\t\t    $(function()&#123;\t\t    \t alert($(&#x27;#dd1&#x27;).html());\t\t    &#125;);\t\t*/&lt;/script&gt;&lt;div id=&quot;dd1&quot;&gt;区域块...&lt;/div&gt;\n\n注意： jQuery的方式会先于 window.onload执行。因为jQuery的方式是document加载完成后执行。\n（六）jQuery的动画效果以下所有动画效果方法中都有两个参数：\nspeed   动画效果的持续时间，单位：毫秒 \n一般快速效果设置500，正常效果设置1000即可（也可使用字符串slow）\nfn      动画效果成功展示完成后，回来调用的函数。（回调函数）\n1、基本效果（放大缩小滑动）\n\n\n属性名\n属性说明\n\n\n\nshow(speed,fn);\n显示元素\n\n\nhide(speed,fn);\n隐藏元素\n\n\ntoggle(speed,fn);\n1、使得显示元素隐藏2、使得隐藏元素显示\n\n\n代码准备\n1234567891011121314151617&lt;script&gt;function myhide()&#123;\t//实现隐藏&#125;\t\tfunction myshow()&#123;\t//实现显示\t&#125;function mytoggle()&#123;\t// 实现隐藏时显示，显示时隐藏&#125;\t\t\t&lt;/script&gt;&lt;div&gt;\t&lt;input type=&quot;button&quot; value=&quot;隐藏图片 hide&quot; onclick=&quot;myhide()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;显示图片 show&quot; onclick=&quot;myshow()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;显隐图片 toggle&quot; onclick=&quot;mytoggle()&quot;  /&gt;&lt;/div&gt;&lt;img src=&quot;img/1.jpg&quot; id=&quot;img&quot; width=&quot;700px&quot; height=&quot;500px&quot;  /&gt;\n\n示例代码\n123456789101112131415function myhide()&#123;\t//$(&#x27;#img&#x27;).hide();\t//$(&#x27;#img&#x27;).hide(2000);\t$(&#x27;#img&#x27;).hide(2000,function()&#123;alert(&#x27;byebye&#x27;)&#125;);&#125;\t\tfunction myshow()&#123;\t//$(&#x27;#img&#x27;).show();\t//$(&#x27;#img&#x27;).show(2000);\t$(&#x27;#img&#x27;).show(2000,function()&#123;alert(&#x27;hello&#x27;)&#125;);&#125;function mytoggle()&#123;\t\t//$(&#x27;#img&#x27;).toggle();\t\t//$(&#x27;#img&#x27;).toggle(2000);\t\t\t\t$(&#x27;#img&#x27;).toggle(2000,function()&#123;alert(&#x27;toggle&#x27;)&#125;);&#125;\n\n2、滑动效果（上下滑动）\n\n\n属性名\n属性说明\n\n\n\nslideDown(speed,fn);\n显示元素\n\n\nslideUp(speed,fn);\n隐藏元素\n\n\nslideToggle(speed,fn);\n1、使得显示元素隐藏2、使得隐藏元素显示\n\n\n代码准备\n123456789101112131415161718&lt;script&gt;function myslideUp()&#123;\t\t//实现向上滑动&#125;\t\tfunction myslideDown()&#123;\t\t //实现向下滑动&#125;function myslideToggle()&#123;//实现上下滑动&#125;&lt;/script&gt;&lt;div&gt;\t&lt;input type=&quot;button&quot; value=&quot;隐藏图片 slideUp&quot; onclick=&quot;myslideUp()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;显示图片 slideDown&quot; onclick=&quot;myslideDown()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;显隐图片 slideToggle&quot; onclick=&quot;myslideToggle()&quot;  /&gt;&lt;/div&gt;&lt;img src=&quot;img/1.jpg&quot; id=&quot;img&quot; width=&quot;700px&quot; height=&quot;500px&quot;  /&gt;\n\n示例代码\n12345678910111213141516function myslideUp()&#123;\t\t//$(&#x27;#img&#x27;).slideUp();\t\t//$(&#x27;#img&#x27;).slideUp(2000);\t\t$(&#x27;#img&#x27;).slideUp(2000,function()&#123;alert(&#x27;up&#x27;)&#125;);&#125;\t\tfunction myslideDown()&#123;\t\t //$(&#x27;#img&#x27;).slideDown();\t\t //$(&#x27;#img&#x27;).slideDown(2000);\t\t $(&#x27;#img&#x27;).slideDown(2000,function()&#123;alert(&#x27;down&#x27;)&#125;);&#125;function myslideToggle()&#123;\t\t  //$(&#x27;#img&#x27;).slideToggle();//$(&#x27;#img&#x27;).slideToggle(2000);$(&#x27;#img&#x27;).slideToggle(2000,function()&#123;alert(&#x27;toggle&#x27;)&#125;);&#125;\n\n3、淡入淡出效果：（改变透明度的效果）\n\n\n属性名\n属性说明\n\n\n\nfadeIn(speed,fn);\n显示元素\n\n\nfadeOut(speed,fn);\n隐藏元素\n\n\nfadeToggle(speed,fn);\n1、使得显示元素隐藏2、使得隐藏元素显示\n\n\nfadeTo(speed,num,fn)\n改变透明度（num为大于0小于1的浮点数）\n\n\n代码准备\n12345678910111213141516171819202122232425262728&lt;script&gt;function myfadeIn()&#123;\t//实现淡入&#125;function myfadeOut()&#123;\t //实现淡出&#125;function myfadeToggle()&#123;\t //实现淡入和淡出&#125;function myfadeTo()&#123;\t //实现改变透明度为0.5&#125;&lt;/script&gt;&lt;div&gt;\t&lt;input type=&quot;button&quot; value=&quot;淡出 fadeOut&quot; onclick=&quot;myfadeOut()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;淡入 fadeIn&quot; onclick=&quot;myfadeIn()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;fadeToggle&quot; onclick=&quot;myfadeToggle()&quot;  /&gt;\t&lt;input type=&quot;button&quot; value=&quot;fadeTo&quot; onclick=&quot;myfadeTo()&quot;  /&gt;&lt;/div&gt;&lt;img src=&quot;img/1.jpg&quot; id=&quot;img&quot; width=&quot;700px&quot; height=&quot;500px&quot;  /&gt;\n\n示例代码\n1234567891011121314151617181920function myfadeIn()&#123;  //$(&#x27;#img&#x27;).fadeIn();  //$(&#x27;#img&#x27;).fadeIn(2000);  $(&#x27;#img&#x27;).fadeIn(2000,function()&#123;alert(&#x27;in&#x27;)&#125;);&#125;function myfadeOut()&#123;  //$(&#x27;#img&#x27;).fadeOut();  //$(&#x27;#img&#x27;).fadeOut(2000);  $(&#x27;#img&#x27;).fadeOut(2000,function()&#123;alert(&#x27;out&#x27;)&#125;);&#125;function myfadeToggle()&#123;  //$(&#x27;#img&#x27;).fadeToggle();  //$(&#x27;#img&#x27;).fadeToggle(2000);  $(&#x27;#img&#x27;).fadeToggle(2000,function()&#123;alert(&#x27;toggle&#x27;)&#125;);&#125;function myfadeTo()&#123;  $(&#x27;#img&#x27;).fadeTo(2000,0.5,function()&#123;alert(&#x27;xxx&#x27;)&#125;);&#125;\n\n（七）案例：定时弹出广告需求：\n页面加载完成3秒后，弹出广告。\n广告弹出5秒后，收起广告\n示例代码\n12345678910111213&lt;script&gt;\t$(function()&#123;\t\twindow.setTimeout(function()&#123;\t\t\t            $(&#x27;#img&#x27;).slideDown(&#x27;slow&#x27;,function()&#123;\t\t\t\t\t\t      window.setTimeout(function()&#123;\t\t\t\t\t\t\t$(&#x27;#img&#x27;).slideUp(&#x27;slow&#x27;);\t\t\t\t\t\t&#125;,5000);\t\t\t\t\t&#125;);\t\t\t\t&#125;,3000);\t\t\t&#125;);&lt;/script&gt;&lt;img src=&quot;img/1.jpg&quot; width=&quot;100%&quot; height=&quot;100px&quot; style=&quot;display:none;&quot; id=&quot;img&quot; /&gt;\n\n（八）jQuery选择器1、层级选择器和CSS层级选择器类似，可以通过层级关系获取对应标签对象。\n语法\nA B   获得A元素内部的所有的B元素。（后代）\nA&gt;B   获得A元素下面的所有B子元素。（子标签）\nA+B   获得A元素同级下一个B元素。（直接后兄弟）\nA~B   获得A元素之后的所有B元素。（一般后兄弟）\n代码准备\n1234567891011121314151617181920212223&lt;script&gt;\t$(function()&#123;\t\t//1、获取id为main的span标签 内 所有的div标签\t\t//2、获取id为main的span标签 内 子元素div标签\t\t//3、获取id为main的span标签 后 第一个div兄弟标签\t&#125;);&lt;/script&gt;&lt;span id=&quot;main&quot;&gt;\t&lt;div&gt;111111&lt;/div&gt;\t&lt;div&gt;222222&lt;/div&gt;\t&lt;div&gt;333333&lt;/div&gt;\t&lt;span&gt;\t\t&lt;div&gt;44444&lt;/div&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;div&gt;55555&lt;/div&gt;&lt;span&gt;\t&lt;div&gt;66666&lt;/div&gt;&lt;/span&gt;&lt;div&gt;77777&lt;/div&gt;\n\n示例代码\n1234567891011121314151617181920212223242526&lt;script&gt;\t$(function()&#123;\t\t        //1、获取id为main的span标签 内 所有的div标签\t\t\t\tvar ds1 = $(&#x27;#main div&#x27;);\t\t\t\tfor(var i=0;i&lt;ds1.length;i++)&#123;\t\t\t\t\talert(ds1[i].innerHTML);\t\t\t\t&#125;\t\t\t\t//2、获取id为main的span标签 内 子元素div标签\t\t\t\tvar ds2 = $(&#x27;#main&gt;div&#x27;);\t\t\t\tfor(var i=0;i&lt;ds2.length;i++)&#123;\t\t\t\t\talert(ds2[i].innerHTML);\t\t\t\t&#125;\t\t\t\t//3、获取id为main的span标签 后 第一个div兄弟标签\t\t\t\tvar ds3 = $(&#x27;#main+div&#x27;);\t\t\t\talert(ds3.html());\t\t\t\t//4、获取id为main的span标签 后 所有的div兄弟标签\t\t\t\tvar ds4 = $(&#x27;#main~div&#x27;);\t\t\t\tfor(var i=0;i&lt;ds4.length;i++)&#123;\t\t\t\t\talert(ds4[i].innerHTML);\t\t\t\t&#125;\t\t\t&#125;);&lt;/script&gt;\n\n2、属性选择器我们可以通过属性选择器，以属性名或者值来匹配对应标签\n语法\n:::success\n[属性名]\t\t\t\t获得有 指定属性名 的标签对象。\n[属性名&#x3D;值] \t\t\t获得 指定属性名等于指定值 的标签对象  \n[属性名*&#x3D;值] \t\t获得 指定属性名 含有 指定值 的标签对象  [value *&#x3D; a ]\n多个属性选择器可以组合使用\n[选择器1][选择器2][选择器3]\t，多个属性同时过滤。\n:::\n代码准备\n12345678910111213141516171819&lt;script&gt;\t$(function()&#123;\t\t//1、获取所有存在type属性的标签\t\t\t\t//2、获取所有type属性为radio的标签\t\t\t\t//3、获取所有type属性含有o的标签\t\t\t\t//4、获取所有input标签中的单选框，且name为sex的标签\t\t&#125;);\t&lt;/script&gt;用户名：&lt;input type=&quot;text&quot; name=&quot;uname&quot; value=&quot;小刘&quot;/&gt;&lt;br /&gt;密码：&lt;input type=&quot;password&quot; name=&quot;pwd&quot; value=&quot;123&quot;/&gt;&lt;br /&gt;性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;man&quot; /&gt;男\t  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;woman&quot; /&gt;女&lt;br /&gt;是否VIP：&lt;input type=&quot;radio&quot; name=&quot;vip&quot; value=&quot;no&quot; /&gt;不是 &lt;input type=&quot;radio&quot; name=&quot;vip&quot; value=&quot;yes&quot; /&gt;是&lt;br /&gt;\n\n\n\n示例代码\n123456789101112131415161718192021222324252627&lt;script&gt;\t$(function()&#123;\t\t//1、获取所有存在type属性的标签\t\tvar ss = $(&quot;[type]&quot;);\t\tfor(var i=0;i&lt;ss.length;i++)&#123;\t\t\talert(ss[i].value);\t\t&#125;\t\t//2、获取所有type属性为radio的标签\t\tvar ss2 = $(&#x27;[type=&quot;radio&quot;]&#x27;);\t\tfor(var i=0;i&lt;ss2.length;i++)&#123;\t\t\t alert(ss2[i].value);\t\t&#125;\t\t//3、获取所有type属性含有o的标签\t\tvar ss3 = $(&#x27;[type*=&quot;o&quot;]&#x27;);\t\tfor(var i=0;i&lt;ss3.length;i++)&#123;\t\t\t  alert(ss3[i].value);\t\t&#125;//4、获取所有input标签中的单选框，且name为sex的标签\t\t var ss4 = $(&#x27;input[type=&quot;radio&quot;][name=&quot;sex&quot;]&#x27;);\t\t for(var i=0;i&lt;ss4.length;i++)&#123;\t\t\t   alert(ss4[i].value);\t\t &#125;\t&#125;);\t\t&lt;/script&gt;\n\n3、基本过滤选择器通常我们在获取到一系列标签对象之后，会有一些筛选需求，\n这里就可以使用基本过滤选择器。\n:::success语法\n:first\t\t第一个\n:last\t\t最后一个\n:even\t偶数，索引从 0 开始计数 \n:odd\t\t奇数\n:not(..)\t除了指定内容。  1234:not(1)    234\n:eq(index) 获取指定索引的元素 &#x3D;\n:gt(index) 大于index索引的元素 &gt;\n:lt(index) 小于index索引的元素 &lt;\n:::\n代码准备\n123456789101112131415161718192021222324252627&lt;script&gt;\t$(function()&#123;\t\t//1、在所有DIV标签中，获取第一个div\t\t//2、在所有DIV标签中，获取最后一个div\t\t//3、在所有DIV标签中，获取所有偶数位的div\t\t//4、在所有DIV标签中，获取所有奇数位的div\t\t//5、在所有DIV标签中，获取除了第一位以外所有的div\t\t//6、在所有DIV标签中，获取索引等于1的div\t\t//7、在所有DIV标签中，获取索引大于1的div\t\t//8、在所有DIV标签中，获取索引小于1的div\t  &#125;);&lt;/script&gt;&lt;div&gt;11111111，索引是0&lt;/div&gt;&lt;div&gt;22222222，索引是1&lt;/div&gt;&lt;div&gt;33333333，索引是2&lt;/div&gt;&lt;div&gt;44444444，索引是3&lt;/div&gt;&lt;div&gt;55555555，索引是4&lt;/div&gt;&lt;div&gt;66666666，索引是5&lt;/div&gt;&lt;div&gt;77777777，索引是6&lt;/div&gt;&lt;div&gt;88888888，索引是7&lt;/div&gt;\n\n示例代码\n12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;script&gt;\t$(function()&#123;\t\t//1、在所有DIV标签中，获取第一个div\t\tvar dd1 = $(&#x27;div:first&#x27;);\t\talert(dd1.html());\t\t//2、在所有DIV标签中，获取最后一个div\t\tvar dd2 = $(&#x27;div:last&#x27;);\t\talert(dd2.html());\t\t//3、在所有DIV标签中，获取所有偶数位的div\t\tvar dd3 = $(&#x27;div:even&#x27;);\t\tfor(var i=0;i&lt;dd3.length;i++)&#123;\t\t\t\talert(dd3[i].innerHTML);\t\t&#125;//4、在所有DIV标签中，获取所有奇数位的div\t\tvar dd4 = $(&#x27;div:odd&#x27;);\t\t for(var i=0;i&lt;dd4.length;i++)&#123;\t\t\t  alert(dd4[i].innerHTML);\t\t&#125;//5、在所有DIV标签中，获取除了第一位以外所有的div\t\tvar dd5 = $(&#x27;div:not(:first)&#x27;);\t\tfor(var i=0;i&lt;dd5.length;i++)&#123;\t\t\t  alert(dd5[i].innerHTML);\t\t&#125;\t\t//6、在所有DIV标签中，获取索引等于1的div\t\tvar dd6 = $(&#x27;div:eq(1)&#x27;);\t\talert(dd6.html());\t\t//7、在所有DIV标签中，获取索引大于1的div\t\tvar dd7 = $(&#x27;div:gt(1)&#x27;);\t\tfor(var i=0;i&lt;dd7.length;i++)&#123;\t\t\t  alert(dd7[i].innerHTML);\t\t&#125;\t\t//8、在所有DIV标签中，获取索引小于1的div\t\tvar dd8 = $(&#x27;div:lt(1)&#x27;);\t\t\talert(dd8.html());\t&#125;);&lt;/script&gt;\n\n4、表单选择器:::success语法\n:input      $(“:input”) 所有元素  textarea  select 等标签也会选中\n:text       $(“:text”) 所有type&#x3D;”text”的元素\n:password   $(“:password”) 所有type&#x3D;”password”的元素\n:radio     ** $(“:radio”)** 所有type&#x3D;”radio”的元素\n:checkbox  ** $(“:checkbox”)** 所有type&#x3D;”checkbox”的元素\n:submit     $(“:submit”) 所有type&#x3D;”submit”的元素\n:reset      $(“:reset”) 所有type&#x3D;”reset”的元素\n:button     $(“:button”) 所有type&#x3D;”button”的元素\n:image     ** $(“:image”)** 所有type&#x3D;”image”的元素\n:file       **$(“:file”) **所有type&#x3D;”file”的元素\n:enabled   ** $(“:enabled”) **所有激活的input元素\n:disabled   $(“:disabled”) 所有禁用的input元素\n:selected   $(“:selected”) 所有被选取的input元素\n:checked    $(“:checked”) 所有被选中的input元素\t\t\n:::\n代码准备\n123456789101112131415161718192021222324252627282930313233&lt;script&gt;\t$(function()&#123;\t\t//1、获取可用的表单输入项\t\t//2、获取不可用的表单输入项\t\t//3、获取选中的复选框\t\t //4、获取国家下拉框中，被选中的option \t\t&#125;);&lt;/script&gt;&lt;h1&gt;不可用的表单输入项&lt;/h1&gt;&lt;input type=&quot;text&quot; disabled=&quot;disabled&quot; value=&quot;admin&quot; /&gt;&lt;input type=&quot;button&quot; value=&quot;不可用按钮&quot; disabled=&quot;disabled&quot; /&gt;&lt;h1&gt;复选框&lt;/h1&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;code&quot;/&gt;编程&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;swimming&quot; checked=&quot;checked&quot;/&gt;游泳&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;reading&quot; checked=&quot;checked&quot;/&gt;阅读&lt;hr /&gt;&lt;h1&gt;下拉选择框&lt;/h1&gt;城市：&lt;select id=&quot;city&quot;&gt;\t\t\t&lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;\t\t\t&lt;option value=&quot;bj&quot;&gt;北京&lt;/option&gt;\t\t\t&lt;option value=&quot;sh&quot;&gt;上海&lt;/option&gt;\t  &lt;/select&gt;&lt;hr /&gt;国家：&lt;select id=&quot;country&quot; multiple=&quot;multiple&quot;&gt;\t\t\t&lt;option value=&quot;China&quot; selected=&quot;selected&quot;&gt;中国&lt;/option&gt;\t\t\t&lt;option value=&quot;America&quot; selected=&quot;selected&quot;&gt;美国&lt;/option&gt;\t\t\t&lt;option value=&quot;Russia&quot;&gt;俄罗斯&lt;/option&gt;\t\t\t&lt;option value=&quot;England&quot;&gt;英国&lt;/option&gt;\t  &lt;/select&gt;\n\n\n\n示例代码\n123456789101112131415161718192021222324&lt;script&gt;\t$(function()&#123;\t\t//1、获取可用的表单输入项\t\tvar ss = $(&#x27;:enabled&#x27;);\t\tfor(var i=0;i&lt;ss.length;i++)&#123;\t\t\talert(ss[i].value);\t\t&#125;\t\t\t//2、获取不可用的表单输入项\t\tvar ss2 = $(&#x27;:disabled&#x27;);\t\tfor(var i=0;i&lt;ss2.length;i++)&#123;\t\t\t alert(ss2[i].value);\t\t&#125;\t\t\t//3、获取选中的复选框\t\tvar ss3 = $(&#x27;:checkbox&#x27;);\t\tfor(var i=0;i&lt;ss3.length;i++)&#123;\t\t\talert(ss3[i].value);\t\t&#125;\t\t//4、获取国家下拉框中，被选中的option \t\tvar ss4 = $(&#x27;:selected&#x27;);\t\tfor(var i=0;i&lt;ss4.length;i++)&#123;\t\t\t alert(ss4[i].innerHTML);\t\t&#125;&#125;);&lt;/script&gt;\n\n（九）jQuery操作css属性1、css()方式操作:::success语法\ncss(property)   取值\ncss(property, value) 赋值\ncss(map)\ncss(property, function)\nwidth()\nheight()\n:::\n代码准备\n1234567891011121314151617&lt;script&gt;        // 改变背景颜色\t\tfunction changeBgColor()&#123;\t\t&#125;\t\t//改变字体颜色和字体大小\t\t\tfunction changeColorAndFontSize()&#123;\t\t&#125;\t\t//改变宽度\t\tfunction changeWidth()&#123;\t\t\t\t&#125;&lt;/script&gt;&lt;div&gt;\t&lt;input type=&quot;button&quot; value=&quot;改变背景颜色&quot;  onclick=&quot;changeBgColor()&quot; /&gt;\t&lt;input type=&quot;button&quot; value=&quot;改变字体颜色和大小&quot;  onclick=&quot;changeColorAndFontSize()&quot; /&gt;\t&lt;input type=&quot;button&quot; value=&quot;改变宽度&quot;  onclick=&quot;changeWidth()&quot; /&gt;&lt;/div&gt;&lt;textarea id=&quot;tt&quot; style=&quot;width:300px;height:200px&quot;&gt;&lt;/textarea&gt;\n\n示例代码\n123456789101112&lt;script&gt;\tfunction changeBgColor()&#123;\t\t$(&#x27;#tt&#x27;).css(&#x27;background-color&#x27;,&#x27;yellow&#x27;);\t&#125;\t\tfunction changeColorAndFontSize()&#123;\t\t $(&#x27;#tt&#x27;).css(&#123;&#x27;color&#x27;:&#x27;red&#x27;,&#x27;fontSize&#x27;:&#x27;30px&#x27;&#125;);\t&#125;\tfunction changeWidth()&#123;\t\t  //$(&#x27;#tt&#x27;).css(&#123;&#x27;width&#x27;:function()&#123;return &#x27;500px&#x27;&#125;&#125;);\t\t   $(&#x27;#tt&#x27;).width(&#x27;600px&#x27;);\t&#125;&lt;/script&gt;\n\n2、addClass方式操作:::success语法\naddClass()\nremoveClass()\ntoggleClass()\n:::\n代码准备\n1234567891011121314151617181920212223242526&lt;style&gt;\t.blueDiv&#123;\t\tbackground-color: #87CEFA;\t\twidth:300px;\t\theight:300px;\t&#125;\t.redDiv&#123;\t\tbackground-color: red;\t\twidth:300px;\t\theight:300px;\t&#125;&lt;/style&gt;&lt;script&gt;\t\t$(function()&#123;\t\t\t//1、设置d1这个div标签样式为blueDiv\t\t\t//2、移除d2这个div标签的redDiv样式\t\t&#125;);        //3 使用toggleClass\t\tfunction mytoggle()&#123;\t\t&#125;&lt;/script&gt;&lt;input type=&quot;button&quot; value=&quot;toggleclass&quot; onclick=&quot;mytoggle()&quot;  /&gt;&lt;div id=&quot;d1&quot;&gt;11111&lt;/div&gt;&lt;div id=&quot;d2&quot; class=&quot;redDiv&quot;&gt;22222&lt;/div&gt;\n\n\n\n示例代码\n12345678910111213&lt;script&gt;\t$(function()&#123;\t\t//1、设置d1这个div标签样式为blueDiv\t\t$(&#x27;#d1&#x27;).addClass(&#x27;blueDiv&#x27;);\t\t//2、移除d2这个div标签的redDiv样式\t\t$(&#x27;#d2&#x27;).removeClass(&#x27;redDiv&#x27;);\t&#125;);function mytoggle()&#123;\t\t\t\t$(&#x27;#d1&#x27;).toggleClass(&#x27;blueDiv&#x27;);\t\t  &#125;&lt;/script&gt;\n\n\n\n3、案例：表格隔行换色效果\n\n代码准备\n12345678910111213141516171819202122&lt;table align=&quot;center&quot; width=&quot;50%&quot; border=&quot;1px&quot; cellspacing=&quot;0&quot;&gt;\t\t\t&lt;tr&gt;\t\t\t\t&lt;td&gt;ID&lt;/td&gt;\t\t\t\t&lt;td&gt;NAME&lt;/td&gt;\t\t\t\t&lt;td&gt;AGE&lt;/td&gt;\t\t\t&lt;/tr&gt;\t\t\t&lt;tr&gt;\t\t\t\t&lt;td&gt;001&lt;/td&gt;\t\t\t\t&lt;td&gt;张三&lt;/td&gt;\t\t\t\t&lt;td&gt;22&lt;/td&gt;\t\t\t&lt;/tr&gt;\t\t\t&lt;tr&gt;\t\t\t\t&lt;td&gt;002&lt;/td&gt;\t\t\t\t&lt;td&gt;李四&lt;/td&gt;\t\t\t\t&lt;td&gt;21&lt;/td&gt;\t\t\t&lt;/tr&gt;\t\t\t&lt;tr&gt;\t\t\t\t&lt;td&gt;003&lt;/td&gt;\t\t\t\t&lt;td&gt;王五&lt;/td&gt;\t\t\t\t&lt;td&gt;20&lt;/td&gt;\t\t\t&lt;/tr&gt;&lt;/table&gt;\n\n示例代码\n12345678910111213&lt;style&gt;\t.yellowcolor&#123;\t\tbackground-color:yellow;\t&#125;&lt;/style&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.js&quot; &gt;&lt;/script&gt;&lt;script&gt;\t$(function()&#123;\t\t //$(&#x27;tr:odd&#x27;).css(&#x27;backgroundColor&#x27;:&#x27;yellow&#x27;);\t\t // .css() 的设置为什么不可以？  .css()没有自动遍历的能力\t\t  $(&#x27;tr:odd&#x27;).addClass(&#x27;yellowcolor&#x27;);\t&#125;);&lt;/script&gt;\n\n\n\n","slug":"jQuery1","date":"2024-10-16T08:39:46.363Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"1、JavaScript介绍\n\nhtml：负责页面的基本结构（布局）\ncss：负责页面的样式（美化）\nJavaScript：负责页面交互行为（控制页面）\n\n\n1.1、什么是JavaScript？JavaScript：它是运行来浏览器端的一个脚本语言，早起诞生主要目的：对页面表单中的数据进行验证。\n1.2、JavaScript的历史JavaScript：LiveScript，是网景公司的产品。后期改名为JavaScript，简称JS。\n微软公司页发明脚本语言：JScript。\nECMA组织：欧洲计算机协会\nECMAScript：它是将JavaScript与JScript的语法进行结合，制定前端浏览器运行的脚本语言的标准\nECMAScript3.1 ：他是对ECMASctipt3.0进行小幅升级。后续将这个版本改为名：ECMAScript 5（ES5）\nECMAScript6.0（ES6）：它是对ES5进行一次较大的升级，重点后期需要学习ES新技术，改名：ECMAScript2015\n2、JavaScript入门2.1、js代码书写位置建议：将js代码书写在html文件中body结束标签的前面。\n123456&lt;body&gt;    &lt;!-- 正常书写html代码 --&gt;        &lt;script&gt;        alert(&quot;hello world!&quot;)    &lt;/script&gt;&lt;/body&gt;\n\n2.2、js和html结合方式\n内嵌式：在html页面中使用Script标签嵌入js代码【上课演示使用】\n123&lt;script&gt;     alert(&quot;hello world!&quot;)&lt;/script&gt;\n\n基于事件的方式：在html标签上可以直接书写js的事件，然后再事件属性中编写js代码\n1&lt;h1 onclick=&quot;alert(123)&quot;&gt;基于事件的方式&lt;/h1&gt;\n\n基于a标签书写：协议方式\n1&lt;a href=&quot;javascript:alert(333)&quot;&gt;百度&lt;/a&gt;\n\n外链式：将js代码书写在独立的js文件（扩展名为.js）,在页面上使用script引入【项目中实际使用】\n12// 一般会在项目中创建js文件夹，在其中书写当前项目所需要的所有js文件alert(&quot;陕西西安&quot;)\n\n12&lt;!-- 在html页面上使用script标签引入js文件 --&gt;&lt;script src=&quot;js文件的路径&quot;&gt;&lt;/script&gt;\n\n2.3、注意事项\n早起html版本中要求书写script标签的时候需要书写type属性，在html5之后，可以省略\n1&lt;script src=&quot;./js/01.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n\n如果使用script标签引入外部的js文件，那么在当前的script标签的内部不能再嵌套其他的js代码，即使书写了也不会生效。\n123&lt;script src=&quot;./js/01.js&quot; type=&quot;text/javascript&quot;&gt;    alert(&quot;高新区科技二路&quot;)&lt;/script&gt;\n\n2.4、js数据输出\n将数据输出到页面上\n使用alert弹窗输出【基本不用】\n使用浏览器控制台输出\n\n1234567891011// 第一种输出方式：将数据输出到网页上document.write(&quot;hello world&quot;)document.write(&quot;&lt;h1&gt;好好学习，天天玩耍&lt;/h1&gt;&quot;)// 第二种输出方式：alert弹窗【不用】// alert(&quot;nihao&quot;)// 第三种输出方式：输出到浏览器的控制台上【开发中最常用一种】console.log(123)console.log(&quot;xi an&quot;)console.log(&quot;西安&quot;)\n\n3、js的基础语法\n编程语言语法：注释、关键字、变量、数据类型、运算符、判断结构、循环结构、数组、函数、对象\n\n3.1、js中的注释\njs中的注释有两种写法：单行注释和多行注释，使用 注释对代码进行解释说明\n\n1234// 单行注释  // 注释内容/*    多行注释，注释的内容 */\n\n\n注意事项：多行注释不能嵌套\n\n要求：书写代码，必须添加注释\n3.2、变量【精通】变量：表示的是内存中的一块空间，用来存储数据，根据程序的运行，空间中的数据可以随时改变。\n\n手机、电脑的内存是用来运行安装的程序的。负责运行程序的内存空间中存放着程序（游戏）中需要的所有数据。例如：魔法值，游戏金币数等等\n\n3.3、定义变量ES6之前定义变量：\n12var 变量名var 变量名 = 值\n\nES6定义变量：\n1234let 变量名let 变量名 = 值const 变量名 = 值\n\n123456789101112131415161718// ES5定义方式// 浏览器在加载js代码的过程中// 遇到var，那么浏览器就会在内存中划分空间，并且将空间的名称命名为avar a// 划分空间，名称为b，将数据123存放到b空间中var b = 123console.log( a )console.log( b )// ES6定义方式let clet d = 456console.log( c )console.log( d )// 使用const定义const e = 789console.log( e );\n\n3.4、var、let、const区别【理解】\n\n\n\n能否重复划分空间\n能否改变空间的值\n\n\n\nvar\n可以重复划分空间\n可以\n\n\nlet\n不可以重复划分同名的空间\n可以\n\n\nconst\n不可以重复划分空间\n不可以修改\n\n\nconst：划分的空间中存储的数据永远不变，同时要求使用const划分空间的过程中必须存储数据。\n4、标识符4.1、什么是标识符标识符：程序中根据程序的需要，由程序员自己命名的一些符号。通常用作：变量名、数组名、函数名等\n标识符的书写规则：\n\n只能由大小写字母、数字、下划线、$ 组成\n不能以数字开头 ，例如：a10(√)     10a(×)\n严格区分大小写，例如：userName 与 username\n\n4.2、关键字关键字：JS语言赋予某些特定的单词符号的固定用法（含义）。\n例如：var 、let、const ： 在内存中划分（开辟）空间。\nif：完成判断的\nfor：完成循环\n4.3、保留字保留字：JS中预留的一些单词，在后续的JS升级过程中，可能将其变成关键字。\n4.4、标识符的书写细节程序中自定义的一些符号（自定义符号）：它必须遵守标识符的命名规则，同时不能是关键字。\n标识符的命名规范：驼峰式命名\n\n大驼峰：如果标识符由多个单词组成，每个单词首字母大写。例如：UserName，PersonAge\n小驼峰：如果标识符由多个单词组成，从第二个单词开始首字母大写。例如：userName，personAge\n\n在开发中，定义变量空间的变量名时：遵守小驼峰，同时要求见名知意。例如：年龄  let age ， 性别：let sex\n5、数据类型5.1、数据类型介绍JS语言默认是弱类型的语言。在使用let、var、const开辟内存空间之后，空间中是可以存放任意形式（类型）的数据。根据程序数据的形式不同，对数据进行类型划分：\nJS中的数据类型分为两大类：\n基本类型（基础类型）：\n\n数字类型：Number，程序中遇到的所有的数值\n具体的数字：1 , 3 ,  0 ,  3.14 , -1 , -100\n非数字：NaN ， 拿着数字和其他数据进行运算，最终得到非字值\nInfinity ： 无穷大，除数为零的运算结果\n\n\n字符串类型：String，程序中使用单引号、双引号、反引号引用起来的都是\n双引号：”abc”\n单引号：’陕西西安’\n反引号：${}其他的字符串数据\n\n\n布尔类型：Boolean，程序中对应的true、false\n未定义：Undefined，当程序中划分空间，但是没有给空间存储数据\n空：Null，主要用来在对象中\n\n引用类型（对象类型、复杂类型）：\n\n对象：Object\n\n1234567891011121314151617181920// 数字类型let a = 123;console.log(a);let b = 3.12;console.log(b);let c = NaN;console.log(c);       // 字符串let name = &quot;张三疯&quot;;console.log(name);let age = &#x27;23&#x27;;console.log(age);// let address = `张三住在陕西省西安市高新区`;let address = `$&#123;name&#125;住在陕西省西安市高新区`;console.log(address); // 布尔类型let boo = true;console.log(boo);\n\n5.2、输出数据类型123456789101112131415161718192021// typeof 变量名|数据// typeof(变量名|数据)let a = 12;console.log(typeof a , a);console.log(typeof NaN , NaN);let b = &quot;陕西西安&quot;;console.log(typeof(b) , b);let c = &quot;&quot;;  // 空串，也是字符串console.log(typeof(c) , c);let boo = false;console.log(typeof boo , boo);// 当定义一个变量，没有存储任何数据，js默认给空间存储的undefinedlet x;console.log(typeof x , x);// obj空间将来是存放对象的，而不是存放上面学过这些基本类型数据let obj = null;console.log(typeof obj , obj);\n\n5.3、类型转换在程序中对数据进行处理（各种运算）的时候，数据类型需要转成一致的，才能运算\n\n强制类型转换：必须手动编码进行类型转换\n\nparseInt( 数据|变量 ) ： 将数据转成整数\nparseFloat( 数据|变量 ) : 将数据转成小数\nNumber( 数据|变量 ) : 将数据转成Number类型\nString( 数据|变量 ): 将数据转成String类型\nBoolean( 数据|变量 ) : 将数据转成Boolean类型\n\n12345678910111213141516// parseIntlet a = 3.54;console.log( parseInt(a) );let b = &quot;3&quot;;console.log(parseFloat(b));// Number()console.log( Number(&quot;123&quot;) );// String()console.log( String(456) );// Booleanconsole.log( Boolean( true ) );     //trueconsole.log( Boolean( &quot;true&quot; ) );   //trueconsole.log( Boolean( &quot;false&quot; ) );  //true\n\n注意事项：\n\n在JS中所有非零值（1，-1，-2,   3.14 …..），非null，非undefined，非空字符串，非NaN转成boolean类型是都为true。\n在js中遇到零，null，undefined，空字符串（””）,NaN 转成boolean类型都为false\n\n\n隐式类型转换（自动类型转换）：不需要人为参与，程序自己动的转换类型\n123456let a = 12;let b = &quot;3&quot;;// 隐式类型转换，将b中的字符串3转成Number类型console.log( a * b );// 这里的+ 号，它是拼接的符号，将a中的12转成字符串，然后和后面b中的字符串拼接成&quot;123&quot;console.log( a + b );\n\n6、运算符6.1、运算符介绍在程序中完成各种运算。\njs中的运算：算术运算、比较运算、逻辑运算、三元(目)运算、赋值运算、字符串连接符\n6.2、算术运算\n运算符：+  -  *   &#x2F;    %(取余、求模)    ++(自加、加一)    –(自减、减一)\n\n12345678910let a = 10;let b = 3;// + - * / 与数学中的运算基本没有区别console.log( a + b );console.log( a - b );console.log( a * b );console.log( a / b );// % ： 取余运算，获取两个数相除之后的余数console.log( a % b );\n\n\n提示：一个数除以2，余数要么为0，要么为1 ， 余数为零，这个数就是偶数，余数为1，这个数就是奇数\n\n1234567891011let x = 3;let y;y = x++;console.log(x);console.log(y);let m = 3;let n;n = ++m;console.log(m);console.log(n);\n\n在有++ 或者 –  参与的混合运算中：考虑++ 或 – 的位置\n++或 – 在变量的左侧（前面）：先加（减），后用 （先给变量+1或-1，然后拿着变量与其他运算符运算）\n++或 – 在变量的右侧（后面）：先用 ， 再加（减），（先拿着变量与其他运算符进行运算，然后给变量+1或-1）\n小提示：如果单独的一个++或–运算，不考虑位置，直接+1或-1\n123let i=3;i++;console.log(i);\n\n6.3、比较运算\n运算符： &gt;     &gt;&#x3D;    &lt;    &lt;&#x3D;    &#x3D;&#x3D;(值等)   &#x3D;&#x3D;&#x3D;(全等)    !&#x3D;(值不等)    !&#x3D;&#x3D;(不全等)\n比较运算运算的结果：全部都是boolean值\n\n12345678910111213141516// 比较运算let a = 3;let b = &quot;4&quot;;console.log( a &gt; b );console.log( a &gt;= b );console.log( a &lt; b );console.log( a &lt;= b );// 值等 : 两个数据，只要通过类型转换后，值相等即可console.log( a == b );// 值不等 : 两个数据，只要值不相同即可console.log( a != b );// 全等 : 两个数据，要求值和类型都必须相同console.log( a === b );// 不全等 : 两个数据，要求值和类型都不相同console.log( a !== b );\n\n6.4、逻辑运算\n运算符：&amp;&amp; （与、且）      ||（或）     !(非)\n运算结果：boolean值（运算符两侧有boolean值时）\n\n12345let x = 22;// 检测x是否在10~20区间中console.log( x &gt;= 10 &amp;&amp; x &lt;= 20  );console.log( x &gt;= 10 || x &lt;= 20  );console.log( !(x &lt;= 20) );\n\n&amp;&amp; ： 两侧都为true，结果为true，否则为false\n|| ： 两侧都为false，结果为false，否则为true\n！： 非true为false，非false为true\n12345678910let x = 0;let y = &quot;zhangsan&quot;;// 逻辑与&amp;&amp;: 进行运算的时候，两侧不是一个明确的boolean值，这时会将某侧数据作为运算结果// 左侧如果是非零，非null，非undefined，非&quot;&quot;  ，非NaN，将右侧数据作为结果// 左侧如果是零，null，undefined，&quot;&quot;  ，NaN，将左侧数据作为结果// 短路运算：如果左侧能够确定结果，右侧不参与运算console.log( x &amp;&amp; y );// 逻辑或|| , 左侧为 零，null，undefined，&quot;&quot;  ，NaN ，将右侧作为结果处理// 逻辑或|| , 左侧为 非（零，null，undefined，&quot;&quot;  ，NaN） ，将左侧作为结果处理console.log( x || y );\n\n6.5、三元(目)运算\n运算符号：表达式1 ?  表达式2  :  表达式3\n运算规律：\n\n当表达式1的结果为true，将表达式2作为三元运算的结果，\n当表达式1的结果为false，将表达式3作为三元运算的结果\n\n\n123456789// 三元运算let a = 7;console.log( a % 2 === 0 ? &quot;偶数&quot; : &quot;奇数&quot; );// a%2 余数 要么是零，要么是1，零可以当作false，1可以当作trueconsole.log( a % 2 ? &quot;奇数&quot; : &quot;偶数&quot; );let x = 41;let y = 5;console.log( x &gt; y ? x : y );\n\n6.6、赋值运算\n=  : 赋值号，作用是将右侧表达式的结果存储到左侧的变量空间中\n\n12345let a = 12;let b = 13;13 = 14 ; // 语法错误，左侧不是一个变量空间let c = a + b;  // 右侧是可以计算出一个结果，左侧是一个变量空间\n\n\n算术运算与赋值运算混合运算：\n+&#x3D; ：  a+&#x3D;b  &#x3D;&#x3D;&#x3D;&#x3D;&gt;  a &#x3D; a + b\n-&#x3D; ：  a-&#x3D;b  &#x3D;&#x3D;&#x3D;&#x3D;&gt;  a &#x3D; a - b\n×&#x3D; ：  a×&#x3D;b  &#x3D;&#x3D;&#x3D;&#x3D;&gt;  a &#x3D; a × b\n&#x2F;&#x3D; ：  a&#x2F;&#x3D;b  &#x3D;&#x3D;&#x3D;&#x3D;&gt;  a &#x3D; a &#x2F; b\n%&#x3D; ：  a%&#x3D;b  &#x3D;&#x3D;&#x3D;&#x3D;&gt;  a &#x3D; a % b\n\n12345678910// 有两个变量，交换这两个变量空间的数据let x = 10;let y = 2;console.log(`x=$&#123;x&#125;,y=$&#123;y&#125;`);// 使用第三个空间完成交换let t = x;x = y;y = t;        console.log(`x=$&#123;x&#125;,y=$&#123;y&#125;`);// 思考：如何不使用第三个空间完成交换\n\n6.7、字符串连接符\n+它有三种作用：\n如果是右侧有具体的数字，他表示的是正数。例如：+3\n如果两侧都是具体的数字，他表示的是加法运算。 例如：3+2\n如果两侧有任意一侧的数据是字符串，这是他就是一个字符串连接符，最终会拼接成一个更长的字符串\n\n1234// 如果快速的将一个其他类型的数据转成字符串let a = 12;a+&quot;&quot; =======&gt; &quot;12&quot;String(a) =======&gt; &quot;12&quot;\n\n7、程序的执行流程程序执行流程：默认从上往下，从左往后执行。\n程序流程有三种：\n\n顺序结构，默认结构\n判断结构：if和switch\n循环结构：for、while、do while\n\n流程图：一个任务，从开始到结束整个过程。\n\n椭圆：流程的开始或者结束\n矩形：流程中需要执行的任务\n菱形：流程的判断，表示流程即将去哪个方向\n箭头：流程的一个任务\n\n7.1、判断结构7.1.1、单分支1234if判断结构if( 判断的条件表达式 )&#123;    条件成立后要执行代码  &#125;\n\n\nif判断结构的执行顺序：\n程序执行的过程中遇到if关键字，首先处理小括号中的条件表达式，\n​\t条件表达式结果为true，执行大括号中的代码，执行完之后，去执行的大括号后面的其他代码。\n​\t条件表达式结果为false，跳过大括号中的代码，继续执行if大括号后面的其他代码。\n\n12345678910111213141516let a = 13;// 输出偶数或者奇数if( a % 2 === 0 )&#123;    console.log(&quot;偶数&quot;);&#125;if( a % 2 === 1 )&#123;    console.log(&quot;奇数&quot;);&#125;console.log(&quot;game over.....&quot;);if( a &gt;= 10 &amp;&amp; a &lt;= 20 )&#123;    console.log(&quot;在10~20范围内&quot;);&#125;\n\n7.1.2、双分支123456// if 和 else 结构if( 判断的条件表达式 )&#123;    条件成立后要执行的代码&#125;else&#123;    条件不成立要执行的代码&#125;\n\n\n执行过程：\n当if的条件表达式为true，执行if后面的大括号中的代码\n当if的条件表达式为false，执行else后面大括号中的代码\n\n12345678let a = 3;let b = 6;// 找出最大值if( a &gt; b )&#123;    console.log(a);&#125;else&#123;    console.log(b);&#125;\n\n\n注意：if可以单独存在，但是else不能单独存在。只要有else，它的上面必须有if。\n\n7.1.3、多分支结构12345678910if( 条件表达式1 )&#123;    条件成立执行的代码1&#125;else if( 条件表达式2 )&#123;    条件成立执行的代码2    &#125;else if( 条件表达式2 )&#123;    条件成立执行的代码2    &#125;。。。else&#123;    所有条件都不成立时执行的代码&#125;\n\n1234567891011121314151617/*            指定一个月份，输出对应的季节            春季：3~5            夏季：6~8            秋季：9~11            冬季：12 、 1 、2*/    let month = 8;if( month &gt;= 3 &amp;&amp; month &lt;= 5 )&#123;    console.log(&quot;春季&quot;);&#125;else if( month === 6 || month === 7 || month === 8)&#123;    console.log(&quot;夏季&quot;);&#125;else if( month  &gt;= 9 &amp;&amp; month &lt;= 11)&#123;    console.log(&quot;秋季&quot;);&#125;else&#123;    console.log(&quot;冬季&quot;);&#125;\n\n\n课外练习：学生成绩划分级别\n0~59 ： E\n60~69 ： D\n70~79：  C\n80~89：  B\n90~100： A\n\n7.2、switch分支结构语法格式：\n123456789101112131415switch( 表达式 )&#123;  //  表达式必须可以计算出一个确定的结果      case 常量1:        语句;        break;    case 常量2:        语句;        break;    case 常量3:        语句;        break;    ......    default:        语句;        break;&#125;\n\n\n对学生成绩划分，使用switch完成：\n90100  A  9099  &#x2F; 10   9\n8089    B  8089 &#x2F;  10   8\n70~79    C\n60~69   D\n0~59      E\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script type=&quot;text/javascript&quot;&gt;\t\t\t/*\t\t\t * swicth练习：\t\t\t * 对学生的成绩划分：\t\t\t * 100      A              100 / 10     10\t\t\t * 90~99    A                  / 10     9.x\t\t\t * 80~89    B                  / 10     8.x\t\t\t * 70~79    C                  / 10     7.x\t\t\t * 60~69    D                  / 10     6.x\t\t\t * 0~59     E\t\t\t * \t\t\t * 在JS中有全局的函数（对象、方法）：\t\t\t * \t这些函数不是哪个对象所拥有的，也就是这些函数调用的时候可以通过函数名直接访问\t\t\t *  而不需要依赖任何的对象\t\t\t * \t\t\t * parseInt 方法，它的功能将一个指定的数据转成整数\t\t\t */\t\t\tvar score = 98;\t\t\tswitch( parseInt(score / 10) )&#123;\t\t\t\tcase 10:\t\t\t\tcase 9:\t\t\t\t\talert(&quot;A&quot;);\t\t\t\t\tbreak;\t\t\t\tcase 8:\t\t\t\t\talert(&quot;B&quot;);\t\t\t\t\tbreak;\t\t\t\tcase 7:\t\t\t\t\talert(&quot;C&quot;);\t\t\t\t\tbreak;\t\t\t\tcase 6:\t\t\t\t\talert(&quot;D&quot;);\t\t\t\t\tbreak;\t\t\t\tdefault:\t\t\t\t\talert(&quot;E&quot;);\t\t\t\t\tbreak;\t\t\t&#125;\t\t&lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n7.3、循环结构\n循环结构有三种写法：\n\nwhile循环\ndo while循环\nfor循环：重点中重点\n\n\n7.3.1、while循环1234// while格式：while( 循环条件 )&#123;\t循环体;&#125;\n\n123456789101112&lt;!--// 需求：计算1~10的和 --&gt;&lt;script type=&quot;text/javascript&quot;&gt;    //计算1~10的和    var sum = 0;    var x = 1;    while( x &lt;= 10 )&#123;        sum += x; // sum = sum + x;        x++;    &#125;    alert(sum);&lt;/script&gt;\n\n7.3.2、do while 循环12345// 语法格式do&#123;\t循环体;&#125;while( 循环条件 );\n\n1234567891011121314151617181920212223242526272829&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script type=&quot;text/javascript&quot;&gt;\t\t\t/*\t\t\t * do-while循环\t\t\t * \t\t\t *  alert()是将数据以弹窗的形式显示在页面上。\t\t\t *  document.write();\t\t\t *  document它是浏览器中的一个对象，这个对象不需要书写JS的过程中去new。\t\t\t * \t可以直接通过document引用直接使用。在document中有个write的方法，可以将数据写在浏览器上。\t\t\t */\t\t\t//document.write(&quot;你好&quot;);\t\t\tvar a = 1;\t\t\tdo&#123;\t\t\t\tif( a % 7 == 0 || parseInt(a / 10 ) == 7 || a % 10 == 7 )&#123;\t\t\t\t\tdocument.write(&quot;&lt;font color=&#x27;red&#x27; size=&#x27;7&#x27;&gt;过&lt;/font&gt;&quot;)\t\t\t\t&#125;else&#123;\t\t\t\t\tdocument.write(&quot;&lt;font color=&#x27;blue&#x27; size=&#x27;5&#x27;&gt;&quot;+a+&quot;&lt;/font&gt;&amp;nbsp;&amp;nbsp;&quot;)\t\t\t\t&#125;\t\t\t\ta++;\t\t\t&#125;while( a &lt;= 100 );\t\t\t\t\t&lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n7.3.3、for循环结构123for( 初始化表达式 ;  循环条件表达式  ;  循环变量更新表达式 )&#123;    循环体代码;&#125;\n\n\nfor循环的执行流程：\n遇到for关键字，先执行 初始化表达式 ， 立刻进入循环的条件表达式\n当条件为true，进行循环体的代码执行，将循环体所有代码全部执行完，进行循环变量更新表达式，执行完之后进入循环的条件表达式\n当条件为false，跳出循环\n\n1234// 输出1~100之间的每个数字for( let x = 1 ; x &lt;= 100 ; x++  )&#123;    console.log(x);&#125;\n\n\n练习：任意一个正整数，判断它是不是素（质）数。\n\n7.3.4、循环嵌套循环中嵌套着其他的循环，循环嵌套的执行顺序：\n外循环执行一次，内循环要从头到尾执行一遍，内循环没有执行完时，表示外循环的循环体没有结束。是不能进入下次外循环。只有内循环彻底执行完，才代表外循环一次结束。\n1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html&gt;\t&lt;head&gt;\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;\t\t&lt;title&gt;&lt;/title&gt;\t\t&lt;script type=&quot;text/javascript&quot;&gt;\t\t\t/*\t\t\t * 介绍循环嵌套：\t\t\t * 需求：输出1~100之间的所有素数（质数）。\t\t\t * 素数：一个数字只能被1和本身除尽的数字。\t\t\t * \t也就是说一个数字从2到本身-1之间是没有任何一个数字可以除尽。\t\t\t *  11 ： 只有1和11可以除尽，2 ~10之间没有任何一个数字可以除尽11.\t\t\t */\t\t\t// 定义一个循环提供1~100之间的每一个数字\t\t\tfor( var i = 2 ; i &lt;= 100 ; i++ )&#123;\t\t\t\t/*\t\t\t\t * i到底是不是素数呢？\t\t\t\t *  我们需要提供从2开始到i-1的每个数字，看能不能将i除尽，\t\t\t\t * 如果有任何一个数字将i除尽了，说明i不是素数。\t\t\t\t */\t\t\t\tvar temp = i;\t\t\t\tfor( var j = 2 ; j &lt; i ; j++ )&#123;\t\t\t\t\tif( i % j == 0 )&#123;\t\t\t\t\t\ttemp = j;\t\t\t\t\t\t// 除尽了，这个数字不是质数\t\t\t\t\t\t// 这时就不用再循环了，，直接跳出内循环，因为没必要再找其他可以除尽的数字\t\t\t\t\t\tbreak;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\t// 确定i到底是什么数字\t\t\t\tif( i == temp )&#123;\t\t\t\t\tdocument.write(&quot;&lt;font color=&#x27;red&#x27; size=&#x27;5&#x27;&gt;&quot;+i+&quot;,素数&amp;nbsp;&quot;);\t\t\t\t&#125;else&#123;\t\t\t\t\tdocument.write(&quot;&lt;font color=&#x27;blue&#x27; size=&#x27;3&#x27;&gt;&quot;+i+&quot;,不是素数&amp;nbsp;&quot;);\t\t\t\t&#125;\t\t\t&#125;\t\t&lt;/script&gt;\t&lt;/head&gt;\t&lt;body&gt;\t&lt;/body&gt;&lt;/html&gt;\n\n7.3.5、语句控制在JS中也有break 和 continue 关键字。\n8、函数的概念8.1、什么是函数函数：一段独立的代码，它封装（包裹）具体某个功能，需要被调用才能执行。\n8.2、函数的定义【重要】12345678// 函数声明方式function 函数名(  )&#123;    函数体;&#125;// 函数表达式(匿名函数)let 变量名 = function ()&#123;     函数体;&#125;\n\n1234567891011121314// 使用函数声明方式function abc()&#123;    console.log(&quot;函数体验&quot;);&#125;// 使用函数abc();// 函数表达式let aa = function()&#123;    console.log(&quot;匿名函数&quot;);&#125;// 调用函数aa();\n\n8.3、调用语句通过函数名调用函数，让函数体的代码执行。\n1函数名()\n\n注意：调用函数的时候，一定要在函数名的后面书写小括号。不写小括号，会得到函数整体。\n8.4、函数名书写规范函数名：它是一个标识符。必须遵守标识符的命名规则（开始不能以数字开始，由数字，字母、下划线、$组成，区分大小写，不能是关键字）\n函数名和变量名的命名规范一致：需要遵守小驼峰（多个单词，从第二个开始首字母大写）命名规范。\n函数名：应该和函数完成的具体功能一致。\n8.5、函数的参数【重要】函数的参数分为两种：\n\n形式参数（形参）：在定义函数的时候，书写在小括号中的变量，用来接收数据\n123function 函数名( 形参1 , 形参2 , 形参3 ... )&#123;    函数体&#125;\n\n实际参数（实参）：在调用语句处，小括号中书写的具体的数据，这些数据将会传递给函数上的形参\n1函数名( 值，值，值 .... );\n\n\n\n\n8.6、函数参数细节如果函数的形参和实参个数相同，他们会一一对应关系将每一个实参的数据传递给对应位置上的形参。\n8.6.1、参数不一致问题\n实参多，形参少：多余出来的实参不处理。\n实参少，形参多：参数会一一对应去接收数据，多出来的形参无法接收到数据，会有默认的undefined值\n\n\n8.6.2、参数的默认值形式参数多余实际参数，会导致形参接受不到数据，形参默认undefined，如果在函数体中直接使用这些没有接受到数据的形参，可能会导致程序出问题（意想不到的结果）。\n必须解决问题：\nES5写法：利于逻辑运算中||的短路使用场景\n123456789101112131415161718// 定义函数，计算2个数的和值function add( a , b )&#123;    /*    if( !a )&#123;        a = 0;    &#125;    if( !b ) &#123;         b = 0;    &#125;    */    // ES5中给形参设置默认值    a = a || 0;    b = b || 0;    console.log(a , b);    let sum = 0;    sum = a + b;    console.log(sum);&#125;\n\nES6写法：可以直接将默认的参数写到形参定义的位置上\n123456function add( a = 0 , b = 0 )&#123;    console.log(a , b);    let sum = 0;    sum = a + b;    console.log(sum);&#125;\n\n8.7、函数返回值【重要】8.7.1、返回值介绍函数返回值：通过函数调用语句，让函数执行，函数执行完，如果将具体的数据通过return 关键字返回，返回的数据称为函数返回值。\n12345function 函数名( 形参1，形参2 )&#123;    ......        return 数据|表达式|变量;&#125;\n\n难点：1、什么时候返； 2、具体应该返回什么数据 ； 3、具体函数哪个位置上返回数据\n\n需求：定义函数，打印奇偶数。\n分析：1、定义函数；2、需要接收参数；3、在函数体中判断数据的奇偶性；4、判断中将奇偶性打印\n\n\n需求：定义函数，计算两个数的乘积。\n分析：1、定义函数；2、接收两个数据；3、函数体完成乘积计算；4、需要将乘积返回给调用者\n\n8.7.2、返回值案例12345678910111213141516 /*     需求：定义函数，计算两个数的和值     分析：         1、定义函数         2、参数问题         3、返回和值  */function getSum( a , b )&#123;     let sum = a + b;     return sum;&#125;// 调用计算和值的函数let a = getSum( 1 , 4 );console.log( a );\n\n12345678910111213141516171819202122232425262728293031      /*          需求：编写函数实现返回两个数中的最大值          分析：              参数：需要参数              返回值：需要      */      function getMaxValue( a , b )&#123;          // 判断a和b的大小关系          if( a &gt; b )&#123;              return a;          &#125;else&#123;              return b;          &#125;      &#125;      console.log( getMaxValue(13,5) );// 先找一个空间，用来记录最大值，在判断结束之后，将最大值统一返回      function getMaxValue2( a , b )&#123;          let max;          // 判断a和b的大小关系          if( a &gt; b )&#123;              max = a;          &#125;else&#123;              max = b;          &#125;          return max;      &#125;// 使用三元运算符      function getMaxValue3( a , b )&#123;          return a &gt; b ? a : b;      &#125;\n\n8.7.3、返回值细节\n在函数中，需要返回数据，只能通过  return 数据|表达式|变量   返回具体的数据\n在函数一个函数中，可以存在多个return语句，但是只能执行一条，只要执行了return，函数就会立刻结束，并发会具体的数据。\n函数中的return 语句只能将数据返回给调用语句处【谁调用的，就返给谁】。\n函数中如果不需要返回任何数据，其实默认也是存在return语句，只是返回的undefined。【return ;】单独个return，不返回任何数据，目的是提前让函数结束\n一个return，只能返回一个具体的数值，如果要返回多个值，必须使用后期学习的对象或者数值对数据处理\n\n8.8、定义函数三部曲如何正确的根据需求编写一个函数。\n\n函数命名：做到见名知意\n函数参数：定义函数的时候要不要接收数据，需要接收数据，就必须在函数上书写参数\n函数返回值：函数要不要返回具体的数据，需要返回，就必须在函数中使用return 数据;\n\n123456789101112131415161718192021/*    需求：编写函数实现返回1-n之间所有整数和    分析：        1、定义函数：getSum        2、参数：需要，区间结束的值n        3、返回值：最终计算的和值  */function getSum( n )&#123;    // 需要一个变量，记录累加和    let sum = 0;    // 使用循环提供1~n之间的每个数字    for( let x = 1 ; x &lt;= n ; x++ )&#123;        sum += x;    &#125;    // 循环结束，计算出来总和，返回    return sum;&#125;console.log( getSum( 10 ));console.log( getSum( 100 ));console.log( getSum( 1000 ));\n\n9、变量的作用域作用域：变量在那些范围内可以使用。\n\n全局作用域：在整个程序中都可以使用的某个变量。全局变量。\n局部作用域：变量只能在程序某个指定的范围（函数内部）中使用。局部变量。\n\n123456789101112131415161718192021// 全局变量let a = 10;function show()&#123;    let b = 20;    // 局部位置使用全局位置上的变量    console.log(a);    console.log(b);    function demo()&#123;        // 局部位置        let c = 30;        // 局部变量和全局变量同名，在局部范围内使用同名的局部变量        let a = 40;        console.log(a);        console.log(b);        console.log(c);    &#125;    // 这里无法访问到c变量。c变量属于demo函数内部变量    console.log(c);    demo();&#125; show();\n\n注意：如果在全局位置上书写的for结构、if结构，其中定义变量的时候，没有使用关键字定义，或者使用var关键字定义，那么这些变量都会变成全局变量。\n10、系统函数系统函数：js已经内置好一些函数，在程序中，可以直接拿来使用。\n\nString(  数据  ) : 将指定的数据转成字符串\nNumber( 数据 ) ： 将数据转成数字类型\nBoolean( 数据 ) ： 将数据转成boolean值\nparseInt( 数据 )：\nparseFloat( 数据 )：\nisNaN( 数据 ) ： 判断数据是否为非数字，非数字，返回true，数字返回false\n\n11、数组定义11.1、什么是数组？数组：一组有序的数据，可以通过序号对其中每个数据进行精确的操作。\n针对程序中，如果单个的数据，可以使用let去定义不同的变量保存这些单一数据。但是如果数据量过大，单独定义变量，效率会比较低。在JS中提供数组的概念，利用数组可以一次性在内存中划分出更多的空间，同时可以存储更多的数据，还能提供统一的操作方式。\n11.2、数组相关的概念数组的编号(索引，下标，脚标) index：从零开始，到数组的长度-1结束。\n数组的长度(length) ： 表示的是数组中数据的个数（数组的空间）。\n数组名：给数组命名，通过数组名管理当前数组，就是一个普通的变量名。\n访问数组：数组名[下标]\n数组元素：数组的每个空间中存储的数据\n11.3、定义数组\n实例化方式\n1234//  通过new关键字，创建出一个数组let 数组名 = new Array();  // 创建了一个空数组// 创建数组的同时，给数组中存储数据let 数组名 = new Array(数据1，数据2，数据3......);\n\n12345678910111213// 实例化方式创建数组let arr = new Array();console.log(arr);// 实例化的时候给数组中存储数据let arr2 = new Array(&quot;张无忌&quot;,&quot;赵敏&quot;,&quot;灭绝师太&quot;);console.log(arr2);// 如果new 数组的时候，传递number类型的一个数字，// 那么这个数字表示是创建的数组空间的个数// 如果传递的是一个小数，程序报错。let arr3 = new Array(5.4);console.log(arr3);\n\n\n\n字面量方式：\n12let 数组名 = [];  // 空数组let 数组名 = [数据1，数据2，数据3......];  // 空数组\n\n12345// 字面量方式let arr4 = [];let arr5 = [&quot;周芷若&quot;,&quot;谢逊&quot;,123,true];console.log(arr4);console.log(arr5);\n\n11.4、容器思想容器：container，用来存储数据的。\n容器基本的四种操作：C(create)R(read)U(update)D(delete) : 增删改查\n数组本身也是一个容器，其中存储各种数据。对数组的操作，就是对数组进行CRUD操作。\n11.5、数组的操作【会用】11.5.1、访问数组空间数组名[下标]  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; 拿到某个已经存在的变量\n123456789let arr = [&quot;张无忌&quot;,&quot;张三疯&quot;,&quot;谢逊&quot;,&quot;张翠山&quot;,&quot;小龙女&quot;];console.log(arr);// 访问数组的空间console.log(arr[0]);// let a = &quot;赵敏&quot;;// console.log(a);// 超出数组空间得到undefinedconsole.log(arr[5]);\n\n11.5.2、获取数组长度数组名.length : 得到数组的长度\n12// 获取数组长度console.log(arr.length);\n\n11.5.3、数组的CRUD操作(通过下标完成)1234567891011121314151617181920212223let arr = [&quot;张无忌&quot;,&quot;张三疯&quot;,&quot;谢逊&quot;,&quot;张翠山&quot;,&quot;小龙女&quot;];console.log(arr);// 1、添加数据：数组名[新下标] = 值arr[5] = &quot;过儿&quot;;console.log(arr);// 建议存储数据时尽量保证空间连续arr[10] = &quot;郭芙&quot;;console.log(arr);// 2、修改数据：数组名[已存在下标] = 值arr[4] = &quot;刘亦菲&quot;;console.log(arr);// 3、获取数据：数组名[下标]console.log(arr[2]);console.log(arr[4]);console.log(arr.length);// 4、删除数据：delete 数组名[下标]// delete方式只能删除数组空间的数据，但是空间还存在，鸡肋delete arr[3]console.log(arr);\n\n11.6、数组遍历【重点】11.6.1、遍历概念遍历（迭代）：通过循环访问数组的每个空间。\n数组的遍历有两种方式：1、普通的for循环；2、使用数组自带的函数forEach完成\n11.6.2、数组遍历\n普通的for循环\n1234567let arr = [&quot;张无忌&quot;,&quot;张三疯&quot;,&quot;谢逊&quot;,&quot;张翠山&quot;,&quot;小龙女&quot;];console.log(arr);// 1、使用普通的for循环遍历数组for( let x = 0 ; x &lt; arr.length ; x++ )&#123;    // arr[x] = arr[x] + x;     console.log(arr[x]);&#125;\n\nforEach遍历\n1234567let arr = [&quot;张无忌&quot;,&quot;张三疯&quot;,&quot;谢逊&quot;,&quot;张翠山&quot;,&quot;小龙女&quot;]; // 2、使用数组自带的forEach函数遍历 // 数组的forEach函数，会自动的遍历数组， // 将遍历出来的某个空间的元素和下标交给我们调用forEach时传递函数 arr.forEach( function( value , index )&#123;     console.log(value , index); &#125; );\n\n11.7、数组的常用函数\nJS为数组这类容器，内置了大量的函数，可以快速完成对数组的某个特定操作。\n\n11.7.1、对数组没有影响函数\nconcat( 数据|数组 ) ： 将多个数组拼接到一起，形成一个新数组，并返回新数组\n123456let arr = [&quot;灭绝师太&quot;,&quot;范瑶&quot;];let arr2 = [&quot;成昆&quot;,&quot;杨逍&quot;];let newArr = arr.concat( arr2 )console.log(arr);console.log(arr2);console.log(newArr);\n\nindexOf( 数据 , 起始位置 ) ：从数组指定位置往后查询指定的元素，找到元素就返回下标，没有找到，返回-1\n123// 2、indexOflet x = newArr.indexOf( &quot;成昆&quot; , 0 );console.log(x);\n\nindexOf，可以间接的完成判断某个数据是否在数组中。调用indexOf返回的是-1，说明不存在。\n\nlastIndexOf( 数据 , 起始位置 ) ：从后往前找指定的元素，找到返回下标，没有找到返回-1\n\njoin( 分隔符 ) ： 使用指定的分隔符，将数组元素链接到一起，返回拼接后的字符串\n12let s = newArr.join(&quot;+&quot;);console.log(s);\n\nslice( 开始下标，结束下标 ) ： 对数组中的元素从 开始下标 截取到 结束下标，不包含结束下标位置上的元素，返回截取后的新数组\n123// 5、slice 截取数组let subArr = newArr.slice(1,3);console.log(subArr);\n\n11.7.2、对数组有影响函数\npush( 数据 ) ： 给数组末尾添加一个元素，并返回数组的新长度\n12345// 1、pushlet arr = [&quot;灭绝师太&quot;,&quot;范瑶&quot;,&quot;成昆&quot;,&quot;杨逍&quot;];console.log(arr);let x = arr.push(&quot;小芙&quot;);console.log(arr);\n\npop() : 删除数组末尾的元素，并返回被删除的元素\n1234// 2、poplet s = arr.pop();console.log(arr);console.log(s);\n\nshift() : 删除数组头部（第一个位置）元素，并返回被删除元素\n1234// 3、shiftlet ss = arr.shift();console.log(arr);console.log(ss);\n\nunshift() : 给数组的头部添加数据，返回数组的新长度\n123let y = arr.unshift(&quot;王凯&quot;,&quot;任磊&quot;);console.log(arr);console.log(y);\n\nsplice(  起始下标 ， 个数  ， 数据  ) ：  它可以对数组进行添加、修改、删除操作\n\n指定起始下标和个数，删除数组中的元素\n指定起始下标、个数，数据：添加和修改\n\n123456// 5、splice// let m = arr.splice(1 , 2 );// let m = arr.splice(1 , 2 , &quot;赵四&quot; , &quot;刘能&quot; , &quot;谢广坤&quot;);let m = arr.splice(1 , 1 , &quot;赵四&quot; );console.log(&quot;====&quot;,arr);console.log(&quot;----&quot;,m);\n\n12、JS的对象12.1、对象介绍对象：用来描述一个事物群体，任意一个对象，就是这个群体中某个具体的个体。\n任何一个个体，称为一个对象，但是这个个体他具体了这个群体的一些共性的特性（特征）。\n例如：\n​\t车：颜色、品牌、价格、运行\n​\t猫：颜色、名字、年龄、品种、爱吃鱼、睡懒觉、不抓老鼠\n对象：将事物的**属性（变量）和功能（动作、函数）**封装到一起。\n例如：人\n​\t属性：\n​\t\t年龄 age\n​\t\t性别 sex\n​\t\t姓名 name\n动作（行为特征）：\n​\t\t吃饭：\n​\t\t睡觉：\n​\t\t运动：\n​\t\t学习：\n12.2、对象分类\n内置对象：JS中已经存在的对象，可以在程序中直接使用，例如：Array，String、Date\n自定义对象：程序中根据自己的需求，手动创建的对象。\n\n12.3、创建对象\n通过new的方式：实例化方式\n12// 基于Object创建对象let 变量名 = new Object() ; // 空对象\n\n字面量方式：\n1let 变量名 = &#123;&#125;;\n\n1234567// 实例化对象let obj = new Object();console.log(obj);// 字面量方式let obj2 = &#123;&#125;;console.log(obj2);\n\n12.4、对象的属性和函数（方法）123456789101112131415161718192021222324252627282930313233// 实例化方式let obj = new Object();console.log(obj);// 添加属性(变量)obj.name = &quot;张无忌&quot;;obj.age = 23;obj.closed = true;console.log(obj);// 添加函数obj.say = function()&#123;    console.log(&quot;演示js对象中的函数&quot;);&#125;console.log(obj);// 字面量方式let obj2 = &#123;&#125;;obj2.addr = &quot;陕西省西安市&quot;;obj2.run = function()&#123;    console.log(&quot;字面量方式演示js对象中的函数&quot;);&#125;console.log(obj2);// 在通过字面量方式得到自定义对象的时候，可以直接在大括号中书写属性和函数let obj3 = &#123;    name:&quot;赵敏&quot;,    age:18,    sex:&quot;女&quot;,    sleep:function()&#123;        console.log(&quot;赵敏在休息。。。。&quot;);    &#125;&#125;;console.log(obj3);\n\n12.5、对象的属性（变量和函数）操作12345678910111213141516171819202122232425262728293031323334let pig = &#123;     name:&quot;佩奇&quot;,     sleep:function()&#123;         console.log(&quot;休息&quot;);     &#125; &#125;; console.log(pig); // 1、添加属性(变量)和函数 pig.sex = &quot;女&quot;; pig.age = 3; pig.play = function()&#123;     console.log(&quot;跳泥坑&quot;); &#125; console.log(pig);  // 2、获取属性和函数 console.log( pig.sex ); console.log( pig.age ); // console.log( pig.play ); // 调用对象的函数，让其运行 pig.play(); // 3、修改属性和函数 pig.name = &quot;乔治&quot;; pig.play = function()&#123;     console.log(&quot;玩泥巴&quot;); &#125; console.log(pig); // 4、删除属性和函数 delete pig.sex; delete pig.sleep; console.log(pig);\n\n12.6、遍历对象遍历对象需要使用：for in 语法完成\n1234for( let 变量名 in 对象 )&#123;    变量名=====&gt; 遍历出来的对象中的某个key（属性名）    获取对象中的某个属性对应的值=====&gt; 对象[变量名]&#125;\n\n1234567891011121314151617181920// 遍历对象let person = &#123;    name:&quot;张三&quot;,    age:18,    addr:&quot;西安&quot;,    sleep:function()&#123;        console.log(&quot;张三在休息&quot;);    &#125;,    work:function()&#123;        console.log(&quot;张三上班在摸鱼&quot;);    &#125;&#125;;console.log(person);// 使用for in 语句遍历对象// for in 语句遍历对象，得到的是对象中的所有属性名// 任意一个对象中都会包含若干个 key:value （键值对）这样的数据对// 在使用for in遍历对象的时候，遍历出来的键会保存在书写的变量中for( let key in person )&#123;    console.log(key ,  person[key] );&#125;\n\n\n对象中的属性：对象.属性名\n对象中的函数：对象.函数名()\n\n1.7、this关键字this关键字：主要用在对象的函数中。用来表示调用函数（方法）的那个对象。\n12345678910111213141516let p = &#123;    name:&quot;张无忌2&quot;,    age:18,    say:function()&#123;        console.log(this);        // console.log(&quot;姓名：张无忌，年龄：18&quot;);        console.log(`姓名：$&#123;this.name&#125;，年龄：$&#123;this.age&#125;`);    &#125;,    love:function()&#123;        console.log(this);        console.log(this.name+&quot;爱灭绝师太&quot;);    &#125;&#125;;console.log(p);p.say();p.love();\n\n13、String对象学习任何的内置对象：1、对象是用来解决什么问题？2、对象中有哪些属性或者函数\n13.1、String对象创建\n实例化方法\n12let 变量名 = new String();let 变量名 = new String(字符串数据);\n\n字面量方式(单双反引号引用起来)\n12let 变量名 = &quot;&quot;;let 变量名 = &quot;数据&quot;;\n\n注意：使用字面量方式得到的字符串，他属于基本类型数据，使用new String得到是一个字符串对象，不管那种方式得到的字符串都可以当作对象使用，可以去调用对象中的属性和函数。\n12345678910111213// 实例化let s = new String();let s2 = new String(&quot;好好学习，天天向上&quot;);console.log(s);console.log(s2);console.log(s2.length);// 字面量方式let s3 = &quot;&quot;;let s4 = &quot;赵四&quot;;console.log(s3);console.log(s4);console.log(s4.length);\n\n13.2、字符串属性和函数\nlength : 它是个属性，用来表示字符串中数据的个数\n12let s = &quot;abcde&quot;;console.log(s.length)\n\nindexOf( 数据 ，start ) ： 从前往后查找指定的数据在字符串中位置，找到返回下标，没找到返回-1\n\nslice( start ， end) ： 从start位置开始截取到end，返回截取的字符串，不包含end位置上的数据\n\nsubstring( start ， end) ： 从start位置开始截取到end，返回截取的字符串，不包含end位置上的数据\n\ntoLowerCase() : 将字符串中的字母转成小写\n\ntoUpperCase() : 将字符串中的字母转成大写\n\n\n123456789101112131415161718let s = &quot;Hello World&quot;;console.log(s.length);// 查找指定数据出现的位置let x = s.indexOf(&quot;y&quot; , 0);console.log(x);// 截取字符串let newS = s.slice(1,4);console.log(newS);let newS2 = s.substring(0,4);console.log(newS2);// 转大写console.log( s.toUpperCase() );// 转小写console.log( s.toLowerCase() );console.log(s.repeat(10));\n\n13.3、处理敏感数据1234567891011      let tel = &quot;13801234321&quot;;      // 使用slice截取，然后再拼接      let s = tel.slice(0,3);      let s3 = tel.slice(7);      console.log(s);      console.log(s3);      let newTel = s + &quot;****&quot; + s3;      console.log(newTel);// 使用后期学习正则表达式处理      console.log(tel.replace(/(1[3-9][0-9])(\\d&#123;4&#125;)(\\d&#123;4&#125;)/,&quot;$1****$3&quot;) );\n\n14、Number对象\ntoFixed( 数字 ) ： 保留几位小数\n1234let x = 3.13549;console.log(x);// 保留多少位小数，会进行四舍五入console.log(x.toFixed(2));\n\n15、Math对象15.1、Math中的函数介绍Math对象：表示的与数学有关的一些功能。Math对象中的属性和函数直接通过Math. 的方法调用。\n123456789101112131415161718// Math中的属性console.log( Math.E );console.log( Math.PI );let a = 3.14;// Math中的函数// ceil() : 向上取整console.log( Math.ceil( a ) );// floor() : 向下取整console.log( Math.floor( a ) );// pow() : 计算指数console.log(Math.pow(3,3));// sqrt() : 开平方console.log(Math.sqrt(7));// max() : 获取指定的数据中的最大值console.log(Math.max(1,4,2));// round() : 得到一个整数，进行四舍五入console.log(Math.round(3.46));\n\n15.2、随机数Math.random() ： 它产生的是0~1之间的随机小数，包含0，不包含1.\n需要对数据进行处理得到指定范围内的一个随机数。\n1234// 产生 min ~ max之间的随机数  包含maxMath.floor(Math.random()*(max-min+1)+min)// 产生 min ~ max之间的随机数   不包含maxMath.floor(Math.random()*(max-min)+min)\n\n16、Date对象Date对象：表达日期时间数据。\n\nnew Date() : 得到Date对象，表示的是当前系统的时间\nnew Date( “2022-8-10 12:31:27” ) : 得到Date对象，表示指定的日期时间数据\nnew Date(2022 , 7 , 11 , 12 , 13 , 41 ) ： 得到Date对象，表示指定的日期时间数据\n\n12345678910111213141516// 得到日期对象，直接new Date() 获取是当前系统的时间let d = new Date();console.log(d);// 将日期数据以本地化方式展示console.log(d.toLocaleString());// 传递一个字符串，指定的日期时间数据let d2 = new Date(&quot;2022-8-10 12:31:27&quot;);console.log(d2);console.log(d2.toLocaleString());// 分别指定年月日时分秒数据，但是注意月份默认是从0开始let d3 = new Date(2022 , 7 , 11 , 12 , 13 , 41 );console.log(d3);console.log(d3.toLocaleString());\n\n","slug":"javascript课件","date":"2024-10-16T08:39:46.354Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"1、课程介绍主要掌握HTML常用标签，能够灵活使用这些标签编写简单的网页\n2、HTML介绍2.1、什么是HTML?我们可以在浏览器里打开任意一个网站页面，它就是一个HTML，当然你所见到的网页都离不开HTML，作为专业的前端工程师，HTML是必学的技能之一，那么我先来认识一下它。\nHTML 指的是超文本标记语言 (Hyper Text Markup Language)语  言：人们用于交流的工具，计算机语言是人与计算机交流的工具。超文本：就是指页面内可以包含图片、链接，甚至音乐、视频等非文字元素。标  记：一种标记符，可以告诉浏览器如何显示其中的内容。\n比如：&lt;b&gt;加粗效果&lt;/b&gt;，&lt;b&gt;&lt;/b&gt;就是一种标记符。\n注意事项：HTML 不是一种编程语言（HTML没有变量、流程等），它是一种标记语言。标记语言是一套标记标签，例如：&lt;b&gt;字体加粗了&lt;/b&gt;&lt;i&gt;字体变倾斜了&lt;/i&gt;。HTML 使用标记标签来描述网页内容。\n2.2、为什么要使用HTML？因为HTML是一种标记语言，主要用于描述网页内容，告诉浏览器跟据我们的标记符的类型，显示相应的内容。HTML就像是我们的饭碗一样，如果吃饭这个只少也要算个标配吧！当然，对于我们的网站，HTML就是整个网站的骨架，如果不用HTML，我们很难想像网站长什么样子。所以这些基础知识我们必需掌握。\n2.3、在哪里使用HTML？HTML使用的地方非常的广泛，基于浏览器端所有能看到的网站都用到它。比如说：京东、淘宝\n2.4、HTML的发展历程超文本标记语言（第一版 HTML1.0）——在1993年6月作为互联网工程工作小组（IETF）工作草案发布（并非标准）：HTML 2.0——1995年11月发布，于2000年6月发布之后被宣布已经过时HTML 3.2——1997年1月14日，W3C推荐标准HTML 4.0——1997年12月18日，W3C推荐标准HTML 4.01——1999年12月24日，W3C推荐标准\nXHTML1.0——发布于2000年1月26日，是W3C推荐标准，推出的目的是为了更好的规范HTML语法，与HTML4.01几乎一模一样。(让HTML语法更严谨)XHTML 1.1，于2001年5月31日发布，W3C推荐标准。\nHTML 5——2014年10月29日，万维网联盟宣布，经过接近8年的艰苦努力，该标准规范终于制定完成。保留HTML4所有功能，增加很多新的功能。\n总结：1.HTML 4.01是最经典的HTML版本2.XHTML在PC上使用率高3.HTML5是最新的HTML版本，最前沿，新开发的网站几乎都是采用此版本。W3C：万维网联盟，是Web技术领域最具权威和影响力的国际中立性技术标准机构，该组织制定Web技术标准。\n3、前端开发工具（了解）俗话说“工欲善其事，必先利其器”，作为一名专业级的前端开发工程师来说，开发工具是必不可少的一部分，一款顺手的工具，能让工作变得更轻松，效率更高！但是记住，所有的工具只是拿来辅助的，不要产生太多的依赖，对于初学者来说，代码必需多敲。先来看看作为前端需要两大法宝吧！\n3.1、HTML开发工具可以用来写HTML编辑器有很多，甚至可以使用记事本来编辑，那作为专业的WEB前端工程师应该选用哪一款呢？我们首来看一下常见的编辑器：\n\nDreamwear：Adobe的一款可视化开发网页的软件HBuilder：强力的前端开发工具EditPLUS：简单便捷的轻型编辑软件NotePad++：轻量级多国语言编辑器Sublime：提示功能比较强大(轻，小，需要安装插件)Vi &#x2F; Vim ：Linux 系统上的最著名的文本&#x2F;代码编辑器VScode：强大的提示和高亮及emmet语法,让写代码更快捷Webstorm：被誉为“Web前端开发神器”、“最智能的JavaScript IDE”记事本：用来装逼的任意一个文本工具都可以开发 HTML，我们建议使用 VScode、Webstorm、HBuilder\n3.2、浏览器的认识\n常见的网页浏览器有：IE、Firefox、Safari（苹果电脑）、Opera、Google Chrome、百度浏览器、搜狗浏览器、猎豹浏览器、360浏览器、UC浏览器、傲游浏览器、世界之窗浏览器等，浏览器是最经常使用到的客户端程序。\n对于开发者而言，Firefox和Chrome是不错的选择，因为它们有强大开发者功能，前端调试样式和JavaScript，强力推荐Chrome 。\n3.3、BS与CS架构“BS” 和 “CS” 架构通常指的是两种不同的软件系统架构模型。\n它们分别代表  **Browser&#x2F;Server（浏览器&#x2F;服务器）**架构和  **Client&#x2F;Server（客户端&#x2F;服务器）**架构。\n3.3.1、CS架构在 CS 架构中，客户端（Client）应用程序安装在用户的计算机上，并通过网络与一个或多个服务器（Server）进行通信。客户端负责用户界面和部分业务逻辑处理，而服务器端则主要处理数据存储、管理和复杂的业务逻辑。这种架构的特点包括：\n\n客户端需要预先安装特定的应用程序。\n客户端应用可能需要定期更新。\n适用于固定用户群且对安全性要求较高的场景。\n\n3.3.2、BS架构BS 架构是基于 Web 的应用架构，其中客户端仅需要一个现代的 Web 浏览器即可访问服务器上的应用程序。在这种架构下：\n\n用户通过浏览器与服务器交互，无需在本地安装任何特殊软件。\n服务器提供动态生成的网页或 Web 应用程序。\n维护和升级更容易，因为只需要更新服务器端的应用程序。\n适用于广泛的用户群体，特别是那些需要从不同设备访问应用的情况。\n\n3.3.3、对比\n部署和维护：BS 架构更容易部署和维护，因为所有的工作都在服务器端完成，而 CS 架构可能需要在每个客户端上进行更新。\n性能：CS 架构可以利用客户端的计算资源，因此在某些情况下可能会有更好的性能。\n安全性：CS 架构由于其封闭性，在某些方面可能更安全，但 BS 架构可以通过各种安全措施来加强安全性。\n可访问性：BS 架构允许用户从任何地方使用任何设备访问应用程序，而 CS 架构通常需要特定的客户端软件。\n\n根据应用场景的不同，可以选择适合的架构来满足需求。随着云计算和移动互联网的发展，BS 架构变得越来越流行，因为它提供了更好的灵活性和可扩展性。\n4、HTML入门（掌握）4.1、如何编写一个最简单的HTML文件1）新建一个文本文档2）将后缀名改为.html（.htm）3）就可以在里面开始写HTML代码了\n12&lt;b&gt;好好学习，天天向上&lt;/b&gt;&lt;h1&gt;好好学习，天天向上&lt;/h1&gt;\n\n4）点击文件，使用浏览器打开查看效果\n4.2、HTML语法4.2.1、HTML文件格式一般我们写的代码需要存储在文件中，HTML代码一般保存在后缀名为 .html 或 .htm 文件中。\n比如  index.html   或者  index.htm ，所以为了让大家知道你文件中是什么内容，我们编写一个HTML网页时文件名的后缀为html或htm，建议使用 .html。\n注意：Win7操作：如果你的电脑没有显示扩展名，打开任一一个盘符：找到工具–&gt;选项–&gt;查看–&gt;高级选项–&gt;已知隐藏文件类型扩展名前面的沟去掉\n**Win10操作：**打开任一一个盘符：查看–&gt;文件扩展名勾选上\n**Win11操作：**打开任一一个盘符：查看–&gt;显示–&gt;文件扩展名  勾选上\n4.2.2、HTML标签格式1、什么是 HTML 标签？HTML标记标签也称为HTML标签(HTML tag)，由开始标签和结束标签组成，用于表现结构化的内容，将内容构造成为一个完整的网页。\n开始标签是被尖括号包围的元素名。结束标签是被尖括号包围的斜杠和元素名。\n1&lt;元素名&gt;内容&lt; /元素名&gt;\n\n例如：&lt;h1&gt;文本内容&lt;/h1&gt;   &lt;b&gt;&lt;/b&gt;\n2、单标签与双标签\n通常情况下，在我们的HTML中，标签分为两大类：\n1） 双标签双标签是指由开始标签和结束标签组成例如：&lt;b&gt;内容&lt;/b&gt;\n2） 单标签单标签是指没有结束标签的标签，由一个标签构成即为开始也是结束但根据XHTML的规范，标签一定要有结束，于是写上自结束符号： &#x2F;例如：&lt;hr /&gt;  &lt;br /&gt;\n注意：有些 HTML 元素没有结束标签，比如 &lt;br  /&gt;\n3、标签属性定义：属性主要用于设置标签的更多细节信息比如字体标签&lt;font&gt;，如果需要设置字体大小，我们就需要使用size属性\n基本语法：&lt;标签名 属性名=&quot;属性值&quot; 属性名=&quot;属性值&quot; ....&gt;\n12 &lt;!-- 设置字体的标签 --&gt;&lt;font size=&quot;7&quot;&gt;好好学习，天天向上&lt;/font&gt;\n\n注意事项：1.属性一般写在开始标签上2.属性总是以名称&#x2F;值对的形式存在（简称：名值对）3.属性的值建议大家使用双引号（可以加双引号，也可以加单引号，也可以不加引号；千万不要在一个值又加单引号又加双引）\n4、通用属性HTML 标签拥有通用属性，也就是每个标签都有属性（有个别例外）。Base，head，html，meta，script，style，title标签不提供下面的属性：\n\n\n\n属性\n值\n描述\n\n\n\nclass\nclass_rule 或 style_rule &#x2F;可以有多个：v1 v2  &#x2F;值是可以重复的\n元素的类(class)\n\n\nid\nid_name  &#x2F;值是唯一的\n元素的某个特定id\n\n\nstyle\n样式定义\n内联样式定义\n\n\ntitle\n提示文本\n显示于提示工具中的文本\n\n\n4.3、HTML基本结构12345&lt;!DOCTYPE html&gt;&lt;html&gt;\t&lt;head&gt;&lt;/head&gt;\t&lt;body&gt;&lt;/body&gt;&lt;/html&gt;\n\n\nDOCTYPE: 文档声明\nhtml: 标签告知浏览器其自身是一个 HTML 文档\nhead: 标签用于定义文档的头部（文档的描述信息）\nbody: 标签用于定义文档的主体（文档的主体内容）\n\n4.4、HTML基本结构认识1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;!-- 文档声明：位于文档的首行，告知浏览器文档使用哪种 HTML 或 XHTML 规范。让浏览器通过正确的方式解析我们的网页，使网页能正常显示。 --&gt;&lt;!DOCTYPE html&gt;&lt;!-- html标签：告诉页面这是一个HTML文档 \tlang:表示规则元素内容语言（了解）\t属性的值：\ten:表示英文\tzh:表示简体中文--&gt;&lt;html lang=&quot;en&quot;&gt;&lt;!--     head标签:就是一个网页的头,头部中的内容一般存放描述文档的信息。--&gt;&lt;head&gt;&lt;!--\tmeta元素可提供有关页面的元信息，比如针对搜索引擎和更新频度的描述和关键词等。    声明文件的编码是UTF-8的编码，告诉浏览器，你用什么编码去解析这个文件        UTF-8 : 国际通用码        GBK/GB2312 : 中文编码        这里的编码必需要和文件的编码完全一致--&gt;&lt;meta charset=&quot;UTF-8&quot; /&gt;&lt;!-- \tviewport：表示视区\tinitial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例--&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;!-- 兼容IE浏览器 --&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;&lt;!-- 提供给搜索引擎的关键字信息 --&gt;&lt;meta name=&quot;keywords&quot; content=&quot;中国第一门户网站&quot; /&gt;&lt;meta name=&quot;description&quot; content=&quot;代表中国，代表最牛的技术，代表互联网时代&quot; /&gt;&lt;!--title : 网页的标题，会显示在标题栏--&gt;&lt;title&gt;我是网页的标题&lt;/title&gt;&lt;/head&gt;&lt;!--     body标签:就是一个身体        一般来说:body里面的内容要显示出来--&gt;&lt;body&gt;我是未来中国最牛逼的IT从业者&lt;/body&gt;&lt;/html&gt;\n\n4.5、HTML注释语法：****\n含义：注释标签用来在源文档中插入注释。注释会被浏览器忽略。您可使用注释对您的代码进行解释，这样做有助于您在以后的时间对代码的理解。\n\n注意：注释不能嵌套\n​\t\t\t注释嵌套是错误的\n--&gt;\n\n4.6、HTML编码常见的编码格式有：\n\n\n\nUTF-8\n国际通用编码字符集，UNICODE的灵活版\n\n\n\nGBK&#x2F;GB2312\n中文编码字符集\n\n\nBIG5\n中文繁体字符集\n\n\niso8859-1\n西方欧洲语言字符集，通常叫做Latin-1\n\n\nUNICODE\n大字符集，包含了地球上所有语言的编码\n\n\n\nHTML的编码声明为： &lt;meta charset=&quot;utf-8&quot;/&gt;\n文件编码是指HTML文件保存到硬盘中的编码格式，一般在保存的时候设置，常见的开发工具都可在编辑的时候设置。\n注意：2个地方必须保持一致（文件编码+HTML编码声明）\n\n4.7、HTML的规范\n所有的HTML标签都必需使用尖括号包裹起来，比如： \nHTML标签通常是成对出现的，双标签必需要有开始标签和结束标签，比如：&lt;b&gt;和&lt;/b&gt;\nHTML标签不区分大小写（建议都使用小写，可读性更高）\n所有HTML双标签都可以是进行嵌套，但是不允许交叉嵌套\n\n\n5、HTML基本标签（掌握）5.1、基础标签5.1.1、标题标签hn标签不是一个标签，而是一组标签的缩写：h1  h2  h3  h4  h5  h6\n定义和用法： -  标签可定义标题， 定义最大的标题， 定义最小的标题。\n由于 h 元素拥有确切的语义，因此请您慎重地选择恰当的标签层级来构建文档的结构。因此，请不要利用标题标签来改变同一行中的字体大小。以后将使用CSS样式来制作效果。\n1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;!--         标题标签:            h1~h6:            一般页面上使用的h1~h4较多，通过以h2和h3为主        快速复制的快捷键：            shift + alt + ↓或↑           删除光标所在的行            ctrl + shift + k    --&gt;    &lt;h1&gt;今天有一件大事要发生了~~~~&lt;/h1&gt;    &lt;h2&gt;今天有一件大事要发生了~~~~&lt;/h2&gt;    &lt;h3&gt;今天有一件大事要发生了~~~~&lt;/h3&gt;    &lt;h4&gt;今天有一件大事要发生了~~~~&lt;/h4&gt;    &lt;h5&gt;今天有一件大事要发生了~~~~&lt;/h5&gt;    &lt;h6&gt;今天有一件大事要发生了~~~~&lt;/h6&gt;        今天有一件大事要发生了~~~~&lt;/body&gt;&lt;/html&gt;\n\n5.1.2、p标签定义和用法： 标签定义段落。\np 元素会自动在其前后创建一些空白（段间距）。浏览器会自动添加这些空间，您也可以在样式表中规定。\n以下代码标记了一个段落：\n123456&lt;!--     段落标签：p --&gt;&lt;p&gt;作为一个普通人，如果您没有在瑞士信贷银行存钱，那么您个人的利益应该不会受到直接影响。然而，这样的事件可能会对整个金融市场和经济产生一定的冲击和波动，可能会导致股市、汇市等的变化，因此可能间接地对您造成一定的影响。最好的做法是保持警惕，并及时关注相关新闻和市场动态。&lt;/p&gt;&lt;p&gt;从事件广泛影响来看，瑞信风波可能会影响整个金融体系的信用评级，导致公司、国家等重点主体的信用评级下调，增加金融系统的债务成本。微观来讲可能导致资金流向变化，增加货币贬值风险，对经济长期增长产生不利影响。继而投资者对整个金融市场的信任度下降，对于投资市场的长期发展产生不利影响。尤其会引起金融监管机构的更严厉的监管措施，减少金融机构的杠杆率，导致金融机构运营效率下降。&lt;/p&gt;&lt;p&gt;从事件广泛影响来看，瑞信风波可能会影响整个金融体系的信用评级，导致公司、国家等重点主体的信用评级下调，增加金融系统的债务成本。微观来讲可能导致资金流向变化，增加货币贬值风险，对经济长期增长产生不利影响。继而投资者对整个金融市场的信任度下降，对于投资市场的长期发展产生不利影响。尤其会引起金融监管机构的更严厉的监管措施，减少金融机构的杠杆率，导致金融机构运营效率下降。&lt;/p&gt;\n\n5.1.3、换行标签定义和用法 ： &lt;br&gt;可插入一个简单的换行符。\n&lt;br&gt; 标签是单标签（意味着它没有结束标签，因此这是错误的：&lt;br&gt;&lt;/br&gt;）。在 XHTML 中规定单标签也需要结束，把结束标签放在开始标签中，也就是 &lt;br /&gt;。\n注意：&lt;br&gt; 标签只是简单地开始新的一行，而当浏览器遇到  标签时，通常会在相邻的段落之间插入一些垂直的间距。而br 则不会。\n1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    好好学习     &lt;br&gt;&lt;br&gt;&lt;br&gt;    天天向上&lt;/body&gt;&lt;/html&gt;\n\n5.1.4、水平分割线定义和用法：&lt;hr&gt; 标签在 HTML 页面中创建一条水平线。\n水平分隔线（horizontal rule）可以在视觉上将文档分隔成各个部分。\n被水平线分隔的标题和段落：\n123&lt;h1&gt;这是大标题&lt;/h1&gt;&lt;hr /&gt;&lt;p&gt;这是一个段落&lt;/p&gt;\n\n5.2、文本标签5.2.1、加粗标签b和strong标签，用于页面上的某些文本数据加粗，后期如果需要，建议使用strong\n1&lt;p&gt;超级文本&lt;b&gt;标记语言&lt;/b&gt;是标准通用标记语言下&lt;strong&gt;的一个应用&lt;/strong&gt;，也是一种规范，一种标准，它通过标记符号来标记要显示的网页中的各个部分。&lt;/p&gt;\n\n5.2.2、倾斜（斜体）标签定义和用法 :   标签告诉浏览器把其中的文本表示为强调的内容。对于所有浏览器来说，这意味着要把这段文字用斜体来显示。\n在文本中加入强调也需要有技巧。如果强调太多，有些重要的短语就会被漏掉；如果强调太少，就无法真正突出重要的部分。这与调味品一样，最好还是不要滥用强调。注意： HTML5中建议使用  而不使用 \n5.2.3、变大或变小标签变大：big，\n变小：small\n1&lt;small&gt;且不停止其&lt;/small&gt;解释执行过程，&lt;big&gt;编制者&lt;/big&gt;只能通过显示效\n\n5.3、超链接标签超链接：主要功能完成页面上的点击跳转。\n1&lt;a href=&quot;https://www.baidu.com&quot;&gt;百度&lt;/a&gt;\n\n根据跳转的目标（地址）不同，超链接可以分为：外部链接、内部链接、锚点(哈希hash)链接\n5.3.1-外部链接通过超链接a标签，可以跳转到当前页面（项目）之外的其他的网站，称为外部链接\n123&lt;a href=&quot;https://www.baidu.com/&quot;&gt;百度&lt;/a&gt;&lt;a href=&quot;https://www.jd.com/&quot;&gt;京东&lt;/a&gt;&lt;a href=&quot;https://www.taobao.com/&quot;&gt;淘宝&lt;/a&gt;\n\n\n在a标签的href属性上，书写的时候，跳转外部地址的时候，需要书写完整的地址   协议:&#x2F;&#x2F;网址\n协议：https:   、 http:  、 ftp:   、 thunder:（迅雷自己的协议）\n\n关于a标签有两个重要的属性：\n\nhref：用于书写跳转的地址\ntarget：用于书写以什么方式打开的新页面\n_self : 默认值，在当前窗口打开\n_blank : 在一个新窗口中打开\n\n\n\n12&lt;a href=&quot;https://www.jd.com/&quot; target=&quot;_blank&quot;&gt;京东&lt;/a&gt;&lt;a href=&quot;https://www.taobao.com/&quot; target=&quot;_self&quot;&gt;淘宝&lt;/a&gt;\n\n5.3.2-内部链接在同一个项目（网站）中进行各个页面之间的跳转，称为内部链接。\n12345678910&lt;!-- 内部链接：a标签    内部链接跳转的地址，不需要书写协议，直接书写跳转的地址即可    地址书写有两种方式：        相对路径：        绝对路径：--&gt;&lt;a href=&quot;./02-认识超链接.html&quot; target=&quot;_blank&quot;&gt;认识超链接&lt;/a&gt; &lt;a href=&quot;./01-语义化标签.html&quot; target=&quot;_blank&quot;&gt;语义化&lt;/a&gt; &lt;a href=&quot;./day01/06.html&quot; target=&quot;_blank&quot;&gt;作业6&lt;/a&gt; \n\n5.3.3-锚点链接锚点链接：在同一个页面上，点击链接，可以跳转到当前页面的其他位置。\n一般页面上需要锚点链接的时候，页面内容非常的多，让用户直接去拖拽滚动条很不方便，因此可以给出一些快捷的跳转链接，用户点击链接直接切到当前页面的对应位置。\n\n锚点链接书写的时候需要注意：\n1、使用a标签，书写跳转的地址，需要使用#加锚点的id属性值\n2、需要使用任意的一个标签，在页面不同位置去定义锚点，标签上一般建议使用id属性去给锚点命名·\n\n1234567891011121314151617181920212223&lt;div id=&quot;top&quot;&gt;页面顶部&lt;/div&gt;&lt;a href=&quot;#inter&quot;&gt;国际新闻&lt;/a&gt;&lt;a href=&quot;#country&quot;&gt;国内新闻&lt;/a&gt;&lt;a href=&quot;#jie&quot;&gt;班导&lt;/a&gt;&lt;a href=&quot;#feng&quot;&gt;峰哥&lt;/a&gt;&lt;a href=&quot;#yang&quot;&gt;阳哥&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;inter&quot;&gt;国际新闻&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;country&quot;&gt;国内新闻&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;jie&quot;&gt;班主任花边新闻&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;feng&quot;&gt;峰哥故事&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;yang&quot;&gt;阳彬履历&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;#top&quot;&gt;顶部&lt;/a&gt;\n\n5.4、多媒体标签多媒体：通过不同的标签，可以将图片、视频、音频放到页面上。\n5.4.1-图片标签【重点】img:图片标签,单标签, 将图片显示在页面上\n​      src: 用于书写图片的路径（书写项目中的图片路径，也可以书写网络中的在线图片地址）\n​      alt: 当图片加载失败，无法显示的时候，浏览器会显示提示信息\n​      title: 鼠标悬停在图片上的提示信息\n​      width ： 设置图片的宽度\n​      height ： 设置图片的高度\n​      border ： 图片设置边框\n​    img设置页面上的图片，要么设置宽度，要么设置高度 ，另外一个值浏览器会根据图片的原始大小进行等比例缩放\n​    图片的扩展名：jpg、jpeg、png、gif、svg、webp\n1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;img src=&quot;./imgs/1.webp&quot; alt=&quot;雪景&quot; width=&quot;200px&quot;&gt;     &lt;img src=&quot;./imgs/2.webp&quot; alt=&quot;美女&quot; title=&quot;提示信息&quot; height=&quot;200px&quot;&gt;    &lt;img width=&quot;200&quot; src=&quot;https://img2.baidu.com/it/u=1574304958,174721775&amp;fm=253&amp;app=138&amp;size=w931&amp;n=0&amp;f=JPEG&amp;fmt=auto?sec=1679158800&amp;t=fd1f21be46df2eae1c32ac6cbb935dc0&quot; alt=&quot;&quot;&gt;&lt;/body&gt;&lt;/html&gt;\n\n5.4.2-video标签video : 视频标签\n​      src：书写视频文件的路径（本地、在线）\n​      controls:用于控制播放器上的控制按钮\n​      autoplay：自动播放\n​      muted：静音\n​      loop：单个视频循环播放\n​    针对音视频标签，即使添加 autoplay 属性，默认也不会自动播放，主要是浏览器对用户的保护\n12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;video width=&quot;500&quot; height=&quot;400&quot; controls=&quot;controls&quot; autoplay muted loop src=&quot;https://v2.kwaicdn.com/upic/2023/02/05/18/BMjAyMzAyMDUxODE5MzlfMjcwNTU4NTYwOF85NTUyOTkyOTc4M18xXzM=_hd15_B6eb6f24c42a96fa7578b54378df3ecf8.mp4?pkey=AAUliwtHICx8mpb6kfg460Adb4vIMhwvs8QfKj7wYBAB0b5JcfBC8r2ooYKo84xzVpV_zV3tK5n4TPJsu5pX3beDy8SvHW2dEkm6Db8yyUj5kjJOMS3ZE5h7TZ6lIoTTVNE&amp;tag=1-1679036723-unknown-0-qkiyfeixtz-b3f32b970b7fa1b9&amp;clientCacheKey=3xc8aak4gbszv6q_hd15.mp4&amp;di=af0bbda2&amp;bp=14944&amp;tt=hd15&amp;ss=vp&quot;&gt;&lt;/video&gt;     &lt;video src=&quot;./imgs/1.mp4&quot; controls&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;\n\n5.4.3-audio标签​    audio : 音频标签\n​      src : 书写音频文件的地址（在线，离线）\n​      controls ：显示控制按钮\n​      autoplay ：自动播放，默认不是不会自动播放\n​      muted ： 静音\n​      loop ： 循环播放\n1&lt;audio src=&quot;./imgs/beyond.mp3&quot; controls autoplay muted loop&gt;&lt;/audio&gt;\n\n5.5、路径问题在页面上a标签(href) 、img标签(src)  、 video或audio(src)  这几个标签在页面上出现的时候，都需要书写资源的地址，针对地址书写分为两种情况：\n\n相对地址（路径）：需要一个参照物，当前写代码的哪个文件（html文件，后续还会有css文件）。\n\n当前目录：./   当前目录   (.&#x2F;是可以省略)\n当前目录下有其他文件夹 :   ./文件夹名/文件夹名/文件名\n在当前文件所在的父目录：../文件夹名/文件名\n多级父目录中：../../退出多级之后，直到找到位置为止\n\n12345678&lt;!-- 当前目录下，找到imgs文件夹中的3.webp图片 --&gt;&lt;img src=&quot;./imgs/3.webp&quot; alt=&quot;&quot; width=&quot;200&quot;&gt;&lt;!-- 从的当前的目录出去，找到aaa文件夹中的2.webp --&gt;&lt;img src=&quot;../aaa/2.webp&quot; alt=&quot;&quot; width=&quot;200&quot;&gt;&lt;!-- 在当前目录直接找到2.webp --&gt;&lt;img src=&quot;./2.webp&quot; alt=&quot;&quot; width=&quot;200&quot;&gt;&lt;img src=&quot;2.webp&quot; alt=&quot;&quot; width=&quot;200&quot;&gt;&lt;img src=&quot;../../2.webp&quot; alt=&quot;&quot; width=&quot;200&quot;&gt;\n\n绝对地址（路径）：绝对路径，不管当前文件的位置再哪里，书写出来基本一致。\n\n以协议开始：https:&#x2F;&#x2F;  、 http:&#x2F;&#x2F;  、 ftp:&#x2F;&#x2F;\n以磁盘的根目录开始：c:&#x2F;&#x2F;   这种方式仅限于开发测试，上线不允许写\n以 /  开始书写 的路径 ：\n如果当前html是以file方式打开：/  表示html所在的盘符\n如果html放在服务器上，这是代码的是域名之后的根目录（www.itsource.cn/）\n\n\n\n\n\n5.6、列表标签列表：页面上有多组（个）相同的格式内容，放在一起，组成一列。称为一个列表\nhtml中的列表有三种：无序列表（重点）、有序列表、自定义列表\n5.6.1-无序列表【重点】无序列表它是一组标签：ul与li组合\nul书写列表的范围，li书写列表中的每一项，在页面上，ul中只能书写li，li标签中可以书写其他标签\nul标签上可以书写type属性，来修改li前面默认的无序的符号（disc  square  circle ）\n1234567&lt;ul type=&quot;circle&quot;&gt;    &lt;li&gt;新闻1&lt;/li&gt;    &lt;li&gt;新闻2&lt;/li&gt;    &lt;li&gt;新闻3&lt;/li&gt;    &lt;li&gt;新闻4&lt;/li&gt;    &lt;li&gt;新闻5&lt;/li&gt;&lt;/ul&gt; \n\n5.6.2-有序列表有序列表也是一组标签：ol与li组合 ， ol中也只能书写li，li中可以书写其他标签\n1234567&lt;ol type=&quot;I&quot;&gt;    &lt;li&gt;唱歌&lt;/li&gt;    &lt;li&gt;跳舞&lt;/li&gt;    &lt;li&gt;rap&lt;/li&gt;    &lt;li&gt;篮球&lt;/li&gt;    &lt;li&gt;广场舞&lt;/li&gt;&lt;/ol&gt;\n\n5.6.3-自定义列表自定义列表：dl与dt和dd组成，dl中可以出现dt或dd，不能出现dt与dd之外的其他标签，dt与dd中可以书写其他标签\n123456789101112&lt;dl&gt;    &lt;dt&gt;爱好：&lt;/dt&gt;    &lt;dd&gt;爬山&lt;/dd&gt;    &lt;dd&gt;游泳&lt;/dd&gt;    &lt;dd&gt;打球&lt;/dd&gt;    &lt;dt&gt;技能：&lt;/dt&gt;    &lt;dd&gt;吹&lt;/dd&gt;    &lt;dd&gt;拉&lt;/dd&gt;    &lt;dd&gt;弹&lt;/dd&gt;    &lt;dd&gt;唱&lt;/dd&gt;&lt;/dl&gt;\n\n5.7、table表格5.7.1- 简单的表格一个表格由若干部分组成：\n\n表格整体：table标签\n表格行：tr标签\n表格单元格：td标签\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        table&#123;            border:1px solid #f00;            /* 去除表格单元格之间的缝隙                 border-collapse : 设置表格中的单元格之间的缝隙                    separate ： 默认值，单元格与单元格之间分离                    collapse ： 将表格单元格之间的缝隙合并（边框合并）            */            border-collapse: collapse;        &#125;        td&#123;            padding: 10px 20px;            border:1px solid #0af;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 简单的表格 --&gt;    &lt;table&gt;  &lt;!-- 表格的整体 --&gt;        &lt;tr&gt;   &lt;!-- 表格的行 --&gt;            &lt;td&gt;这是一个简单的表格&lt;/td&gt;  &lt;!-- 表格的单元格，真正存放表格的数据的标签 --&gt;            &lt;td&gt;这是一个简单的表格&lt;/td&gt;            &lt;td&gt;这是一个简单的表格&lt;/td&gt;            &lt;td&gt;这是一个简单的表格&lt;/td&gt;            &lt;td&gt;这是一个简单的表格&lt;/td&gt;        &lt;/tr&gt;    &lt;/table&gt;    &lt;br&gt;    &lt;hr&gt;    &lt;!-- 书写一个人员信息的表格 --&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;姓名&lt;/td&gt;            &lt;td&gt;年龄&lt;/td&gt;            &lt;td&gt;性别&lt;/td&gt;            &lt;td&gt;住址&lt;/td&gt;            &lt;td&gt;电话&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;夏云皓&lt;/td&gt;            &lt;td&gt;18&lt;/td&gt;            &lt;td&gt;女&lt;/td&gt;            &lt;td&gt;东莞&lt;/td&gt;            &lt;td&gt;10086&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;毛珊&lt;/td&gt;            &lt;td&gt;女&lt;/td&gt;            &lt;td&gt;16&lt;/td&gt;            &lt;td&gt;岳麓区&lt;/td&gt;            &lt;td&gt;10010&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;李均&lt;/td&gt;            &lt;td&gt;女&lt;/td&gt;            &lt;td&gt;16&lt;/td&gt;            &lt;td&gt;岳麓区&lt;/td&gt;            &lt;td&gt;10010&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;黄河&lt;/td&gt;            &lt;td&gt;男&lt;/td&gt;            &lt;td&gt;20&lt;/td&gt;            &lt;td&gt;玉兰路&lt;/td&gt;            &lt;td&gt;12123&lt;/td&gt;        &lt;/tr&gt;    &lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\n\n5.7.2-完整表格完整表格的标签：table &gt; caption | thead | tbody | tfoot &gt; tr &gt; td | th\ntable(表格整体)\n​\tcaption(表格的标题)\n​\tthead(表格头部)\n​\ttbody(表格身体，表格数据区域)\n​\ttfoot(表格的尾部)\n​\t\ttr(表格的行)\n​\t\t\tth或td(单元格)\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        table&#123;            width: 600px;            border-collapse: collapse;        &#125;        th,td&#123;            border: 1px solid #0af;            padding: 10px 20px;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!--         完整的表格：            table：标签                caption:表格的标题                thead:表格的头部                tbody:表格身体（内容区域）                 tfoot:表格的尾部                    tr 表格的行                        td或者th 表格单元格     --&gt;    &lt;table&gt;        &lt;caption&gt;人员信息表&lt;/caption&gt;        &lt;thead&gt;            &lt;tr&gt;                &lt;th&gt;姓名&lt;/th&gt;                &lt;th&gt;年龄&lt;/th&gt;                &lt;th&gt;性别&lt;/th&gt;                &lt;th&gt;住址&lt;/th&gt;                &lt;th&gt;电话&lt;/th&gt;            &lt;/tr&gt;        &lt;/thead&gt;        &lt;tbody&gt;            &lt;tr&gt;                &lt;td&gt;夏云皓&lt;/td&gt;                &lt;td&gt;18&lt;/td&gt;                &lt;td&gt;女&lt;/td&gt;                &lt;td&gt;东莞&lt;/td&gt;                &lt;td&gt;10086&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;毛珊&lt;/td&gt;                &lt;td&gt;女&lt;/td&gt;                &lt;td&gt;16&lt;/td&gt;                &lt;td&gt;岳麓区&lt;/td&gt;                &lt;td&gt;10010&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;李均&lt;/td&gt;                &lt;td&gt;女&lt;/td&gt;                &lt;td&gt;16&lt;/td&gt;                &lt;td&gt;岳麓区&lt;/td&gt;                &lt;td&gt;10010&lt;/td&gt;            &lt;/tr&gt;            &lt;tr&gt;                &lt;td&gt;黄河&lt;/td&gt;                &lt;td&gt;男&lt;/td&gt;                &lt;td&gt;20&lt;/td&gt;                &lt;td&gt;玉兰路&lt;/td&gt;                &lt;td&gt;12123&lt;/td&gt;            &lt;/tr&gt;        &lt;/tbody&gt;        &lt;tfoot&gt;            &lt;tr&gt;                &lt;td&gt;统计：&lt;/td&gt;                &lt;td&gt;5人&lt;/td&gt;            &lt;/tr&gt;        &lt;/tfoot&gt;    &lt;/table&gt; &lt;/body&gt;&lt;/html&gt;\n\n5.7.3-表格隔行变色与鼠标移入高亮(了解)\n补充伪类选择器：\n:first-child: 必须是父标签中的第一个位置上的标签\n:last-child: 必须是父标签中的最后一个位置上的标签\n123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt;     /*          :first-child 要求当前的子标签必须是父标签中的第一个位置         :last-child 要求当前的子标签必须是父标签中的最后位置     */     div a:first-child&#123;         color: #f00;     &#125;     div a:last-child&#123;         color: #f00;     &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;     &lt;span&gt;11111&lt;/span&gt;     &lt;span&gt;22222&lt;/span&gt;     &lt;a href=&quot;#&quot;&gt;百度云&lt;/a&gt;     &lt;a href=&quot;#&quot;&gt;腾讯&lt;/a&gt;     &lt;a href=&quot;#&quot;&gt;京东&lt;/a&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n:nth-child( 数字 | 公式 ): 选中父标签中指定的位置上的标签，或者符合公式的标签\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        table&#123;            border-collapse: collapse;        &#125;        td&#123;            padding: 10px 20px;            border: 1px solid #0af;        &#125;        /*             使用css3中提供的伪类书写表格隔行变色             :first-child 选择第一个子标签            :last-child 选择第一个子标签            table tr:first-child&#123;            background-color: #fa0;            &#125;            table tr:last-child&#123;                background-color: #fa0;            &#125;        */        /* 使用css3中提供的伪类书写表格隔行变色  */        table tr:nth-child(2n)&#123;            background-color: #fa0;        &#125;        table tr:nth-child(2n-1)&#123;            background-color: #0a0;        &#125;        /* 鼠标移入高亮 */        table tr:hover&#123;            background-color: #fff;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;姓名&lt;/td&gt;            &lt;td&gt;年龄&lt;/td&gt;            &lt;td&gt;性别&lt;/td&gt;            &lt;td&gt;住址&lt;/td&gt;            &lt;td&gt;电话&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;夏云皓&lt;/td&gt;            &lt;td&gt;18&lt;/td&gt;            &lt;td&gt;女&lt;/td&gt;            &lt;td&gt;东莞&lt;/td&gt;            &lt;td&gt;10086&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;毛珊&lt;/td&gt;            &lt;td&gt;女&lt;/td&gt;            &lt;td&gt;16&lt;/td&gt;            &lt;td&gt;岳麓区&lt;/td&gt;            &lt;td&gt;10010&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;李均&lt;/td&gt;            &lt;td&gt;女&lt;/td&gt;            &lt;td&gt;16&lt;/td&gt;            &lt;td&gt;岳麓区&lt;/td&gt;            &lt;td&gt;10010&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;黄河&lt;/td&gt;            &lt;td&gt;男&lt;/td&gt;            &lt;td&gt;20&lt;/td&gt;            &lt;td&gt;玉兰路&lt;/td&gt;            &lt;td&gt;12123&lt;/td&gt;        &lt;/tr&gt;    &lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\n\n5.7.4-表格行或列合并表格行或列合并：跨行或跨列的表格，制作这种表格，先书写一个完整的表格，然后找到对应的单元格，查阅UI设计图，判断当前需要合并行，还是合并列，最终将多余的单元格删除。\n\n合并行（跨行）表格：找到需要合并的单元格，使用rowspan属性，设置合并的行数（包含当前这个单元格）\n1&lt;td rowspan=&quot;3&quot;&gt;男&lt;/td&gt;  当前的单元格需要合并三行（跨越3行）\n\n合并列（跨列）表格：找到需要合并的单元格，使用colspan属性，设置合并的列数（包含当前这个单元格）\n1&lt;td colspan=&quot;3&quot;&gt;4人&lt;/td&gt;\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        table&#123;            border-collapse: collapse;        &#125;        td&#123;            padding: 5px 20px;            border: 1px solid #f00;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;姓名&lt;/td&gt;            &lt;td&gt;年龄&lt;/td&gt;            &lt;td&gt;性别&lt;/td&gt;            &lt;td&gt;成绩&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;曹智根&lt;/td&gt;            &lt;td&gt;18&lt;/td&gt;            &lt;td&gt;不详&lt;/td&gt;            &lt;td&gt;88&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;刘兴颖&lt;/td&gt;            &lt;td&gt;20&lt;/td&gt;            &lt;td rowspan=&quot;3&quot;&gt;男&lt;/td&gt;            &lt;td&gt;100&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;周美&lt;/td&gt;            &lt;td&gt;20&lt;/td&gt;            &lt;!-- &lt;td&gt;男&lt;/td&gt; --&gt;            &lt;td&gt;100&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;姜子浩&lt;/td&gt;            &lt;td&gt;22&lt;/td&gt;            &lt;!-- &lt;td&gt;男&lt;/td&gt; --&gt;            &lt;td&gt;80&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;统计&lt;/td&gt;            &lt;td colspan=&quot;3&quot;&gt;4人&lt;/td&gt;            &lt;!-- &lt;td&gt;&lt;/td&gt;            &lt;td&gt;&lt;/td&gt; --&gt;        &lt;/tr&gt;    &lt;/table&gt;    &lt;/body&gt;&lt;/html&gt;\n\n5.7.5-表格总结：简单表格：table  &gt;  tr  &gt; td\n完整表格：table &gt; caption | thead | tbody | tfoot &gt; tr &gt; td | th\n跨行：rowspan&#x3D;”跨越的行数”\n跨列：colspan&#x3D;”跨越的列数”\n基于表格的css样式：border-collapse: collapse;  合并表格边框线（细边框表格）\n5.8、表单标签5.8.1-表单标签作用表单标签：它主要用于在页面上收集(用户)数据，并且可以将数据最终提交给后端程序。\n表单标签：它也是一组标签，不是一个标签。\n\n表单标签：form\n表单项标签：input(输入项)、select(下拉框)、多行文本域(textarea)\n表单按钮：button\n\n5.8.2-表单标签form12345678910form标签：表示标签整体    action属性：用来书写数据最终给哪里提交（后端给出的地址）    method属性：以什么方式将数据提交给action所指的后端程序    \tget方式：默认值，数据提交的时候会在action的地址后面使用?隔开，拼接提交的数据    \t\thttps://www.baidu.com/s?ie=utf-8&amp;wd=孟子\t\tpost方式：提交的数据会被隐藏起来    enctype属性：提交的数据，采用的编码格式        application/x-www-form-urlencoded：普通表单（默认值）        multipart/form-data ： 提交的表单中，还有文件上传数据        text/plain : 普通文本数据\n\n5.8.3-常用的表单项1234567891011121314表单项介绍：\tinput标签：它是一个单标签，同时是一个行内标签        type属性：        &lt;input type=&quot;text&quot;&gt; 单行文本框（输入框）        &lt;input type=&quot;password&quot;&gt;  密码框（掩码）        &lt;input type=&quot;radio&quot;&gt;  单选按钮        &lt;input type=&quot;checkbox&quot;&gt; 复选（多选）按钮        &lt;input type=&quot;submit&quot;&gt; 提交按钮        &lt;input type=&quot;reset&quot;&gt; 重置按钮        &lt;input type=&quot;button&quot;&gt; 普通按钮\tselect标签：它是下拉框，需要配合option标签完成\t\t每个option标签，是select中的一个下拉项\ttextarea标签：文本域（多行文本框）\n\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;!--         表单项介绍：            input标签：它是一个单标签，同时是一个行内标签                type属性：                    &lt;input type=&quot;text&quot;&gt; 单行文本框（输入框）                    &lt;input type=&quot;password&quot;&gt;  密码框（掩码）                    &lt;input type=&quot;radio&quot;&gt;  单选按钮                    &lt;input type=&quot;checkbox&quot;&gt; 复选（多选）按钮                    &lt;input type=&quot;submit&quot;&gt; 提交按钮                    &lt;input type=&quot;reset&quot;&gt; 重置按钮                    &lt;input type=&quot;button&quot;&gt; 普通按钮                        select标签：它是下拉框，需要配合option标签完成                每个option标签，是select中的一个下拉项                        textarea标签：文本域（多行文本框）    --&gt;    &lt;form action=&quot;&quot;&gt;        &lt;div&gt;            账号：&lt;input type=&quot;text&quot;&gt;        &lt;/div&gt;        &lt;div&gt;            密码：&lt;input type=&quot;password&quot;&gt;        &lt;/div&gt;        &lt;div&gt;            性别：            &lt;input type=&quot;radio&quot;&gt;男            &lt;input type=&quot;radio&quot;&gt;女        &lt;/div&gt;        &lt;div&gt;            爱好：            &lt;input type=&quot;checkbox&quot;&gt;琴            &lt;input type=&quot;checkbox&quot;&gt;棋            &lt;input type=&quot;checkbox&quot;&gt;书            &lt;input type=&quot;checkbox&quot;&gt;画        &lt;/div&gt;        &lt;div&gt;            选择地址：            &lt;select&gt;                &lt;option&gt;-请选择-&lt;/option&gt;                &lt;option&gt;北京&lt;/option&gt;                &lt;option&gt;天津&lt;/option&gt;                &lt;option&gt;西安&lt;/option&gt;                &lt;option&gt;上海&lt;/option&gt;            &lt;/select&gt;        &lt;/div&gt;        &lt;div&gt;            &lt;textarea cols=&quot;30&quot; rows=&quot;3&quot;&gt;&lt;/textarea&gt;        &lt;/div&gt;        &lt;div&gt;            &lt;input type=&quot;submit&quot;&gt;            &lt;input type=&quot;reset&quot;&gt;            &lt;input type=&quot;button&quot; value=&quot;普通按钮&quot;&gt;        &lt;/div&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;\n\n5.8.4-表单的细节【理解】123456789101112表单的细节：1、一般要求每个表单项上都必须添加name属性，用于提交数据    将neme属性的值与用户输入的值，拼成 name属性值=输入的值    例如：&lt;input type=&quot;text&quot; name=&quot;account&quot;&gt;&lt;/div&gt;    提交后：account=abc2、针对单选按钮，必须添加name属性，name属性值一样的，它们才是一组，才能保证为单选3、针对页面上的表单项是让用户选择的，不是用户输入的，必须书写value属性，4、针对下拉框，name属性需要书写在select标签上，而value需要书写在每个option标签上，\t如果option上没有书写value属性，默认使用option中的文本数据\n\n1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;form action=&quot;&quot;&gt;        &lt;div&gt;            账号：&lt;input type=&quot;text&quot; name=&quot;account&quot; &gt;        &lt;/div&gt;        &lt;div&gt;            密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;        &lt;/div&gt;        &lt;div&gt;            性别：            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot;&gt;男            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;&gt;女            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;不详&quot;&gt;不详        &lt;/div&gt;        &lt;div&gt;            爱好：            &lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;洗脚&quot;&gt;洗脚            &lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;spa&quot;&gt;spa            &lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;按摩&quot;&gt;按摩        &lt;/div&gt;        &lt;div&gt;            地址：            &lt;select name=&quot;address&quot;&gt;                &lt;option value=&quot;changsha&quot;&gt;长沙&lt;/option&gt;                &lt;option value=&quot;wuhan&quot;&gt;武汉&lt;/option&gt;                &lt;option value=&quot;shanghai&quot;&gt;上海&lt;/option&gt;                &lt;option value=&quot;shenzhen&quot;&gt;深圳&lt;/option&gt;            &lt;/select&gt;        &lt;/div&gt;             &lt;div&gt;&lt;input type=&quot;submit&quot;&gt;&lt;/div&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;\n\n5.8.5-表单type属性的其他值【了解】123456789101112131415161718192021222324252627input标签的type属性：    type=&quot;text&quot;         单行文本框    type=&quot;password&quot;     密码框    type=&quot;radio&quot;        单选按钮    type=&quot;checkbox&quot;     复选按钮    type=&quot;hidden&quot;       隐藏项（在页面上看不见，但是它提交的时候数据可以提交）    type=&quot;file&quot;         文件上传项    type=&quot;image&quot;        图片，用于代替提交按钮，点击图片即可提交表单数据（基本不用）    type=&quot;submit&quot;       提交按钮    type=&quot;reset&quot;        重置按钮    type=&quot;button&quot;       普通按钮    以上这三个按钮，在HTML5中，建议直接使用 &lt;button&gt; 标签代替    &lt;button&gt;登录&lt;/button&gt;  这个标签放在form中等价于  &lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;    &lt;button&gt;登录&lt;/button&gt;  这个标签放在form外面，就等价于 &lt;input type=&quot;button&quot; value=&quot;普通按钮&quot;&gt;    &lt;button type=&quot;submit&quot;&gt;注册&lt;/button&gt;    &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;    &lt;button type=&quot;button&quot;&gt;普通按钮&lt;/button&gt;    =========html5中添加的type的新属性值==========    type=&quot;color&quot;            颜色选择框    type=&quot;number&quot;           颜色选择框    type=&quot;date&quot;             日期选择框    type=&quot;time&quot;             时间选择框    type=&quot;datetime&quot;         日期时间选择框（目前浏览器还不支持）    type=&quot;datetime-local&quot;   日期时间选择框\n\n5.8.6-表单项中的其他属性[会用]12345input标签的其他属性：    placeholder ： 提示文字，输入数据，会自动隐藏，没有数据自动显示    readonly：输入项只能看不能改    disabled：禁用    checked ： 单选获取复选按钮的默认选中\n\n12345678910111213141516171819202122232425262728293031323334353637&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;!--         input标签的其他属性：            placeholder ： 提示文字，输入数据，会自动隐藏，没有数据自动显示            readonly：输入项只能看不能改            disabled：禁用            checked ： 单选获取复选按钮的默认选中     --&gt;    &lt;form action=&quot;&quot;&gt;        &lt;div&gt;账号：&lt;input type=&quot;text&quot; placeholder=&quot;请输入账号&quot; readonly=&quot;readonly&quot;&gt;&lt;/div&gt;        &lt;div&gt;            验证码：&lt;input type=&quot;text&quot; placeholder=&quot;请输入验证码&quot; &gt;            &lt;button disabled&gt;获取验证码&lt;/button&gt;        &lt;/div&gt;        &lt;div&gt;            性别：            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot; checked&gt;女            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; &gt;男        &lt;/div&gt;        &lt;div&gt;            爱好：            &lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;爬山&quot; checked&gt;爬山            &lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;游泳&quot; &gt;游泳            &lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;打球&quot; checked&gt;打球        &lt;/div&gt;    &lt;/form&gt; &lt;/body&gt;&lt;/html&gt;\n\n5.8.7-label标签label标记，目的针对单选，复选等，可以点击文件，也能进行选中。\n1234567891011&lt;div&gt;    爱好：    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;爬山&quot; checked&gt;爬山&lt;/label&gt;    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;游泳&quot; &gt;游泳&lt;/label&gt;    &lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;like&quot; value=&quot;打球&quot; checked&gt;打球&lt;/label&gt;&lt;/div&gt;&lt;div&gt;    &lt;label&gt;        &lt;input type=&quot;checkbox&quot;&gt;我同意当前的用户协议    &lt;/label&gt;&lt;/div&gt;\n\n6、布局标签（掌握）6.1、什么是布局布局思想：主要针对页面进行设计，然后通过不同的标签，将页面每个区域合理的规划出来。\n布局原则：从整体，到局部，最后实现细节。\n6.2、什么是布局标签？布局标签在我们网页中的使用非常的广泛，一般用在盒子模型当中，做一些结构类的分区，比如说：百度的首页，可分为上中下结构，也就是说上边一个div，中间一个div，下边一个div，上边又可以分为左右两部分\n\n6.2、span标签定义和用法： 标签被用来组合文档中的行内元素。注释：span 没有固定的格式表现。当对它应用样式时，它才会产生视觉上的变化。\n6.3、div标签定义和用法 ： &lt;div&gt; 可定义文档中的分区或节。\n&lt;div&gt; 标签可以把文档分割为独立的、不同的部分。它可以用作严格的组织工具，并且不使用任何格式与其关联。\n如果用 id 或 class 来标记 &lt;div&gt;，那么该标签的作用会变得更加有效。\n注意：\n\ndiv span两个标签没有特殊的功能，只是作为一个内容容器，但使用频率很高，主要与CSS配合使用。\ndiv：块标签（它会独占一行，主要用于布局）\nspan：行内标签（不会独占一行，用于勾选需要CSS修饰的内容）\n\n7、标签分类（掌握）HTML标签根据自身特性主要分为两类：\n\n行内标签 : 行内标签多个并排一行，宽高为内容大小，常见的多为文本内容相关的标签。\n例如：span、b、strong、i、em、big、small、a、input、textarea\n\n\n块标签 : 块标签独占一行，宽度默认为100%，常见的多为标题段落及布局相关的标签。\n例如：p、div、h1~h6、table、form、ol、ul、dl、li\n\n\n\n8、特殊符号（了解）需求：需要在网页中输出 “&lt;JavaScript权威指南&gt;”？ 浏览器会把“&lt;&gt;”解析为标记，不会出现我们想要的效果。\n原因：在html中有一些特殊意义的符号，它会被解析为标签，就不能正常显示。\n在HTML中有一些特殊意义的东西，使用一个符号来进行表示：\n语法格式：&amp;符号名;\n\n123456789gantttitle A Gantt DiagramdateFormat  YYYY-MM-DDsection SectionA task           :a1, 2014-01-01, 30dAnother task     :after a1  , 20dsection AnotherTask in sec      :2014-01-12  , 12danother task      : 24d\n\n","slug":"HTML课件1","date":"2024-10-16T08:39:46.346Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"1-CSS介绍1.1-web标准W3C组织：他制定web领域中众多的标准。\n关于网页的标准：一个网页（界面）应该由4部分组成：\n\n网页内容：网页中需要展示的内容，它由后端程序提供（后期我们学习ajax技术，获取网页数据）\n网页结构：它用于支撑网页基本布局，相当于网页的骨架（HTML标签）\n网页样式：用于页面的美化（CSS技术）\n网页行为：控制网页上的交互过程（主要JavaScript完成）\n\n1.2-CSS介绍CSS：层叠样式表。也是W3C给出的标准。用于修饰页面上的标签。\nCSS经历三个版本：CSS1.0 、 CSS2.0、CSS3.0（最新版本的CSS）\nHTML5和CSS3关系：没有任何关系。\n在使用的过程中 HTML4+CSS3、HTML5+CSS3、HTML4+CSS2、HTML5+CSS2\n2-css入门2.1-css与html结合方式CSS和HTML的结合由三种方式：\n\n内联方式（行内样式）：将CSS代码直接书写在标签的style属性中（自己测试页面效果偶尔使用）\n12345&lt;div style=&quot;color:#fa0;font-size:32px&quot;&gt;css与html的结合方式，内联方式&lt;/div&gt;&lt;div style=&quot;color:#fa0;font-size:16px&quot;&gt;css与html的结合方式，内联方式&lt;/div&gt;&lt;div style=&quot;color:#fa0;&quot;&gt;css与html的结合方式，内联方式&lt;/div&gt;&lt;div style=&quot;color:#fa0;font-size:12px&quot;&gt;css与html的结合方式，内联方式&lt;/div&gt;&lt;div style=&quot;color:#fa0;font-size:8px&quot;&gt;css与html的结合方式，内联方式&lt;/div&gt;\n\n内部样式：在head标签中，书写style标签，当前页面的css代码全部书写在style标签内部\n123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        div&#123;            color: #0a0;            font-size: 24px;            background-color: pink;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;好好学习&lt;/div&gt;    &lt;div&gt;天天向上&lt;/div&gt;    &lt;span&gt;打酱油的&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\n外部样式：将css代码书写在独立的css文件中（扩展名.css)，然后在需要使用css的页面上使用link标签引入\n12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;!-- 需要使用link标签引入外部的css文件 --&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/04.css&quot;&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;好好学习&lt;/div&gt;    &lt;div&gt;天天向上&lt;/div&gt;    &lt;span&gt;打酱油的&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\n12345/* css文件 */div&#123;    color: red;    font-size: 20px;&#125;\n\n2.2-CSS的语法\ncss代码一般由三部分组成：选择器 、 样式名（属性名）、样式值（属性值）\n\n12345选择器&#123;    样式名:样式值;    样式名:样式值;    样式名:样式值;&#125;\n\n\n如果使用的行内样式：不需要选择器，因为直接将样式书写在标签上。当前样式只能对当前标签有效。\n如果是内部样式或者外部样式，才会使用选择器。\n\n2.3-选择器\nVSCode 工具在开发中，经常需要安装一些插件，辅助开发\nopen in browser ： 可以快速使用浏览器打开某个页面\nlive server ： 以服务器方式快速打开某个网页\n\n\n选择器：CSS中用来选择页面标签的一种规则。规则比较多的，后期慢慢学习。\n最终通过选择器，找到页面对应的标签，然后将选择器中的css样式，作用到标签上。\n\n2.3.1-通用选择器12345*&#123;    样式名：样式值;    样式名：样式值;    样式名：样式值;    &#125;\n\n\n通用选择器：默认选中页面上的所有标签。在实际项目中这个选择器，基本不用。\n\n1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /* 通用选择器写法 */        *&#123;            color: red;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;今天下雨！！！&lt;/div&gt;    &lt;span&gt;忘记带伞啦&lt;/span&gt;    &lt;p&gt;好高兴~~~~&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\n\n2.3.2-标签名选择器\n语法格式：\n12345标签名&#123; 样式名：样式值; 样式名：样式值; 样式名：样式值;   &#125;\n\n1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /*             标签名选择器：                通过页面上的html的标签名称来选中页面的标签        */        div&#123;            color: red;        &#125;        span&#123;            color: green;        &#125;        p&#123;            color: pink;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;今天下雨！！！&lt;/div&gt;    &lt;span&gt;忘记带伞啦&lt;/span&gt;    &lt;p&gt;好高兴~~~~&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\n\n3.3.3-类选择器\n类选择器：class选择器，通过标签上的class属性值选中标签\n12345.类名(class的属性值) &#123; 样式名：样式值; 样式名：样式值; 样式名：样式值;    &#125;\n\n12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /*             类选择器：class选择器        */        .box&#123;            color: red;            font-size: 20px;            font-weight: 900;        &#125;        .box2&#123;            color: green;            font-weight: normal;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;今天下雨！！！&lt;/div&gt;    &lt;span class=&quot;box box2&quot;&gt;忘记带伞啦&lt;/span&gt;    &lt;p class=&quot;box box2&quot;&gt;好高兴~~~~&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\n\n3.3.4-ID选择器选择器：css用于选择页面标签的一种规则。\n通用选择器： *{   }\n标签名选择器：标签名{   }\n类选择器：.class属性值{  }\nid选择器：需要给标签上添加一个id属性，通过id属性的值来选择标签。\n1234#id属性值&#123;    css属性名：属性值;    css属性名：属性值;    &#125;\n\n123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        #title&#123;            color: #fa0;            font-size: 26px;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;title&quot;&gt;好好学习，天天向上div&lt;/div&gt;    &lt;div&gt;好好学习，天天向上div&lt;/div&gt;    &lt;span id=&quot;title&quot;&gt;好好学习，天天向上span&lt;/span&gt;    &lt;span&gt;好好学习，天天向上span&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\n\n注意：一般要求页面上标签的id属性值不能重复，因为后期学习JavaScript时，需要通过id属性值获取页面标签，如果id值重复，导致获取不到对应的标签。\n在页面上如果需要处理样式，尽量使用class，不要使用id。\n\n3-字体样式3.1-文字颜色（color）12345678910111213字体样式：\t字体颜色color属性：书写有三种写法\t\t颜色英文单词 red、green、blue\t\t十六进制：三原色（红、绿、蓝）调配出各种各样的颜色                红     绿     蓝                00-FF  00-FF  00-FF                常见的颜色写法：                红色：#FF0000   #f00                绿色：#00FF00   #0f0                蓝色：#0000FF   #00f                黑色：#000000   #000                白色：#FFFFFF   #fff       十进制：rgb(0-255 , 0-255 , 0-255)       \n\n3.2-字体（font-family）\n浏览器默认的字体：微软雅黑，如果设置的字体不存在，也会显示默认字体\n\n12/* 字体：宋体，楷体，微软雅黑 */font-family: 宋体 , 楷体 , 微软雅黑;\n\n3.3-字体大小（font-size）123456789/* \t字体大小: 浏览器默认的字体大小16px\t浏览器有保护机制：字体默认最小为12px ， 设置为0的时候，文字被隐藏\t\tpx：像素\t\tem：相对字体大小单位，如果当前所在的标签或父标签统一设置过默认字体大小\t\t\t那么1em，就是预先设置的大小，2em预先设置的两倍大小\t\t如果没有预先设置任何的字体大小，浏览器默认的16px*/font-size: 1.5em;\n\n3.4-行高(line-height)\n设置标签中一行文本数据的高度，文字默认会在设置的行高的垂直中间位置\n\n12/* 行高 */line-height: 30px;\n\n3.5-字体加粗（font-weight）\n设置字体的粗细：默认值100 | 200 | 300 | 400(normal) | 500 | 600(bold) | 700 | 800 | 900\n\n1234567h1&#123;    /* 取消 标题标签的默认加粗 */    font-weight: normal;&#125;b&#123;    font-weight: normal;&#125;\n\n3.6-文本装饰线(text-decoration)12345678910a&#123;\tcolor: #444;\t/*     text-decoration: none;  表示没有任何装饰线    text-decoration: underline; 数据设置下划线    text-decoration: overline; 数据上划线    text-decoration: line-through; 数据贯穿线（删除线）\t*/\ttext-decoration: line-through;&#125;\n\n4-文本样式\ntext-align : 设置文本水平对齐方式，针对的块级标签【针对块标签有效】\n\nleft：默认值，左对齐\ncenter：水平居中\nright：右对齐\n\n123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            /* 文本水平对齐方式 */            text-align: left;        &#125;        .box2&#123;            text-align: center;        &#125;        .box3&#123;            text-align: right;        &#125;        span&#123;            text-align: center;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;文本样式演示&lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;文本样式演示&lt;/div&gt;    &lt;div class=&quot;box3&quot;&gt;文本样式演示&lt;/div&gt;    &lt;span&gt;文字对齐方式&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\ntext-indent ： 文本首行缩进，可以是负数，将文字移除到屏幕外面\n12345/* 文本缩进 */font-size: 24px;/* text-indent: 32px; *//* em 设置缩进当前对应的字体大小的倍数 */text-indent: 2em;\n\ntext-overflow : 设置一行文本超出指定宽度之后，显示 …  ,需要配合两外一个样式一起使用.\n12345678/* 一行数据超出指定的宽度之后，显示 ... */text-overflow: ellipsis;/* 完成一行超出，显示... 必须先保证这一行的数据在屏幕，宽度发生变化的时候，不能换行 */white-space: nowrap;/* 当不换之后，也会出现横向滚动条，需要隐藏，不能让滚动条出来 */overflow: hidden;\n\ntext-shadow ： 文本阴影\n​\t第一个值：阴影的水平位置\n​\t第二个值：阴影的垂直位置\n​\t第三个值：阴影的模糊度\n​\t第四个值：阴影的颜色\n 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /* 文本阴影 */        span&#123;            font-size: 50px;            text-shadow: 2px 2px 2px #f00;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;span&gt;好好学习天天向上&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\n5-背景样式5.1-设置块标签的宽度和高度在css中， 只有块标签才能设置宽和高。行内标签无法设置，即使设置了也不会生效。\nwidth ： 设置标签的宽度\nheight ：设置标签的高度\n12345678910.box&#123;    width: 500px;    height: 200px;&#125;/* 针对span设置宽度和高度无效的 */span&#123;    width: 100px;    height: 100px;&#125;\n\n5.2-背景颜色background-color ： 设置背景颜色\n1234567width: 500px;height: 300px;/* 背景颜色 *//* background-color: #f6f; *//* background-color: rgb(255, 100, 255) */background-color: rgba(255, 0, 255 , 0.5)\n\n5.3-背景图片\nbackground-image:url( 图片的地址 )\n\nbackground-repeat ：设置背景图是否可以重复（平铺）\n\nno-repeat ： 背景图不能重复（平铺）\nrepeat ： 水平和垂直方向都允许重复（平铺）\nrepeat-x ： 允许背景图 水平重复\nrepeat-y ： 允许背景图 垂直重复\n\n\nbackground-position ： 第一个位置控制水平   第二个位置控制垂直\n\n英文单词：水平：left  center  right     垂直 ： top  center  bottom\n百分比：20%  80%\n像素（主要用于背景图位置精确控制）\n\n\n\n6-图片3px问题在页面上处于一行不同的行内标签，他们默认都有自己在这一行底部的对齐方式（基准线对齐）。\n图片3px问题：页面上的图片和文字，或者其他标签，他们默认的基准线不同，导致排列的时候，出现小的插口，这个小插口称为3px问题。\n解决图片3px问题：vertical-align 更改这一行中的某个标签的对齐方式。\n找到这一行中最高的那个标签，设置这一行中其他标签与当前这个标签的垂直方向上对齐方式。\n\nvertical-align ： \ntop : 顶端对齐\nmiddle ： 居中对齐\nbottom ：底部对齐\nbaseline ： 默认的基准线对齐\n\n\n\n7-复合属性的使用\n在css中存在部分的复合属性，可以简化css代码，但是需要注意书写时的顺序问题\n\n12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            width: 1000px;            height: 300px;            /* background-color: #fa0;            background-image: url(./imgs/1.webp);            background-repeat: no-repeat;             background-position: 30px 60px;            */            /* 复合属性 */                       background:no-repeat url(./imgs/1.webp) #fa0  30px  60px ;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n8-盒子模型8.1-什么是盒子模型将页面上的每个标签看作一个盒子。每个盒子（标签）都可以去设置与盒子有关的样式。\n整个页面，是不同的标签（盒子）嵌套，最终完成页面的结构布局，需要通过盒子相关样式属性，来合理的将不同的盒子放到页面不同位置，设置盒子自身的一些特征。\n\n盒子相关的样式：\n边框\n内边距\n大小\n外边距\n\n\n\n8.2-盒子大小默认页面上的任何标签都可以给其设置大小，只有块标签设置大小时是有效的，行内标签设置大小是无效的。\n\nwidth：盒子的宽度\nheight：盒子的高度\n\n1234/* 给div设置宽度和高度 */width: 300px;height: 200px;background-color: #fa0;\n\n\nmin-height：最小高度，当盒子中的内容，小于最小高度的时候，盒子以最小高度展示，如果内容高度超过盒子的高度，会以实际内容的高度为盒子的高度\nmax-height：最大高度，当内容大于设置最大高度时，盒子中的内容会溢出，如果内容不足，盒子的高度会以实际内容的高度为准\n\n8.3-版心概念版心：在进行页面布局的时候，基于不同的网页大小，会设置核心的宽度。页面排版的核心宽度。\n一般在pc端版心宽度：1000px、1200px、1400px\n如果设置的版心为1400px，但是屏幕分辨率的宽度1366px，那么当前电脑打开这个网页，就会出现横向滚动条。\n在实际项目中，通过会书写一个公共的css文件，其中书写当前项目所需要的公共css代码。\n要求：一个网页，可以拥有纵向滚动条，但不能出现横向滚动条。\n8.4-内边距内边距：盒子边框与盒子中内容之间的缝隙。在css中使用padding表示。\n\npadding-top : 盒子上边框与内容之间的距离\npadding-right：盒子右边框与内容之间的距离\npadding-bottom：盒子下边框与内容之间的距离\npadding-left：盒子左边框与内容之间的距离\npadding : 它是复合属性，简化内边距的书写\n一个值：4个内边距都是这个值\n两个值：第一个值：上下内边距，第二个值：表示左右内边距\n三个值：第一个值：上内边距，第二个值：表示左右内边距 ， 第三个值：表示下内边距\n四个值：第一个值：上内边距，第二个值：表示右内边距 ， 第三个值：表示下内边距 ， 第四个值：表示左边内边距\n\n\n\n123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            width: 500px;            height: 300px;            background-color: #0a0;            /* 使用padding调整盒子边框与内容之间的距离             padding-top: 30px;            padding-right: 50px;            padding-bottom: 80px;            padding-left: 60px;            */            padding: 30px 50px 80px 100px;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;内边距：盒子边框与盒子中内容之间的缝隙，内边距：&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n8.5-外边距外边距：盒子与盒子之间的距离。\n\nmargin表示盒子的外边距：\n\nmargin-top ： 上边的外边距\nmargin-right ： 右边的外边距\nmargin-bottom ： 下边的外边距\nmargin-left： 左边的外边距\n\n\nmargin 复合属性：\n\n一个值：4个外边距都是这个值\n两个值：第一个值：上下外边距，第二个值：表示左右外边距\n三个值：第一个值：上外边距，第二个值：表示左右外边距 ， 第三个值：表示下外边距\n四个值：第一个值：上外边距，第二个值：表示右外边距 ， 第三个值：表示下外边距 ， 第四个值：表示左边外边距\n\n\n\n123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        body&#123;            margin: 0;        &#125;        .box&#123;            width: 300px;            height: 200px;            background-color: #0a0;            /* 设置盒子的外边距             margin-top: 30px;            margin-right: 50px;            margin-bottom: 100px;            margin-left: 200px;            */            margin: 50px 100px 150px 200px;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n8.6-边框border：用于给盒子添加边框线\n123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            width: 300px;            height: 200px;            /* 边框             border-top-color: red;            border-top-style: solid;            border-top-width: 10px;                        border-top: red solid 1px;            border-right: green dashed 1px;            border-bottom: blue dotted 1px;            border-left: deeppink double 1px;            */            border: 1px solid red;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n\n注意盒子有坑：\n1、宽度和高度只能设置给块级标签\n2、内外边距：在设置的时候，块级上右下左都可以生效，而行内标签只有左右生效，上下无效（难点，后续要加强）。\n\n9-标准模式与怪异模式编写的HTML和css代码，最终都需要交给浏览器解析执行。浏览器内置html的解析引擎、CSS解析引擎、V8JS解析引擎。\n当浏览器加载html代码的时候，遇到html代码启动html的解析引擎，去识别每个标签，将标签解析完成之后，展示在浏览器窗口上。\n在解析的过程中，遇到css代码，启动css解析引擎，将不同的选择器，选中的标签，给他作用对应的css样式。\n标准模式和怪异模式，都是浏览器解析html代码一种方式。\n标准模式：书写的html，如果书写声明，  这时浏览器就会严格按照声明对应的html版本去解析其中的每个标签。\n怪异模式：书写html代码的时候，故意不写文档声明，这时IE6、7、8就会启动非标准模式解析html标签和css样式。\n标准模式：盒子的总大小 &#x3D; 盒子边框 + 内边距 + 其中内容(设置宽度和高度)\n怪异模式：盒子的总大小 &#x3D; 设置宽度和高度 &#x3D; 盒子边框 + 内边距 + 内容（区域会被压缩）\n总结：在css3中，标准模式与怪异模式切换通过css样式处理\n\nbox-sizing:\nborder-box ： 怪异盒子（边框盒子），设置的width和height 为盒子总大小\ncontent-box ： 标准盒子（内容盒子），设置的width和height 为仅仅只是盒子中内容的大小\n\n\n\n10-其他样式10.1-数据溢出处理\noverflow：\n\nhidden： 超出之后的内容会被隐藏\nvisible： 默认值，超出可见\nauto：自动，如果内容超出，就会显示滚动条\nscroll ：默认会显示滚动条区域\n\n\noverflow-y：也有上面的四个值，主要设置纵向滚动条（后期移动端会使用）\n\noverflow-x：也有上面的四个值，设置横向滚动条，使用频率不多。\n\n\n1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            width: 150px;            height: 100px;            background-color: #f0a;            /* 溢出处理 */            overflow: scroll;            /* overflow-x: auto; */        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;检指定高度及宽度时如何管理内容索或设置当&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n10.2-显示与隐藏\ndisplay ： 可以完成标签在页面上的显示与隐藏（后期它还有flex等属性值）\nnone ： 隐藏当前的某个标签。\ninline ： 让标签以行内标签方式显示。\nblock ： 让标签以块标签方式显示。\ninline-block ： 让标签以行内块标签方式显示。\n\n\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box &#123;            width: 300px;            height: 200px;            background-color: pink;        &#125;        /* 让box中的a标签默认是隐藏状态 */        .box a &#123;            display: none;            width: 200px;            height: 100px;            background-color: #0a0;        &#125;        /* 后代选择器（层级选择器） */        .box:hover a &#123;            /* 鼠标移动到box上之后，让a显示出来 */            /* display: inline; */            /* display: block; */            display: inline-block;        &#125;        .box2 &#123;            width: 150px;            height: 100px;            background-color: #fa0;            display: inline-block;            margin-top: 20px;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        &lt;a href=&quot;#&quot;&gt;百度&lt;/a&gt;    &lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n10.3-列表样式ol、ul默认的li列表项前面符号，可以使用 list-style:none  清除列表前面默认的符号\n10.4-鼠标样式cursor:pointer   ; 鼠标移动到上面显示一个小手          \n11-浮动布局11.1-布局布局：针对UI设计图 ，需要将设计图还原成对应的网页。在还原的过程中，基于设计图，布局网页界面（使用布局标签div、header、nav、aside、main、article、section、footer），从整体，到局部，最后到细节。\n11.2-浮动布局把当前整个页面看成一个游泳池，\n设置任何一个盒子的背景，相当于操作泳池的池底，\n设置文本，文本样式，相当于操作泳池的水面\n背景层：池底\n前景层：水面\n浮动：让页面的某个盒子（标签）从池底浮动到水面上。相当于这个盒子它的背景就浮动到水面上，会与其他抢前景层的位置。\n浮动样式属性：\n\nfloat ：\nleft ： 左浮动\nright ： 右浮动\n\n\n\n盒子一旦浮动了，只要一行能够放下，所有盒子都浮动到一行。浮动的盒子，会自动的变成行内块标签。\n11.3-清除浮动当在页面中，前面的标签浮动，后面的标签会钻到前面标签的下面。如果后面标签，不管前面是否浮动，都不能改变自己在页面的布局位置。这时需要手动清除浮动。\n\nclear ： 清除浮动\nleft ： 清除左边的浮动\nright ：清除右边的浮动\nboth ： 清除两侧的浮动\n\n\n\n123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        div&#123;            width: 200px;            height: 100px;            background-color: pink;        &#125;        .box1&#123;            float: left;        &#125;        .box2&#123;            float: right;            height: 60px;        &#125;        .box3&#123;            width: 100%;            height: 120px;            background-color: #0a0;            /* 允许当前标签的左侧出现浮动标签 */            /* clear: left; */            /* 允许当前标签的右侧出现浮动标签 */            /* clear: right; */            /* 允许当前标签的两侧出现浮动标签 */            clear: both;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box3&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n11.4-外边距塌陷问题浮动带来的i的一个问题：页面上前面的盒子浮动，后面的盒子会往前面盒子下面钻，可以使用clear清除浮动，保证盒子不会钻到其他浮动盒子下面。\n浮动带来的另外一个问题：外边距塌陷，后面的盒子，在计算外边距的时候，由于前面盒子是浮动的，根本找不到计算的盒子边界。针对这种问题，解决方案右4种。\n\n给浮动的盒子添加父标签，给父标签设置固定高度。【缺陷：需要知道当前父盒子的固定高度，如果内容是自动撑高的，那么高度就不能写死】\n12345&lt;div class=&quot;container cf&quot;&gt;    &lt;aside class=&quot;left&quot;&gt;左边&lt;/aside&gt;    &lt;main class=&quot;content&quot;&gt;主要内容&lt;/main&gt;    &lt;aside class=&quot;right&quot;&gt;右边&lt;/aside&gt;&lt;/div&gt;\n\n123.cf&#123;    height: 300px;&#125;\n\n给浮动的盒子添加父标签，给父盒子设置overflow:hidden。【设置超出隐藏的目的根本不是让内容超出之后隐藏，而是让浏览器根据父标签中的子标签，给父标签算实际高度】\n12345&lt;div class=&quot;container cf&quot;&gt;    &lt;aside class=&quot;left&quot;&gt;左边&lt;/aside&gt;    &lt;main class=&quot;content&quot;&gt;主要内容&lt;/main&gt;    &lt;aside class=&quot;right&quot;&gt;右边&lt;/aside&gt;&lt;/div&gt;\n\n1234.cf&#123;    /* height: 300px; */    overflow: hidden;&#125;\n\n\n给浮动的标签后面添加一个空的div，在这个div上使用clear：both清除浮动。【这个空的div没有其他的任何作用，只是为了满足清除浮动，保证后面的标签可以正常的布局】\n123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            width: 200px;            /* height: 100px; */            background-color: rgba(255, 0, 0, 0.2);            /* 盒子向左浮动 */            float: left;        &#125;        .box2&#123;            width: 250px;            /* height: 150px; */            background-color: #fa0;            float: right;        &#125;        p&#123;            background-color: #0a0;            border: 2px solid #00f;                    margin-top: 30px;        &#125;        .cl&#123;            clear: both;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;section&gt;        &lt;div class=&quot;box&quot;&gt;浮动布浮动布局介绍：浮动是将页面的某个盒子在页面进行局介绍&lt;/div&gt;        &lt;div class=&quot;box2&quot;&gt;浮动布局浮动布局介绍浮动布局&lt;/div&gt;       &lt;div class=&quot;cl&quot;&gt;&lt;/div&gt;    &lt;/section&gt;    &lt;p&gt;浮动布局介绍：浮动是将页面的某个盒子在页面进行向左，或者向右的位置移动。最终达到页面布局的效果浮动布局介绍：浮动是将页面的某个盒子在页面进行向左，或者向右的位置移动。最终达到页面布局的效果&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\n\n使用伪元素(假的标签) ::after 来代替 空div，解决浮动问题。【伪元素：通过CSS制作出来的假标签，但是它可以在页面充当标签的效果。默认是一个行内标签】\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            width: 200px;            /* height: 100px; */            background-color: rgba(255, 0, 0, 0.2);            /* 盒子向左浮动 */            float: left;        &#125;        .box2&#123;            width: 250px;            /* height: 150px; */            background-color: #fa0;            float: right;        &#125;        p&#123;            background-color: #0a0;            border: 2px solid #00f;            /* 清除浮动 */            clear: both;            margin-top: 30px;        &#125;        .cf::after&#123;            content: &quot;&quot;;            display: block;            clear: both;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;section class=&quot;cf&quot;&gt;        &lt;div class=&quot;box&quot;&gt;浮动布浮动布局介绍：浮动是将页面的某个盒子在页面进行局介绍&lt;/div&gt;        &lt;div class=&quot;box2&quot;&gt;浮动布局浮动布局介绍浮动布局&lt;/div&gt;    &lt;/section&gt;    &lt;p&gt;浮动布局介绍：浮动是将页面的某个盒子在页面进行向左，或者向右的位置移动。最终达到页面布局的效果浮动布局介绍：浮动是将页面的某个盒子在页面进行向左，或者向右的位置移动。最终达到页面布局的效果&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\n\n12-css样式书写顺序css书写顺序：\n\n位置元素定位；\n自身属性；\n文字样式；\n文本属性；\nc3中新增属性.\n\n\n位置元素有：position–定位属性，float –浮动属性，overflow –溢出属性，z-index–显示层级问题；\n自身元素有：宽高–width、height，内外的间隔–padding、margin，背景颜色–background等；\n文字样式有：字体 – font-family，字体大小–font-size，字体样式–font-style等；\n文本属性有：对其方式–text-align，换行–text-wrap，文本位置–text-indent等\nC3新增属性：盒阴影–box-shadow，盒变形–transform，盒圆角–border-radius等\n\n13-选择器补充13.1-组合选择器\n在页面上，有时出现不同的选择器，选中不同的标签，这些被选中的标签需要使用相同的样式。\n\n组合选择器(并列、分组)：多个选择器之间使用逗号隔开，他们可以使用相同的样式\n1234选择器,选择器,选择器&#123;    css属性名：属性值;    css属性名：属性值;        &#125;\n\n1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        span&#123;            font-size: 100px;        &#125;        .a , .d&#123;            color: #4286fc;        &#125;        /* 不同使用哪种选择器，选中不同的标签，使用都好隔开，可以使用相同样式 */        .b , #f&#123;            color:#ef3c3e;        &#125;        .c&#123;            color: #f7bf11;        &#125;        .e&#123;            color: #34a94f;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;span class=&quot;a&quot;&gt;G&lt;/span&gt;    &lt;span class=&quot;b&quot;&gt;o&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;o&lt;/span&gt;    &lt;span class=&quot;d&quot;&gt;g&lt;/span&gt;    &lt;span class=&quot;e&quot;&gt;l&lt;/span&gt;    &lt;span id=&quot;f&quot;&gt;e&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\n13.2-伪类选择器13.2.1-伪类介绍伪类：它不是页面上真正存在的class名字，它表示的是页面上标签的一种状态。可以根据标签的不同状态来选中标签，基于某个状态，给标签 设置对应的样式。\n1234选择器:状态&#123;    css属性名：属性值;    css属性名：属性值;      &#125;\n\n1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /* a标签未被点击的状态 */        a:link&#123;            color: #f00;        &#125;        /* a标签被鼠标点击之后的状态 */        a:visited&#123;            color: #ccc;        &#125;        /* a标签鼠标移入时的状态 */        a:hover&#123;            color:#fa0        &#125;        /* a标签鼠标点击那个瞬间的状态 */        a:active&#123;            color: #0a0;            font-size: 20px;        &#125;           &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;a href=&quot;https://www.baidu.com&quot;&gt;百度&lt;/a&gt;    &lt;a href=&quot;https://www.jd.com&quot;&gt;京东&lt;/a&gt;    &lt;a href=&quot;https://www.taobao.com&quot;&gt;淘宝&lt;/a&gt;    &lt;a href=&quot;https://www.qq.com&quot;&gt;腾讯&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;\n\n\n常用的伪类选择器（标签的状态，主要针对a标签）：\n:link : 鼠标还没有点击状态\n:visited: 鼠标点击后的状态\n:hover : 鼠标悬停（移入）状态\n:active: 鼠标点击瞬间状态\nL   V   H   A  \n部分网站，他们会将link与visited设置成相同的样式效果\n\n13.2.2-伪类练习123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        a&#123;            text-decoration: none;            font-size: 14px;        &#125;        a:link , a:visited&#123;            color: #222;        &#125;        a:hover&#123;            color: #f00;        &#125;        /* 在css3中，:hover 可以给所有标签设置 */        span:hover&#123;            color: #0af;            /* 设置鼠标样式 */            cursor:pointer;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;&lt;a href=&quot;#&quot;&gt;中国港口空集装箱数量增加，引发大家对外贸担忧，海关总署&lt;/a&gt;&lt;/div&gt;    &lt;div&gt;&lt;a href=&quot;#&quot;&gt;俄罗斯和中国——面向未来的伙伴关系&lt;/a&gt;&lt;/div&gt;    &lt;div&gt;&lt;a href=&quot;#&quot;&gt;后续来了！沙伊在北京历史性和解后，伊朗总统将访问沙特&lt;/a&gt;&lt;/div&gt;    &lt;div&gt;&lt;a href=&quot;#&quot;&gt;将访大陆，马英九是自李登辉以来唯一没来过大陆的台湾地区&lt;/a&gt;&lt;/div&gt;    &lt;div&gt;&lt;a href=&quot;#&quot;&gt;散布明星陈某某隐私5人被拘 此前某博主发布疑似陈飞宇亲密&lt;/a&gt;&lt;/div&gt;    &lt;span&gt;可以给所有标签设置&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\n13.3-伪元素伪元素：通过CSS给标签中添加假的标签，比如::after、::before等。然后还可以通过CSS给这些动态添加的标签去设置样式。\n\n\n\nE:first-letter&#x2F;E::first-letter\nCSS1&#x2F;3\n设置对象内的第一个字符的样式。\n\n\n\nE:first-line&#x2F;E::first-line\nCSS1&#x2F;3\n设置对象内的第一行的样式。\n\n\nE:before&#x2F;E::before\nCSS2&#x2F;3\n设置在对象前（依据对象树的逻辑结构）发生的内容。用来和content属性一起使用\n\n\nE:after&#x2F;E::after\nCSS2&#x2F;3\n设置在对象后（依据对象树的逻辑结构）发生的内容。用来和content属性一起使用\n\n\nE::placeholder\nCSS3\n设置对象文字占位符的样式。\n\n\nE::selection\nCSS3\n设置对象被选择时的颜色。\n\n\n14-css优先级14.1-css的继承css的继承：在css中，子标签可以去使用父标签的样式。子标签继承到了父标签的样式。\n在css中不是所有的样式都可以被继承。\nCSS中可以被继承的样式：\n\n文字样式：color、font-size、font-weight、font-family、font-style\n文本样式：line-height、text-align、text-indent、letter-spacing、word-spacing\n列表样式：list-style\n\ncss的样式继承可以通过浏览器的样式查阅\n\n注意：针对a标签，它的文字样式无法继续到父标签。\n14.2-css优先级【精通】优先级：css的选择器，本身存在一定的优先级，高优先级的选择器，它的样式优先被使用。会覆盖低优先级的样式。\n\ncss优先级的顺序\n! important   &gt;  行内样式  &gt;  id选择器  &gt;  class选择器   &gt; 标签名  &gt;  通用选择器  &gt;  继承 &gt; 默认\n\n\n1234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /* 通用选择器 */        *&#123;            font-size: 50px;        &#125;        /* class选择器 */        .box&#123;            color: #0a0;            font-size: 28px;        &#125;        /* id选择器 */        #box&#123;            /* color: #0af;            font-size: 30px; */        &#125;         /* 标签名选择器 */        div&#123;               color: #f00;            font-size: 26px;        &#125;        span&#123;            color: pink;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot; id=&quot;box&quot; style=&quot;width: 300px;&quot;&gt;        &lt;span&gt;css优先级&lt;/span&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n14.3-css的权重(权值)计算1234567/* 多层级，样式怎么判断 */div .box2 &#123;    color: #0a0;&#125;.box span &#123;    color: #f00;&#125;\n\n1234567&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        &lt;span class=&quot;box2&quot;&gt;            猜猜文字啥颜色        &lt;/span&gt;    &lt;/div&gt;&lt;/body&gt;\n\n\n多层级的选择器，优先级 需要给不同的层级的选择器假设一个css的权重数值(这个值是程序员自己假设的，不是官方给出的)\n行内样式：权值1000\nid选择器：权值100\nclass选择器：权值10\n标签名：权值1\n将这些权值使用到对应的层级样式中，权值加起来越大的数字，优先级越高。\n\n运用场景：用于大型项目层级比较深时处理继承问题\n15-css定位技术15.1-css的定位介绍\n广义上的定位：在css中，与位置有关系的都可以称为定位。例如：浮动，内边距，外边距等\n狭义上的定位：使用css中的position属性去控制标签的位置。\n\n15.2-position属性完成定位1234position ： 主要有三个重要的值 absolute: 绝对定位 fixed ：固定定位 relative ： 相对定位\n\n\nabsolute ： 标签会脱离原来html文件结构（脱离文档流）,会让出自己原来的位置，定位的方位属性控制具体的位置。\n在定位的时候，盒子会先找父标签，如果父标签有定位设置，会基于父标签来定位，如果父标签没有定位属性，继续往外找，直到最后，会以浏览器的边沿为定位的依据。\n1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            /* 位置书写在最前面 */            position: absolute;            right: 0;            bottom: 0;            width: 300px;            height: 250px;            background-color: deeppink;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;    &lt;h2&gt;我是打酱油的，用于测试定位&lt;/h2&gt;    &lt;h2&gt;我是打酱油的，用于测试定位&lt;/h2&gt;    &lt;h2&gt;我是打酱油的，用于测试定位&lt;/h2&gt;&lt;/body&gt;&lt;/html&gt;\n\n固定定位：fixed，脱离html的结构（脱离文档流）,让出自己的位置，通过定位的方位属性控制位置，盒子会被固定到屏幕上，不会随着滚动条的移动而改变自己在屏幕上的位置。\n123456789.box&#123;    /* 位置书写在最前面 */    position: fixed;    left: 0;    top: 0;    width: 200px;    height: 150px;    background-color: deeppink;&#125;\n\n相对定位：relative，不会脱离html文档结构（不脱离文档流），不会让出自己原来所在的布局位置，在使用定位属性的时候，都是基于自己原有布局时所在的位置进行定位。\n123456789.box&#123;    /* 位置书写在最前面 */    position: relative;    left: 0;    top: 0;    width: 200px;    height: 150px;    background-color: deeppink;&#125;\n\n15.3-定位方位控制属性\ntop ： 设置盒子距离顶部的位置\nright ：  设置盒子距离右边的位置\nbottom ：  设置盒子距离底部的位置\nleft ：  设置盒子距离左边的位置\n\n15.4-定位练习15.4.1-css3中的圆角圆角：在css3中，添加border-radius属性，主要用于设置盒子的四个角为圆角。\n1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        div&#123;            margin: 10px auto;            width: 100px;            height: 100px;            background-color: #f00;        &#125;        .box&#123;            border-radius: 50px;        &#125;        .box2&#123;            border-radius: 25px;        &#125;        .box3&#123;            border-radius: 100px;        &#125;        .box4&#123;            width: 200px;            border-radius: 50px;        &#125;        .box5&#123;            width: 200px;            border-radius: 10%;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box3&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box4&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box5&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n15.4.2-八卦图——子绝父相子绝父相：子标签采用绝对定位，父标签使用相对定位（其实只要父标签使用position即可）。\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            position: relative;            margin: 0 auto;            width: 400px;            height: 400px;            border-radius: 200px;            border: 1px solid #ccc;        &#125;        .left&#123;            width: 200px;            height: 400px;            background-color: #000;            border-radius: 200px 0 0 200px;        &#125;        .right&#123;            position: absolute;            top: 0;            right: 0;            width: 200px;            height: 400px;            background-color: #faf;            border-radius: 0 200px 200px 0;        &#125;        .top-circle&#123;            position: absolute;            top: 0;            left: 100px;            width: 200px;            height: 200px;            background-color: #000;            border-radius: 100px;        &#125;        .bottom-circle&#123;            position: absolute;            bottom: 0;            left: 100px;            width: 200px;            height: 200px;            background-color: #faf;            border-radius: 100px;        &#125;        .top-in-circle&#123;            position: absolute;            top: 75px;            left: 175px;            width: 50px;            height: 50px;            background-color: #faf;            border-radius: 25px;        &#125;        .bottom-in-circle&#123;            position: absolute;            bottom: 75px;            left: 175px;            width: 50px;            height: 50px;            background-color: #000;            border-radius: 25px;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;top-circle&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;bottom-circle&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;top-in-circle&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;bottom-in-circle&quot;&gt;&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n15.4.3-将一个盒子放到屏幕最中间12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            /* 将盒子放到屏幕水平和垂直正中间位置 */            position: absolute;            /* 距离顶部 或者底部  或者左边 或者右边 50% */            top: 50%;            left: 50%;            /* 在使用外边距，进行宽度的一半的设置 */            margin-top: -150px;            margin-left: -250px;            width: 500px;            height: 300px;            border-radius: 10px;            background-color: #ccc;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box&#123;            /* 将盒子放到屏幕水平和垂直正中间位置 */            position: absolute;            top: 0;            left: 0;            right: 0;            bottom: 0;            margin: auto;            width: 500px;            height: 300px;            border-radius: 10px;            background-color: #ccc;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n15.5-层级z-index ： 必须是盒子已经使用position进行定位，然后才能使用z-index进行层级的设置。\n数字越大，当前这个盒子就会在最上面。\n12345678910111213141516171819202122232425262728293031323334353637383940&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        div&#123;            width: 200px;            height: 100px;                   &#125;        .box1&#123;            position: absolute;            top: 30px;            left: 100px;            background-color: #0a0;            z-index: -1;        &#125;        .box2&#123;            position: absolute;            top: 50px;            left: 120px;            background-color: #0af;        &#125;        .box3&#123;            position: absolute;            top: 70px;            left: 140px;            background-color: #fa0;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;box3&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n16、弹性盒子16.1、弹性盒子（布局）介绍CSS3中针对浮动布局进行优化，提出弹性盒子布局。2009年C3提出，经历三个版本。\n弹性盒子：flex布局。\n经历三个版本：box、flexbox、flex\n123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box &#123;            display: flex;            width: 600px;            height: 300px;            border: 1px solid #f00;        &#125;        .box div &#123;            width: 160px;            height: 200px;            border: 1px solid #0a0;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        &lt;div&gt;1&lt;/div&gt;        &lt;div&gt;2&lt;/div&gt;        &lt;div&gt;3&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n16.2、弹性盒子的相关概念\n容器：被设置为弹性盒子（display：flex）那个标签，称为弹性容器。注意：单标签无法设置\n项目：放在容器中的其他标签\n基于弹性盒子的其他名词\n主轴：用来设置容器中项目的排列方向，默认方向是：横向（水平方向），可以修改。\n主轴起点：默认是主轴的最左侧\n主轴终点：默认是主轴的最右侧\n侧轴：与主轴正好垂直，方向默认是纵向，侧轴不能设置方向，由主轴的方向来决定。\n侧轴起点：默认盒子的顶部\n侧轴终点：默认盒子的底部\n\n\n\n16.3、在容器上设置属性\ndisplay：flex 将当前的盒子设置为弹性盒子（容器）\n\ndisplay：box\ndisplay：flexbox\ndisplay：flex\n\n\nflex-direction：设置主轴的方向\n\nrow：主轴为水平（横向），默认从左往右\nrow-reverse：主轴为水平方向，默认从右往左\ncolumn：设置主轴为纵向。从上往下\ncolumn-reverse：反正主轴中项目的方向，从下往上\n\n\nflex-wrap: 设置容器的项目是否换行\n\nnowrap ： 不允许换行，项目的宽度会根据当前容器的宽度进行计算\nwrap ： 允许换行\nwrap-reverse：换行切反转\n\n\njustify-content: 设置容器中的内容（项目在主轴）排列方式\n\nflex-strat|left：设置项目左对齐，基于主轴的起点对齐\nflex-end|right：设置项目右对齐，基于主轴的终点对齐\ncenter：水平居中对齐\nspace-between ： 两端对齐，中间的距离平均分配\nspace-around ： 环绕对齐，每个项目左右固定的外边距\nspace-evenly：平均分配，每个项目之间的间距相等\n\n\nalign-items：设置容器中的内容（项目）在侧轴方向上的排列方式（区分行）\n\nflex-start：以侧轴的起点对齐\nflex-end：以侧轴的终点对齐\ncenter：以侧轴中间对齐\n\n\nalign-content: 设置容器中的内容（项目）在侧轴方向上的排列方式（不区分行）\n\nflex-start：以侧轴的起点对齐\nflex-end：以侧轴的终点对齐\ncenter：以侧轴中间对齐\n\n\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box &#123;            /* 设置为盒子采用弹性盒子布局（flex布局） */            display: flex;            width: 600px;            height: 600px;            border: 1px solid #f00;            /* 主轴的方向 */            flex-direction: row;            /* flex-direction: row-reverse; */            /* flex-direction: column; */            /* flex-direction: column-reverse; */            /* 设置项目是否换行 */            /* flex-wrap: nowrap; */            flex-wrap: wrap;            /* flex-wrap: wrap-reverse; */            /* 主轴方向上项目的对齐方式 */            /* justify-content: flex-start; */            /* justify-content: flex-end; */            /* justify-content: center; */            /* justify-content: space-around; */            /* justify-content: space-between; */            /* justify-content: space-evenly; */            /* 设置项目在侧轴上的对齐方式 */            /* align-items: center; */            align-content: flex-start;        &#125;        .box div &#123;            width: 150px;            height: 150px;            border: 1px solid #fa0;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        &lt;div&gt;1&lt;/div&gt;        &lt;div&gt;2&lt;/div&gt;        &lt;div&gt;3&lt;/div&gt;        &lt;div&gt;4&lt;/div&gt;        &lt;div&gt;5&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n16.4、在项目上设置属性容器中的每个项目，可以设置自己的实际的宽和高，但是有时需要根据水平或者垂直方向上剩余的空间来计算某个项目自己的宽度和高度。需要使用项目的伸缩比去计算\n剩余空间 &#x3D; 水平或垂直方向总宽度 - 每个项目宽度 - 每个项目边框 - 每个项目的外边距\n伸缩比：所有项目设置伸缩比累加起来， 剩余空间 * 设置的伸缩比值 &#x2F; 所有伸缩比和\n\nflex-grow: 项目当前占据的位置扩展比例\norder ： 设置项目顺序，默认值 0 ，可以设置正数，也可以设置负数。按照数值大小排列\nalign-self：设置某个项目自己在侧轴对齐方式\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        .box &#123;            /* 设置为盒子采用弹性盒子布局（flex布局） */            display: flex;            /* width: 600px; */            height: 600px;            border: 1px solid #f00;            /* 主轴的方向 */            flex-direction: row;            /* 设置项目是否换行 */            /* flex-wrap: nowrap; */            flex-wrap: wrap;            /* flex-wrap: wrap-reverse; */            /* 主轴方向上项目的对齐方式 */            /* justify-content: flex-start; */            /* 设置项目在侧轴上的对齐方式 */            /* align-items: center; */            /* align-content: flex-start; */            box-sizing: border-box;        &#125;        .box div &#123;            width: 150px;            height: 150px;            border: 1px solid #fa0;            box-sizing: border-box;        &#125;        .box1 &#123;            /* flex-grow: 3; */            align-self: flex-start        &#125;        .box2 &#123;            /* flex-grow: 6; */            align-self: flex-start        &#125;        .box3 &#123;            /* flex-grow: 1; */            align-self: flex-end        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;        &lt;div class=&quot;box1&quot;&gt;1&lt;/div&gt;        &lt;div class=&quot;box2&quot;&gt;2&lt;/div&gt;        &lt;div class=&quot;box3&quot;&gt;3&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n17-盒子居中(4种方式)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;style&gt;        /* .box &#123;            position: absolute;            top: 0;            left: 0;            bottom: 0;            right: 0;            margin: auto;            width: 300px;            height: 300px;            background-color: #fa0;        &#125;        .box &#123;            position: absolute;            top: 50%;            left: 50%;            margin-top: -150px;            margin-left: -150px;            width: 300px;            height: 300px;            background-color: #fa0;        &#125;                 .box &#123;            position: absolute;            top: 50%;            left: 50%;            transform: translate(-50%, -50%);            width: 300px;            height: 200px;            background-color: #fa0;        &#125;        */        .box &#123;            width: 300px;            height: 200px;            background-color: #fa0;        &#125;        html,        body &#123;            width: 100%;            height: 100%;        &#125;        body &#123;            display: flex;            justify-content: center;            align-items: center;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\n18、web图标字体web字体：在页面像使用普通的文字一样去使用图标。图标的大小，颜色等都可以通过CSS文字和文本样式去设置。\n编码表：将生活中的文字符号，通过表格（编码表），给出对应的编号，编号可以转成二进制最终存储在计算机中。\n我们使用阿里的矢量图：\n1、注册账号，登录\n2、搜索对应的图标，添加到购物车中\n3、将购物车中图标添加到一个项目中，如果没有对应的项目，可以新建\n4、在项目中找到对应的图标，修改class名称\n5、下载至本地，解压后，修改文件夹的名称fonts\n6、将文件夹复制到项目中\n7、在项目中引入iconfont的css文件\n8、在需要图标的位置上使用span标签引入字体图标\n","slug":"css课件","date":"2024-10-16T08:39:46.339Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"4a207b7e885fdbcca8129599135e5f2e","title":"MySQL基础","content":"\nMySQL基础数据库概论数据管理演变\n\n人工档案管理\n文件系统管理\n数据库管理\n\n\n数据库管理系统\n\n层次数据库\n网状型数据库\n关系型数据库\n网格型数据库\n对象型数据库\n非关系型数据库\n\n\n关系型数据库1234数据库是一个长期存储在计算机内的、有组织的、有共享的、统一管理的数据集合.在数据库中的数据我们可以用二维表格的形式理解,例如表格中一列的标题我们称之为字段表格中一行数据我们称之为一条记录\n\n\n\n\nid\naccount\npassword\nnickname\nuuid\n\n\n\n1\nroot\nroot\n超级管理员\n2e6342dd-c475-410f-9948-e4cc1948ef0f\n\n\n2\nadmin\nadmin\nguanli\ne30e8060-9320-4b72-8722-10328348a272\n\n\n3\nphoenix\n123456\n李昊哲\n3ddc2b0e-fdba-4f61-b0a8-2585ffdce940\n\n\n1234数据库由3部分组成数据库：用于存储数据数据库管理系统：用户管理数据库的软件数据库应用程序：为了提高数据库系统的管理能力使用的数据库管理的补充\n\n\n12345678910111213141516171819对数据库进行查询、修改操作的语言我们称之为SQL结构化查询语言(Structured Query Language)简称SQL(发音：/ˈes kjuː ˈel/ &quot;S-Q-L&quot;)，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的后缀名。+标准：SQL-92、SQL-99、SQL-2003非标准：方言常用关系型数据库Oracle、MySQL、SQLServer、...对象型数据库PostgresQL、...常用的非关系数据库（在中国）Redis、MongoDB、HBase、..按照SQL-92标准SQL包含4部分1、数据库定义语言(DDL)：create、drop、alter、...2、数据库操作语言(DML)：insert、update、delete、...3、数据库查询语言(DQL)：select4、数据库控制语言(DCL)：grant、revoke、.5、数据库事务控制语言(TCL)：commit、rollback\n\n安装\n在线安装\n安装包\n绿色版\n集成环境\n编译安装\n\n数据库常用操作连接数据库\nmysql\n-h 服务器IP\n-u 账户\n-p 密码\n\n1mysql -h localhost -uroot -p\n\n1234567891011Welcome to the MySQL monitor.  Commands end with ; or \\g.Your MySQL connection id is 14Server version: 9.0.1 MySQL Community Server - GPLCopyright (c) 2000, 2024, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.\n\n显示目前已有数据库1show databases;\n\n1234567891011mysql&gt; show databases;+--------------------+| Database           |+--------------------+| information_schema || mysql              || performance_schema || sys                |+--------------------+4 rows in set (0.00 sec)\n\n显示当前使用的数据库12345678mysql&gt; select database();+------------+| database() |+------------+| NULL       |+------------+1 row in set (0.00 sec)\n\n创建数据库12345# 创建数据库 格式：create database 数据库名称;create database `chap01`;# 显示已存在的数据库 检查数据库创建是否成功show databases;\n\n查看数据库创建详细过程12345678mysql&gt; show create database `chap01`;+----------+----------------------------------------------------------------------------------------------------------------------------------+| Database | Create Database                                                                                                                  |+----------+----------------------------------------------------------------------------------------------------------------------------------+| chap01   | CREATE DATABASE `chap01` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION=&#x27;N&#x27; */ |+----------+----------------------------------------------------------------------------------------------------------------------------------+1 row in set (0.00 sec)\n\n创建数据库同时指定字符集12345# 创建数据库并指定字符集 推荐字符集使用 utf8 或者  utf8mb4create database `chap001` default character set gbk;show databases;show create database `chap001`;\n\n删除数据库1234# 删除数据库 drop database 数据库名称drop database `chap001`;# 显示已存在的数据库 检查数据库删除是否成功show databases;\n\n切换数据库\n使用哪一个数据库\n\n12345# 切换数据库 使用哪个数据库use chap01;#  显示当前使用的数据库 检查数据库切换是否成功select database();\n\n123456789101112131415161718mysql&gt; select database();+------------+| database() |+------------+| NULL       |+------------+1 row in set (0.00 sec)mysql&gt; use chap01;Database changedmysql&gt; select database();+------------+| database() |+------------+| chap01     |+------------+1 row in set (0.00 sec)\n\n数据表常用操作\n创建基本数据表1234567891011# 创建数据库create databae chap01;# 使用刚刚创建的数据库use chap01;# 创建数据表 格式 create table 表名称# [HY000][4028] A table must have at least one visible column.# create table `tb_user`;# 基本格式 create table 表名称 (字段1 数据类型,字段2 数据类型,字段...);create table `tb_user` (`user_id` int,`user_name` varchar(50));\n\n查看数据表创建详细过程1show create table `tb_user`;\n\n\n根据数据表创建详细过程 引申出 创建数据表的格式\n创建数据表的同时 指定使用的引擎和字符集\n\n1234create table `tb_user` (    `user_id` int,    `user_name` varchar(50)) engine=innodb default charset=utf8mb4;\n\n描述数据表结构12describe `tb_user`;desc `tb_user`;\n\n显示当前数据库所有数据表1show tables;\n\n删除数据表1drop table `tb_user`;\n\n存储引擎\n数据库存储引擎是数据库地产软件组织\n\n\nMySQL 提供了多给不同的存储引擎，包括事务安全型和非事务安全型\n\n1show engines;\n\n\n数据类型\n\n数值型 整数、浮点数和定点数\n日期与时间\n字符串\n布尔型\n\n\n整数型\n\n\n数据类型\n说明\n存储\n有符号范围\n无符号范围\n\n\n\ntinyint\n很小的整数\n1字节\n-128~127\n0~255\n\n\nsmallint\n小的整数\n2字节\n-32768~32767\n0~65535\n\n\nmediumint\n中等大小的整数\n3字节\n-8388608~8388607\n0~16777215\n\n\nint(integer)\n普通大小的整数\n4字节\n-2147483648~2147483647\n0~4294967295\n\n\nbigint\n大整数\n8字节\n-9223372036854775808~9223372036854775807\n0~18446744073709551615\n\n\n浮点型\n\n\n数据类型\n说明\n存储\n有符号范围\n无符号范围\n\n\n\nfloat\n单精度浮点数\n4个字\n\n\n\n\ndouble\n双精度浮点数\n8个字节\n\n\n\n\n定点型\n\n\n数据类型\n说明\n存储\n有符号范围\n无符号范围\n\n\n\ndecimal(M,D)\n严格定点数\nM+2个字节\n\n\n\n\n日期与时间\n\n\n数据类型\n日期格式\n存储\n日期范围\n\n\n\nyear\nYYYY\n1字节\n1901~2155\n\n\ndate\nYYYY-MM-DD\n3字节\n1000-01-01~9999-12-31\n\n\ntime\nHH:MM:SS\n3字节\n-838:59:59~838:59:59\n\n\ndatetime\nYYYY-MM-DD HH:MM:SS\n8字节\n1000-01-01 00:00:00 ~ 9999-12-31 23:59:59\n\n\ntimestamp\nYYYY-MM-DD HH:MM:SS\n4字节\n1970-01-01 00:00:00 UTC ~ 2038-01-19 03:14:07 UTC\n\n\n字符串\n文本字符串\n\n\n\n数据类型\n说明\n存储\n\n\n\nchar(M)\n固定长度\nM字节，1 &lt;&#x3D;  M &lt;&#x3D;255\n\n\nvarchar(M)\n非固定长度 可变长\nL字节，L &lt;&#x3D; M 和1 &lt;&#x3D;  M &lt;&#x3D;255\n\n\ntinytext\n非常小的文本\n2^8\n\n\ntext\n小文本\n2^16\n\n\nmediumtext\n中等大小的文本\n2^24\n\n\nlongtext\n大的文本\n2^32\n\n\n\n二进制字符串\n\n\n\n数据类型\n说明\n存储\n\n\n\nbit\n\n\n\n\nbinary\n\n\n\n\nvarbinary\n\n\n\n\ntinyblob\n\n\n\n\nmediumblob\n\n\n\n\nlongblob\n\n\n\n\n\n\nDML准备1234create table tb_user (    user_id int,    user_name varchar(50)) engine=innodb default charset=utf8mb4;\n\ninsert\n格式 插入一条数据 insert into 数据表名 (字段1名,字段2名,…) value (字段1值,字段2值,…)\n格式 插入一条数据 为所有字段赋值 insert into 数据表名 value (字段1值,字段2值,…)\n\n12insert into tb_user (user_id,user_name) value (1,&#x27;user01&#x27;);insert into tb_user value (2,&#x27;user02&#x27;);\n\n\n格式 插入多条数据 insert into 数据表名 (字段1名,字段2名,…) values (字段1值,字段2值,…),(字段1值,字段2值,…)\n\n1insert into tb_user values (3,&#x27;user03&#x27;),(4,&#x27;user04&#x27;);\n\n\n查询数据表中的数据\n\n1select * from tb_user;\n\nupdate\nupdate 数据表名 set 字段1名 &#x3D; 值,字段2名 &#x3D; 值,… where 筛选字段(值必须能够帝国为到当前行)\n\n1234# update tb_user set user_name = &#x27;李昊哲&#x27;;update tb_user set user_name = &#x27;李昊哲&#x27; where user_id = 3;select * from tb_user;\n\ndelete truncate\n 格式 delete from 数据表名 where 筛选字段(值必须能够帝国为到当前行)\n\n1234# delete from tb_user;delete from tb_user where user_id = 3;select * from tb_user;\n\n\n清空数据表\n\n12# delete from tb_user;truncate tb_user;\n\n\n重点面试题 重点中的重点 必问delete 与 truncate 区别一般人的回答 delete 仅仅是删除数据效率比较低 truncate 相对于删除表后在重新建表 效率比较高高手的回答 delete 效率比较低 为每行数据打一个标记 水位线线不变高手的回答 truncate 效率比较高 相对于删除表后在重新建表 重置水位线\nupdate 与 delete 哪个速度更快update &#x3D; delete + insert\n\n约束\n\n非空约束\n\n默认约束\n\n唯一约束\n\n检查约束\n\n主键约束\n\n外键约束\n\n\n\n非空约束1234567create table user01 (    id int comment &#x27;用户编号&#x27;,    account varchar(50) not null comment &#x27;用户账号&#x27;,    password varchar(200) not null comment &#x27;用户密码&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;);\n\n123456789101112mysql&gt; describe user01;+-----------+--------------+------+-----+---------+-------+| Field     | Type         | Null | Key | Default | Extra |+-----------+--------------+------+-----+---------+-------+| id        | int unsigned | YES  |     | NULL    |       || account   | varchar(50)  | NO   |     | NULL    |       || password  | varchar(200) | NO   |     | NULL    |       || real_name | varchar(50)  | YES  |     | NULL    |       |+-----------+--------------+------+-----+---------+-------+4 rows in set (0.00 sec)\n\n123456insert into user01 value (1,&#x27;admin01&#x27;,&#x27;pass01&#x27;,&#x27;user01&#x27;);insert into user01 (id, account, password) value (2,&#x27;admin02&#x27;,&#x27;pass02&#x27;);select * from user01;# [HY000][1364] Field &#x27;account&#x27; doesn&#x27;t have a default valueinsert into user01 (id) value (2);\n\n默认约束123456create table user02 (    id int unsigned comment &#x27;用户编号&#x27;,    account varchar(50) not null comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;);\n\n1234567891011mysql&gt; describe  user02;+-----------+--------------+------+-----+---------+-------+| Field     | Type         | Null | Key | Default | Extra |+-----------+--------------+------+-----+---------+-------+| id        | int unsigned | YES  |     | NULL    |       || account   | varchar(50)  | NO   |     | NULL    |       || password  | varchar(200) | NO   |     | 123456  |       || real_name | varchar(50)  | YES  |     | NULL    |       |+-----------+--------------+------+-----+---------+-------+4 rows in set (0.01 sec)\n\n12345insert into user02 value (1,&#x27;admin01&#x27;,&#x27;pass01&#x27;,&#x27;user01&#x27;);insert into user02 (id, account, password) value (2,&#x27;admin02&#x27;,&#x27;pass02&#x27;);insert into user02 (id, account) value (3,&#x27;admin03&#x27;);select * from user02;\n\n唯一性约束\n注意：值虽然不能重复但是可以为空\n\n12345678910111213141516create table user03 (    id int unsigned comment &#x27;用户编号&#x27;,    account varchar(50) not null comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    id_card varchar(18) unique comment &#x27;身份证&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;);# 或者create table user03 (    id int unsigned comment &#x27;用户编号&#x27;,    account varchar(50) not null comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    id_card varchar(18) comment &#x27;身份证&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;,    unique key id_card (id_card));\n\n123456789101112mysql&gt; describe user03;+-----------+--------------+------+-----+---------+-------+| Field     | Type         | Null | Key | Default | Extra |+-----------+--------------+------+-----+---------+-------+| id        | int unsigned | YES  |     | NULL    |       || account   | varchar(50)  | NO   |     | NULL    |       || password  | varchar(200) | NO   |     | 123456  |       || id_card   | varchar(18)  | YES  | UNI | NULL    |       || real_name | varchar(50)  | YES  |     | NULL    |       |+-----------+--------------+------+-----+---------+-------+5 rows in set (0.00 sec)\n\n123456insert into user03  value (1,&#x27;admin01&#x27;,&#x27;pass01&#x27;,&#x27;220422&#x27;,&#x27;user01&#x27;);# [23000][1062] Duplicate entry &#x27;220422&#x27; for key &#x27;user03.id_card&#x27;insert into user03  value (2,&#x27;admin02&#x27;,&#x27;pass02&#x27;,&#x27;220422&#x27;,&#x27;user02&#x27;);insert into user03 (id, account, password, real_name) value (3,&#x27;admin03&#x27;,&#x27;pass03&#x27;,&#x27;user03&#x27;);insert into user03 (id, account, password, real_name) value (4,&#x27;admin04&#x27;,&#x27;pass04&#x27;,&#x27;user04&#x27;);select * from user03;\n\n检查性约束\n注意：值虽然必须符合检查规则但是可以为空\n\n12345678create table user04(    id int unsigned comment &#x27;用户编号&#x27;,    account varchar(50) not null comment &#x27;用户账号&#x27;,    password varchar(50) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    id_card char(18) unique comment &#x27;身份证&#x27;,    age int unsigned check (age &gt;= 18)  comment &#x27;用户年龄 年龄在18岁以上包含18岁&#x27;,    real_name varchar(50) comment &#x27;用户密码&#x27;);\n\n12345678910111213mysql&gt; describe user04;+-----------+--------------+------+-----+---------+-------+| Field     | Type         | Null | Key | Default | Extra |+-----------+--------------+------+-----+---------+-------+| id        | int unsigned | YES  |     | NULL    |       || account   | varchar(50)  | NO   |     | NULL    |       || password  | varchar(200) | NO   |     | 123456  |       || id_card   | varchar(18)  | YES  | UNI | NULL    |       || age       | int unsigned | YES  |     | NULL    |       || real_name | varchar(50)  | YES  |     | NULL    |       |+-----------+--------------+------+-----+---------+-------+6 rows in set (0.00 sec)\n\n123456describe user04;insert into user04 (id,account,age) value (1,&#x27;admin01&#x27;, 18);# [HY000][3819] Check constraint &#x27;user04_chk_1&#x27; is violated.insert into user04 (id,account,age) value (2,&#x27;admin02&#x27;, 17);insert into user04 (id,account) value (3,&#x27;admin03&#x27;);select * from user04;\n\n主键约束\n值不能为空且唯一约束\n主键约束 约等于 非空约束 + 唯一性约束\n\n123456create table user050 (    id int unsigned comment &#x27;用户编号&#x27;,    account varchar(50) not null unique comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;);\n\n12345678910mysql&gt; describe user050;+-----------+--------------+------+-----+---------+-------+| Field     | Type         | Null | Key | Default | Extra |+-----------+--------------+------+-----+---------+-------+| id        | int unsigned | YES  |     | NULL    |       || account   | varchar(50)  | NO   | PRI | NULL    |       || password  | varchar(200) | NO   |     | 123456  |       || real_name | varchar(50)  | YES  |     | NULL    |       |+-----------+--------------+------+-----+---------+-------+4 rows in set (0.00 sec)\n\n1234567891011121314mysql&gt; show create table user050;+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| Table   | Create Table                                                                                                                                                                                                                                                                                                                                                                                |+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| user050 | CREATE TABLE `user050` (  `id` int unsigned DEFAULT NULL COMMENT &#x27;用户编号&#x27;,  `account` varchar(50) NOT NULL COMMENT &#x27;用户账号&#x27;,  `password` varchar(200) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;用户密码&#x27;,  `real_name` varchar(50) DEFAULT NULL COMMENT &#x27;用户姓名&#x27;,  UNIQUE KEY `account` (`account`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci                 |+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+1 row in set (0.00 sec)\n\n单主键约束1234567891011121314create table user051 (    id int unsigned primary key comment &#x27;用户编号&#x27;,    account varchar(50) not null unique comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;);# 或者create table user051 (    id int unsigned comment &#x27;用户编号&#x27;,    account varchar(50) not null unique comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;,    primary key (id));\n\n12345678910mysql&gt; describe user051;+-----------+--------------+------+-----+---------+-------+| Field     | Type         | Null | Key | Default | Extra |+-----------+--------------+------+-----+---------+-------+| id        | int unsigned | NO   | PRI | NULL    |       || account   | varchar(50)  | NO   | UNI | NULL    |       || password  | varchar(200) | NO   |     | 123456  |       || real_name | varchar(50)  | YES  |     | NULL    |       |+-----------+--------------+------+-----+---------+-------+4 rows in set (0.00 sec)\n\n123456789101112131415mysql&gt; show create table user051;+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| Table   | Create Table                                                                                                                                                                                                                                                                                                                                                                                                  |+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| user051 | CREATE TABLE `user051` (  `id` int unsigned NOT NULL COMMENT &#x27;用户编号&#x27;,  `account` varchar(50) NOT NULL COMMENT &#x27;用户账号&#x27;,  `password` varchar(200) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;用户密码&#x27;,  `real_name` varchar(50) DEFAULT NULL COMMENT &#x27;用户姓名&#x27;,  PRIMARY KEY (`id`),  UNIQUE KEY `account` (`account`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci                 |+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+1 row in set (0.00 sec)\n\n12345678insert into user051 value (1,&#x27;admin01&#x27;,&#x27;pass01&#x27;,&#x27;user01&#x27;);# [23000][1062] Duplicate entry &#x27;1&#x27; for key &#x27;user051.PRIMARY&#x27;insert into user051 value (1,&#x27;admin02&#x27;,&#x27;pass02&#x27;,&#x27;user02&#x27;);# [HY000][1364] Field &#x27;id&#x27; doesn&#x27;t have a default valueinsert into user051 (account, password, real_name) value (&#x27;admin03&#x27;,&#x27;pass03&#x27;,&#x27;user03&#x27;);select * from user051;\n\n主键自增长\nauto_increment\n\n1234567create table user052 (    id int unsigned auto_increment comment &#x27;用户编号&#x27;,    account varchar(50) not null unique comment &#x27;用户账号&#x27;,    password varchar(200) not null default &#x27;123456&#x27; comment &#x27;用户密码&#x27;,    real_name varchar(50) comment &#x27;用户姓名&#x27;,    primary key (id));\n\n1234567891011mysql&gt; describe user052;+-----------+--------------+------+-----+---------+----------------+| Field     | Type         | Null | Key | Default | Extra          |+-----------+--------------+------+-----+---------+----------------+| id        | int unsigned | NO   | PRI | NULL    | auto_increment || account   | varchar(50)  | NO   | UNI | NULL    |                || password  | varchar(200) | NO   |     | 123456  |                || real_name | varchar(50)  | YES  |     | NULL    |                |+-----------+--------------+------+-----+---------+----------------+4 rows in set (0.00 sec)\n\n12insert into user052 (account, real_name) values (&#x27;admin01&#x27;,&#x27;user01&#x27;),(&#x27;admin02&#x27;,&#x27;user02&#x27;),(&#x27;admin03&#x27;,&#x27;user03&#x27;);select * from user052;\n\n联合主键12345678create table tb_order (    order_id int comment &#x27;订单号&#x27;,    item_id int comment &#x27;流水号&#x27;,    commodity_id int comment &#x27;商品编号&#x27;,    quantity int comment &#x27;购买数量&#x27;,    price int comment &#x27;单价&#x27;,    primary key (order_id,item_id));\n\n123456789101112mysql&gt; describe tb_order;+--------------+------+------+-----+---------+-------+| Field        | Type | Null | Key | Default | Extra |+--------------+------+------+-----+---------+-------+| order_id     | int  | NO   | PRI | NULL    |       || item_id      | int  | NO   | PRI | NULL    |       || commodity_id | int  | YES  |     | NULL    |       || quantity     | int  | YES  |     | NULL    |       || price        | int  | YES  |     | NULL    |       |+--------------+------+------+-----+---------+-------+5 rows in set (0.00 sec)\n\n12insert into tb_order values (10000,1,1001,1,10),(10000,2,1002,2,20),(10000,3,1003,3,003),(10001,1,1001,1,10),(10001,2,1002,2,20),(10001,3,1003,3,003);select * from  tb_order;\n\n外键约束1234567891011121314151617# 创建主表create table course (    c_id int auto_increment comment &#x27;专业编号&#x27;,    c_name varchar(20) comment &#x27;专业名称&#x27;,    primary key (c_id));insert into course (c_name) values (&#x27;大数据&#x27;),(&#x27;人工智能&#x27;);select * from course;# 创建从表create table student (    stu_id int auto_increment comment &#x27;学生编号&#x27;,    stu_name varchar(20) comment &#x27;学生姓名&#x27;,    c_id int comment &#x27;专业名称&#x27;,    primary key (stu_id),    constraint fk_course_student foreign key (c_id) references course (c_id));\n\n12345678910mysql&gt; describe student;+----------+-------------+------+-----+---------+----------------+| Field    | Type        | Null | Key | Default | Extra          |+----------+-------------+------+-----+---------+----------------+| stu_id   | int         | NO   | PRI | NULL    | auto_increment || stu_name | varchar(20) | YES  |     | NULL    |                || c_id     | int         | YES  | MUL | NULL    |                |+----------+-------------+------+-----+---------+----------------+3 rows in set (0.00 sec)\n\n123insert into student (stu_name, c_id) values (&#x27;张三&#x27;,1),(&#x27;李四&#x27;,2),(&#x27;王五&#x27;,1),(&#x27;赵六&#x27;,2);select * from student;\n\n12# [23000][1452] Cannot add or update a child row: a foreign key constraint fails (`chap01`.`student`, CONSTRAINT `fk_course_student` FOREIGN KEY (`c_id`) REFERENCES `course` (`c_id`))insert into student (stu_name, c_id) values (&#x27;显眼包&#x27;,3);\n\n12# [23000][1451] Cannot delete or update a parent row: a foreign key constraint fails (`chap01`.`student`, CONSTRAINT `fk_course_student` FOREIGN KEY (`c_id`) REFERENCES `course` (`c_id`))delete from course where c_id = 2;\n\n12345678# [23000][1451] Cannot delete or update a parent row: a foreign key constraint fails (`chap01`.`student`, CONSTRAINT `fk_course_student` FOREIGN KEY (`c_id`) REFERENCES `course` (`c_id`))delete from course where c_id = 2;# 删除主表中被用于的数据 解决方案# 1、如果子表中存在匹配的记录 删除从表外键# 2、如果子表中存在匹配的记录 将从表数据级联删除# 3、如果子表中存在匹配的记录 将子表的中的外键字段数据设置为null# 4、如果子表中存在匹配的记录在不允许主表进行 update 和 delete 操作\n\n1drop  table student;\n\ncascade123456789101112# cascade 级联删除 当主表发生 update | delete 时，从表 同步 update | deletedrop table student;create table student (    stu_id int auto_increment comment &#x27;学生编号&#x27;,    stu_name varchar(20) comment &#x27;学生姓名&#x27;,    c_id int comment &#x27;专业名称&#x27;,    primary key (stu_id),    constraint fk_course_student foreign key (c_id) references course (c_id) on delete cascade on update cascade);insert into student (stu_name, c_id) values (&#x27;张三&#x27;,1),(&#x27;李四&#x27;,2),(&#x27;王五&#x27;,1),(&#x27;赵六&#x27;,2);select * from student;\n\n123update course set c_id = 3 where c_id = 2;select * from course;select * from student;\n\n123delete from course where c_id = 3;select * from course;select * from student;\n\nno action123456789101112131415161718# no action 当从表中有主表中匹配的记录 则不运行主表进行 update | delete 操作drop  table student;drop  table course;create table course (    c_id int auto_increment comment &#x27;专业编号&#x27;,    c_name varchar(20) comment &#x27;专业名称&#x27;,    primary key (c_id));insert into course (c_name) values (&#x27;大数据&#x27;),(&#x27;人工智能&#x27;);create table student (    stu_id int auto_increment comment &#x27;学生编号&#x27;,    stu_name varchar(20) comment &#x27;学生姓名&#x27;,    c_id int comment &#x27;专业名称&#x27;,    primary key (stu_id),    constraint fk_course_student foreign key (c_id) references course (c_id) on delete no action on update no action);insert into student (stu_name, c_id) values (&#x27;张三&#x27;,1),(&#x27;李四&#x27;,2),(&#x27;王五&#x27;,1),(&#x27;赵六&#x27;,2);select * from student;\n\n12# [23000][1451] Cannot delete or update a parent row: a foreign key constraint fails (`chap01`.`student`, CONSTRAINT `fk_course_student` FOREIGN KEY (`c_id`) REFERENCES `course` (`c_id`))update course set c_id = 3 where c_id = 2;\n\n12# [23000][1451] Cannot delete or update a parent row: a foreign key constraint fails (`chap01`.`student`, CONSTRAINT `fk_course_student` FOREIGN KEY (`c_id`) REFERENCES `course` (`c_id`))delete from course where c_id = 2;\n\nrestrict\nrestrict 同 no action ,都是立即检查外键约束\nMySQL 默认使用方案\n\nset null12345678910111213141516171819# 当主表 update | delete 时，从表匹配的记录字段 设置为 null 注意 外键不能设置 not nulldrop table student;drop table course;create table course (    c_id int auto_increment comment &#x27;专业编号&#x27;,    c_name varchar(20) comment &#x27;专业名称&#x27;,    primary key (c_id));insert into course (c_name) values (&#x27;大数据&#x27;),(&#x27;人工智能&#x27;);create table student (    stu_id int auto_increment comment &#x27;学生编号&#x27;,    stu_name varchar(20) comment &#x27;学生姓名&#x27;,    c_id int comment &#x27;专业名称&#x27;,    primary key (stu_id),    constraint fk_course_student foreign key (c_id) references course (c_id) on delete set null on update  set null);insert into student (stu_name, c_id) values (&#x27;张三&#x27;,1),(&#x27;李四&#x27;,2),(&#x27;王五&#x27;,1),(&#x27;赵六&#x27;,2);select * from student;\n\n123update course set c_id = 3 where c_id = 2;select * from course;select * from student;\n\n123delete from course where c_id = 1;select * from course;select * from student;\n\ndefault\ndefault 主表有变更时, 从表将外键列设置成一个默认的值但Innodb不能识别\n\n总结：\n主表更新从表同步，主表删除从表set null\n\n1234567891011121314151617drop table student;drop table course;create table course (    c_id int auto_increment comment &#x27;专业编号&#x27;,    c_name varchar(20) comment &#x27;专业名称&#x27;,    primary key (c_id));insert into course (c_name) values (&#x27;大数据&#x27;),(&#x27;人工智能&#x27;);create table student (    stu_id int auto_increment comment &#x27;学生编号&#x27;,    stu_name varchar(20) comment &#x27;学生姓名&#x27;,    c_id int comment &#x27;专业名称&#x27;,    primary key (stu_id),    constraint fk_course_student foreign key (c_id) references course (c_id) on delete set null on update cascade);insert into student (stu_name, c_id) values (&#x27;张三&#x27;,1),(&#x27;李四&#x27;,2),(&#x27;王五&#x27;,1),(&#x27;赵六&#x27;,2);select * from student;\n\n修改表修改表名称\n格式 alter table 旧表名称 rename to 新表名称\n\n1alter table tb_user rename to  user;\n\n1show tables;\n\n修改字段数据类型\n格式 alter table 表名称 modify  字段名称 新的数据类型\n\n1desc user;\n\n1alter table user modify user_name char(20);\n\n1desc user;\n\n修改字段数据约束\n格式 alter table 表名称 modify  字段名称 新数据类型 新约束\n\n1desc user;\n\n1alter table user modify user_name varchar(50) not null comment &#x27;姓名&#x27;;\n\n1desc user;\n\n修改字段名称\n格式 alter table 表名称 change  旧字段名称 新字段名称 新数据类型 新约束\n\n1desc user;\n\n1alter table user change user_name name char(20) null comment &#x27;姓名&#x27;;\n\n1desc user;\n\n添加字段\n格式 alter table 表名称 add 字段名称 数据类型 约束\n\n1desc user;\n\n123alter table user add gender enum(&#x27;F&#x27;,&#x27;M&#x27;) default &#x27;M&#x27; comment &#x27;性别 F代表女 M代表男 默认值M&#x27;;alter table user add date_of_birth date comment &#x27;出生日期&#x27; first;alter table user add id_card char(18) comment &#x27;身份证&#x27; after user_id;\n\n1desc user;\n\n删除字段\n格式 alter table 表名称 drop 字段名称\n\n1desc user;\n\n1alter table user drop date_of_birth;\n\n1desc user;\n\n调整字段位置\n格式 alter table 表名称 modify 字段名称 数据类型 约束 位置\n\n1desc user;\n\n12alter table user modify id_card char(18) not null comment &#x27;身份证&#x27;  first;alter table user modify user_id int not null comment &#x27;用户编号&#x27; after name;\n\n1desc user;\n\n修改存储引擎\n格式 alter table 表名称 engine &#x3D; 引擎名称\n\n1show  create table user;\n\n1alter table user engine = myisam;\n\n1show  create table user;\n\n修改字符集\n格式 alter table 表名称 character set  字符集名称\n\n1show  create table user;\n\n1alter table user character set gbk;\n\n1show  create table user;\n\n数据备份与还原数据备份\n使用 mysqldump\n格式：msyqldump 需要备份的数据库名称 -h 服务器地址 -u 账号 -p · 备份文件存储路径\n\n1234C:\\Users\\Administrator&gt;mysqldump chap01 -h localhost  -uroot -p &gt; d:\\chap01.sqlEnter password: ******C:\\Users\\Administrator&gt;\n\n数据还原\n\n使用 mysql 格式  mysql 需要被还原的库 -h 服务器地址 -u 账号 -p &lt; sql文件存储路径\n\n使用 source 格式  source  sql文件存储路径 \n注意：source 需要在mysql命令行下在需要被环境的数据库执行\n\n\n\n1234C:\\Users\\Administrator&gt;mysql chap01 -h localhost -uroot -p &lt; d:\\chap01.sqlEnter password: ******C:\\Users\\Administrator&gt;\n\n123456789101112131415161718C:\\Users\\Administrator&gt;mysql -h localhost -uroot -pEnter password: ******Welcome to the MySQL monitor.  Commands end with ; or \\g.Your MySQL connection id is 32Server version: 9.0.1 MySQL Community Server - GPLCopyright (c) 2000, 2024, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.mysql&gt; use chap01;Database changedmysql&gt; source d:/chap01.sql;mysql&gt;\n\n\n注意：windows 路劲分隔符\nd:&#x2F;chap01.sql;\nd:\\\\chap01.sql;\n\n数据库查询语言 DQL\n准备数据123456789101112131415C:\\Users\\Administrator&gt; mysql -uroot -pEnter password: ******Welcome to the MySQL monitor.  Commands end with ; or \\g.Your MySQL connection id is 20Server version: 8.0.34 MySQL Community Server - GPLCopyright (c) 2000, 2023, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.mysql&gt;\n\n1create database chap02;\n\n1use chap02;\n\n1source d:/chap02_data.sql;\n\n单表查询查询所有1select * from fruit;\n\n按字段查询1select f_name,f_price from fruit;\n\n12345678910111213141516171819202122232425262728293031# 2.2.3.1 查询香蕉的价格select f_name,f_price from fruit where f_name = &#x27;banana&#x27;;# 2.2.3.2 查询价格为10.30的水果select f_name,f_price from fruit where f_price = 10.30;# 2.2.3.4 查询价格 高于5.2 低于10.30 的水果select f_name,f_price from fruit where f_price &gt; 5.2 &amp;&amp; f_price &lt; 10.30;select f_name,f_price from fruit where f_price &gt; 5.2 and f_price &lt; 10.30;select f_name,f_price from fruit where f_price &gt;= 5.2 &amp;&amp; f_price &lt;= 10.30;select f_name,f_price from fruit where f_price &gt;= 5.2 and f_price &lt;= 10.30;# 2.2.3.5 查询价格 高于5.2 低于10.30 的水果# select f_name,f_price from fruit where f_price &gt;= 5.2 and f_price &lt;= 10.30;select f_name,f_price from fruit where f_price between 5.2 and 10.30;# 2.2.3.6 查询供应商 s_id 为 101 和 102 供应的水果select s_id,f_name,f_price from fruit where s_id = 101 || s_id = 102;select s_id,f_name,f_price from fruit where s_id = 101 or s_id = 102;# 查询价格在 5.2 与 10.2 之间 供应商 s_id 为 101 和 102 供应的水果select s_id,f_name,f_price    from        fruit    where        (f_price between 5.2 and 10.30)        and        (s_id = 101 or s_id = 102);select s_id,f_name,f_price    from        fruit    where        (s_id = 101 or s_id = 102)        and        (f_price between 5.2 and 10.30);\n\nin 查询123456# 2.2.4.1 查询供应商 s_id 为 101 和 102 供应的水果select s_id,f_name,f_price from fruit where s_id = 101 or s_id = 102;select s_id,f_name,f_price from fruit where s_id in ( 101 , 102);# 2.2.4.2 查询供应商 s_id 不是 101 和 102 供应的水果select s_id,f_name,f_price from fruit where s_id != 101 and s_id != 102;select s_id,f_name,f_price from fruit where s_id not in ( 101 , 102);\n\nnull 查询1234# 2.2.5.1 # 查询没有绑定邮箱的消费者select * from customer where c_email is null;# 2.2.5.2 # 查询没有绑定邮箱的消费者select * from customer where c_email is not null;\n\n模糊查询12345678910# 2.2.6.1 查询所有名称 b 开头的水果# % 代表零个或多个字符select * from fruit where f_name like &#x27;b%&#x27;;# 2.2.6.2 查询所有名称 含有 g 的水果select * from fruit where f_name like &#x27;%g%&#x27;;# 2.2.6.3 查询所有名称 b开头 y结尾 的水果select * from fruit where f_name like &#x27;b%y&#x27;;# 2.2.6.4 查询所有名称 y结尾 y的前面有5个字符 的水果# 一个下划线代表一个字符select * from fruit where f_name like &#x27;_____y&#x27;;\n\n排序1234567# 2.2.7.1 按照水果价格升序显示select * from fruit order by f_price;select * from fruit order by f_price asc;# 2.2.7.2 按照水果价格降序显示select * from fruit order by f_price desc;# 2.2.7.3 按照供应商升序 如果供应商相同的情况下按照价格降序select * from fruit order by s_id,f_price desc ;\n\n聚合函数123456789101112131415161718192021# 2.2.8.1.1 统计水果种类数量select count(*) as &#x27;total&#x27; from fruit;select count(1) as &#x27;total&#x27; from fruit;select count(f_id) as &#x27;total&#x27; from fruit;# 2.2.8.1.2 统计消费者人数# count(*) 只有该行有记录就统计# count(字段名) 先判断 该字段的值是否为空 如果为空不在统计范围内select count(1) as &#x27;total&#x27; from customer;select count(c_email) as &#x27;total&#x27; from customer;# 2.2.8.2 统计单价最高select max(f_price) as &#x27;max_price&#x27; from fruit;# [42000][1140] In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column &#x27;chap02.fruit.f_name&#x27;; this is incompatible with sql_mode=only_full_group_by# 解决方法1：修改配置文件 取消严格模式# 解决方法2：使用 group by 查询select f_name,max(f_price) as &#x27;max_price&#x27; from fruit;# 2.2.8.3 统计单价最低select min(f_price) as &#x27;min_price&#x27; from fruit;# 2.2.8.4 统计单价总和select sum(f_price) as &#x27;sum_price&#x27; from fruit;# 2.2.8.5 统计平均价格select avg(f_price) as &#x27;avg_price&#x27; from fruit;\n\n去重1234# 2.2.9.1 在水果表查询所有供应商 idselect distinct s_id from fruit;# 2.2.9.2 在水果表中统计所有供应商数量select count(distinct s_id) as &#x27;total_s_id&#x27; from fruit;\n\n分组12# 2.2.10.1 每个供应商供应水果种类数量select s_id,count(*) as &#x27;total&#x27; from fruit group by s_id;\n\n12# 2.2.10.2 每个供应商供应水果种类数量 按照供应水果种类数量降序select s_id,count(*) as &#x27;total&#x27; from fruit group by s_id order by total desc ;\n\n12# 2.2.10.3 每个供应商供应水果种类数量 按照供应水果种类数量降序 如果供应水果种类数量相同则按照供应商编号降序select s_id,count(*) as &#x27;total&#x27; from fruit group by s_id order by total desc ,s_id desc ;\n\n12345678# 2.2.10.4 每笔消费的总金额select * from orderitem;# 2.2.10.4.1 计算每笔流水的小计 小计  = 数量 × 单价# 2.2.10.4.2 计算每笔流水的的小计 小计  = 数量 × 单价 分组# 2.2.10.4.3 计算每笔流水的总金额 小计的和\n\n\n12# 2.2.10.5 每笔消费的总金额 降序\n\n12# 2.2.10.6 每笔消费的总金额 高于200 降序\n\n分页查询\n123456-- LIMIT 起始位置 , 查询数量-- (查询页面号 - 1) * 每页记录数 = 起始位置-- 总页数 = if(总记录数 % 每页记录数 == 0) ? 总记录数 / 每页记录数 : (总记录数 / 每页记录数) + 1select * from fruit limit 0 , 5;select * from fruit limit 5, 5;select * from fruit limit 50, 5;\n\n总结\n\n\n名称\n符号\n\n\n\n比较查询\n&gt;，&lt;，&lt;&#x3D;，&gt;&#x3D;，&#x3D;，!&#x3D;\n\n\n范围查询\nbetween and， in，limit\n\n\n模糊查询\nlike\n\n\nnull查询\nis null，is not null\n\n\n逻辑查询\nand，or，!&#x3D;\n\n\n\nsql语句编写顺序 select 字段 from 表名 where 条件 group by having order by limit\nsql语句执行顺序  from表 -&gt; where -&gt; group by -&gt; having -&gt; order by -&gt; limit\n\n多表查询\n子查询123456789# 2.3.1 子查询 查找水果名为苹果的供应商名 子查询方式查找# 子查询 （嵌套结构）# 子查询嵌入在主查询中# 子查询辅助主查询，要么充当条件，要么充当数据源（数据表）# 子查询可以是独立的语句，自己就是一条完整的 select 语句# 编写步骤 先写子查询再写主查询最后在将子查询与主查询拼接select s.s_id,s.s_name from supplier s where s.s_id = 102;select f.s_id,f.f_name from fruit f where f_name = &#x27;apple&#x27;;select s.s_id,s.s_name from supplier s where s.s_id = (select f.s_id from fruit f where f_name = &#x27;apple&#x27;);\n\n123456# 练习： 每笔消费的总金额 高于200 的订单的消费者信息select * from customer where c_id in (    select c_id from `order` where o_num in (        select o_num from orderitem group by o_num having sum((quantity * item_price)) &gt; 200    ));\n\n交叉查询 cross join\n产生笛卡儿积\n\n12345678910111213SELECT\t`s_name`,\t`s_city`,\t`s_zip`,\t`s_call`,\t`s`.`s_id`,\t`f`.`s_id`,\t`f_id`,\t`f_name`,\t`f_price`FROM\t`supplier` AS s,\t`fruit` AS f\n\n\n1234567891011121314SELECT\t`s_name`,\t`s_city`,\t`s_zip`,\t`s_call`,\t`s`.`s_id`,\t`f`.`s_id`,\t`f_id`,\t`f_name`,\t`f_price`FROM\t`supplier` AS s,\t`fruit` AS fwhere s.s_id = f.s_id;\n\n12345678910111213SELECT\t`s_name`,\t`s_city`,\t`s_zip`,\t`s_call`,\t`s`.`s_id`,\t`f`.`s_id`,\t`f_id`,\t`f_name`,\t`f_price`FROM\t`supplier` AS s cross join `fruit` AS fwhere s.s_id = f.s_id;\n\n\n内连接 inner join\n\n关键字 INNER JOIN\n连接查询条件 ON\n\n\n\n\n1select * from `order` o inner join customer c on o.c_id = c.c_id;\n\n\n左外连接 left outer join\n以左表为主根据条件查询右表数据，如果根据条件查询右表数据不存在使用null值填充\n\n\n1select * from `order` o left outer join customer c on o.c_id = c.c_id;\n\n\n右外连接 right outer join\n以右表为主根据条件查询右表数据，如果根据条件查询左表数据不存在使用null值填充\n\n\n1select * from `order` o right outer join customer c on o.c_id = c.c_id;\n\n\n全连接 full join1234567891011121314# FULL JOIN的作用# 在关系型数据库中，我们经常需要将两个或多个表格中的数据进行合并。# FULL JOIN是一种将两个表格中的所有数据进行合并的操作，包括左表格、右表格以及两个表格中都存在的数据。# FULL JOIN可以帮助我们更好地理解数据之间的关系，从而更加高效地进行数据分析和处理。# MySQL中没有FULL JOIN的原因# 尽管FULL JOIN在关系型数据库中非常有用，但是MySQL并不支持FULL JOIN操作。# 这是因为MySQL采用的是基于左表格和右表格的JOIN操作，而没有提供FULL JOIN的实现方式。# 因此，如果我们需要使用FULL JOIN操作，就需要通过其他方式来实现。# 虽然MySQL不支持FULL JOIN操作，但是我们可以通过使用UNION和LEFT JOIN操作来实现FULL JOIN的效果。具体方法如下：# （1）使用UNION操作将左表格和右表格中的数据进行合并。# （2）使用LEFT JOIN操作将左表格和右表格中的数据进行连接，将左表格和右表格中都存在的数据进行合并。# （3）将UNION操作和LEFT JOIN操作的结果进行合并，即可得到FULL JOIN的结果。# 需要注意的是，在使用UNION操作和LEFT JOIN操作时，我们需要保证两个表格中的数据结构相同，否则可能会出现错误。\n\nunion all\n123456789101112# 两张表的数据结构要一致 不会去除重复数据# 查询水果表中 供应商id 是 101 和 102 水果信息select * from fruit where s_id = 101 or  s_id = 102;select * from fruit where s_id in (101, 102);select * from fruit where s_id = 101 union all select * from fruit where s_id = 102;select * from fruit where s_id = 101 union all select * from fruit where s_id = 101;\n\nunion\n1234# 过滤重复数据select * from fruit where s_id = 101 union select * from fruit where s_id = 101;\n\nsome any all![图示_any some](D:&#x2F;dev&#x2F;code&#x2F;vue&#x2F;vue_study&#x2F;bigdata2024&#x2F;MySQL&#x2F;img&#x2F;图示_any some.png)\n123456# 2.3.4.1 someselect * from tbl1 where num1 &gt; some(select * from tbl2);# 2.3.4.2 anyselect * from tbl1 where num1 &gt; any(select * from tbl2);# 2.3.4.3 allselect * from tbl1 where num1 &gt; all(select * from tbl2);\n\nexits12345678910111213141516171819202122232425# 2.3.5 exists# 查找供应商 名字 是否存在select exists (SELECT `s_id` FROM `supplier` WHERE `s_name` = &#x27;ACME&#x27; ) as isExists;select exists (SELECT `s_id` FROM `supplier` WHERE `s_name` = &#x27;李昊哲&#x27; ) as isExists;#  Can&#x27;t create database &#x27;chap02&#x27;; database existscreate database if not exists chap02;drop database if exists chap03;create table if not exists login (  id int auto_increment comment &#x27;主键&#x27;,  phone_number varchar(11) unique not null comment &#x27;手机号&#x27;,  primary key (id));insert into login (phone_number) value (&#x27;15311484568&#x27;);insert into login (phone_number) select &#x27;15311484568&#x27; where not exists     (select phone_number from login where phone_number = &#x27;15311484568&#x27;);insert into login (phone_number) select &#x27;18515697037&#x27; where not exists     (select phone_number from login where phone_number = &#x27;18515697037&#x27;);select * from login;\n\n自关联查询1234desc region_address;select * from region_address where region_name = &#x27;河南&#x27;;select * from region_address where parent_code = 41;select * from region_address where parent_code = 4107;\n\n练习123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657select * from tb_category;select count(*) from tb_category;# 子查询作为查询条件# 一级导航select * from tb_category where parent_id = 0;# 二级导航select * from tb_category where parent_id in (select id from tb_category where parent_id = 0);# 二级导航select * from tb_category where parent_id in (select id from tb_category where parent_id in (select id from tb_category where parent_id = 0))# 子查询作为数据源 也就是 当中一张数据表看待# 一级导航select * from tb_category where parent_id = 0;# 二级导航select t1.id,name,goods_num,is_menu,is_menu,seq,parent_id,template_id from tb_category t1    inner join    (select id from tb_category where parent_id = 0) t2    on t1.parent_id = t2.id;# 将一级导航和该导航下的二级导航数据封装一次性送到前端select t1.id,name,goods_num,is_menu,is_menu,seq,parent_id,template_id from tb_category t1    inner join    (select id from tb_category where parent_id = 0) t2    on t1.parent_id = t2.id;select parent_id,group_concat(id) from tb_category where parent_id = 0 group by parent_id;select t4.id,name,goods_num,is_menu,is_menu,seq,t4.parent_id,template_id,t3.ids,t3.names from tb_category t4 inner join    (        select parent_id,group_concat(t1.id) ids,group_concat(t1.name) names from tb_category t1        inner join        (select id from tb_category where parent_id = 0) t2        on t1.parent_id = t2.id        group by parent_id    ) t3    on t3.parent_id = t4.id;select t4.id,name,goods_num,is_menu,is_menu,seq,t4.parent_id,template_id,t3.ids,t3.names from tb_category t4 inner join    (        select parent_id,json_array(group_concat(t1.id)) ids,json_array(group_concat(t1.name)) names from tb_category t1        inner join        (select id from tb_category where parent_id = 0) t2        on t1.parent_id = t2.id        group by parent_id    ) t3    on t3.parent_id = t4.id;select t4.id,name,goods_num,is_menu,is_menu,seq,t4.parent_id,template_id,json_array(t3.ids) id_list,json_array(t3.names) name_list from tb_category t4 inner join    (        select parent_id,group_concat(t1.id) ids,group_concat(t1.name) names from tb_category t1        inner join        (select id from tb_category where parent_id = 0) t2        on t1.parent_id = t2.id        group by parent_id    ) t3    on t3.parent_id = t4.id;\n\n函数12345678910# 1、函数# 数学函数、字符串函数、日期时间函数、条件判断、循环函数、系统信息函数、加密解密函数、开窗函数# 1.1 准备数据# mysql -uroot -pcreate database chap03;use chap03;source d:/chap03_data.sql;show tables;# dualselect &#x27;勿忘国耻，振兴中华&#x27; as &#x27;slogan&#x27; from dual;\n\n聚合函数数学函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# 1.3 数学函数# 1.3.1 绝对值select abs(3),abs(-3),abs(-3.3) from dual;# 1.3.2 圆周率select pi() as &#x27;pi&#x27; from dual;# 1.3.3 平方根select sqrt(9),sqrt(20),sqrt(-9) from dual;# 1.3.4 取模运算select mod(9,2),mod(6,2),mod(-6,2),mod(-9,2) from dual;# 1.3.5 向上取整select ceil(3.3),ceil(-3.9) from dual;# 1.3.6 向上取整select floor(3.9),floor(-3.3) from dual;# 1.3.7 四舍五入 (x,y) x 是原始值 y 保留小数后面几位select round(3.9),round(3.3),round(-3.9),round(-3.3) from dual;select round(3.1415926,2) from dual;select round(3.145,2) from dual;# 1.3.8 随机数 范围 0~1之间的小数select rand(),rand(),rand() from dual;select round(rand() ,2),round(rand() ,2),round(rand() ,2) from dual;# 1.3.9 随机数 参数x 最接近参数x的随机值select rand(10),rand(-10) from dual;# 1.3.10 符号函数 参数值为整数、零、负数返回结果依次为1、0、-1select sign(3), sign(0) ,sign(-3)from dual;# 1.3.11 幂运算函数# 1.3.11.1 幂运算函数 (x,y)select pow(2,2),pow(3,3), pow(2,-2),pow(-2,2),pow(-2,3) from dual;# 1.3.11.2 幂运算函数 (x,y)select power(2,2),power(3,3), power(2,-2),power(-2,2),power(-2,3) from dual;# 1.3.11.3 幂运算函数 e 的乘方select exp(2),exp(3) from dual;# 1.3.12 对数运算函数select log(3),log(0),log(-3) from dual;# 1.3.13 角度与弧度互转函数# 1.3.13.1 角度转弧度select radians(90),radians(180) from dual;# 1.3.13.2 弧度转角度select degrees(pi()),degrees(pi()/2) from dual;# 1.3.14 正弦函数select sin(0),sin(1),sin(pi()) from dual;# 1.3.15 正余弦函数select cos(0),cos(1),cos(pi()) from dual;# 1.3.16 余弦函数select acos(0),acos(1),acos(pi()) from dual;# 1.3.17 正切函数select tan(0.3) from dual;# 1.3.18 反正切函数select atan(0.3) from dual;# 1.3.19 反正切函数select cot(3.23) from dual;\n\n字符串函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980# 1.4 字符串函数# 1.4.1 char_length 计算字符串字符数量select char_length(&#x27;我爱你中国&#x27;) from dual;# 1.4.2 length 计算字符串长度 单位字节select length(&#x27;我爱你中国&#x27;) from dual;select char_length(&#x27;I love China&#x27;) from dual;select length(&#x27;I love China&#x27;) from dual;# 1.4.3 concat 字符串拼接select concat(&#x27;I&#x27;,&#x27; &#x27;, &#x27;love&#x27;, &#x27; &#x27;, &#x27;China&#x27;) from dual;select concat(&#x27;1983&#x27;,&#x27;-&#x27;, &#x27;11&#x27;, &#x27;-&#x27;, &#x27;22&#x27;) from dual;# 注意：在oracle中concat只能传两个参数select concat(&#x27;1983&#x27;,concat(&#x27;-&#x27;,concat(&#x27;11&#x27;,concat(&#x27;-&#x27;, &#x27;22&#x27;)))) from dual;# oracle 语法 select &#x27;1983&#x27;||&#x27;-&#x27;||&#x27;11&#x27;||&#x27;-&#x27;||&#x27;22&#x27; from dual;# 1.4.4 concat_ws 带连接符号的字符串拼接 第一个参数为连接符select concat_ws(&#x27;-&#x27;,&#x27;1983&#x27;, &#x27;11&#x27;,&#x27;22&#x27;) from dual;select concat_ws(&#x27; &#x27;,&#x27;I&#x27;, &#x27;love&#x27;, &#x27;China&#x27;) from dual;# 1.4.5 insert 字符串替换# 第一个参数是源字符串，第二个参数是该字符串的第几个字符,第三次参数是长度，第四个参数是替换后的内容select insert (&#x27;桃李不言下自成蹊&#x27;,2,4,&#x27;what&#x27;) from dual;# 1.4.6 lower 字符串中字母转小写select lower(&#x27;I Love CHINA&#x27;) from dual;# 1.4.7 upper 字符串中字母转大写select upper(&#x27;i love china&#x27;) from dual;# 1.4.8 left 返回字符串中左边的字符select left(&#x27;桃李不言下自成蹊&#x27;,2) from dual;# 1.4.9 right 返回字符串中有边的字符select right(&#x27;桃李不言下自成蹊&#x27;,2) from dual;# 1.4.10 lpad 字符串左边填充# 第一个参数是原字符串 第二个参数填充后的字符串长度 第三个参数是填充值select lpad(&#x27;桃李不言下自成蹊&#x27;,3,&#x27;李昊哲&#x27;) from dual;select lpad(&#x27;桃李不言下自成蹊&#x27;,char_length(&#x27;桃李不言下自成蹊&#x27;) + 3,&#x27;李昊哲&#x27;) from dual;# 注意：填充后的长度 如果超过了 源字符串长度+填充内容长度 填充内容会重复填充select lpad(&#x27;桃李不言下自成蹊&#x27;,char_length(&#x27;桃李不言下自成蹊&#x27;) + 6,&#x27;李昊哲&#x27;) from dual;# 1.4.11 rpad 字符串右边填充select rpad(&#x27;桃李不言下自成蹊&#x27;,3,&#x27;李昊哲&#x27;) from dual;select rpad(&#x27;桃李不言下自成蹊&#x27;,char_length(&#x27;桃李不言下自成蹊&#x27;) + 3,&#x27;李昊哲&#x27;) from dual;# 注意：填充后的长度 如果超过了 源字符串长度+填充内容长度 填充内容会重复填充select rpad(&#x27;桃李不言下自成蹊&#x27;,char_length(&#x27;桃李不言下自成蹊&#x27;) + 6,&#x27;李昊哲&#x27;) from dual;# 1.4.12 ltrim 删除字符串左边空格select &#x27;   桃 李 不 言 下 自 成 蹊   &#x27; from dual;select ltrim(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;) from dual;# 1.4.13 rtrim 删除字符串右边空格select char_length(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;) from dual;select rtrim(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;) from dual;select char_length(rtrim(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;)) from dual;# 1.4.14 trim 删除字符串左右边空格select trim(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;) from dual;select char_length(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;) from dual;select char_length(trim(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;)) from dual;# 1.4.15 trim(s1 from s2) 删除左右两端指定字符串函数select trim(&#x27;xyz&#x27; from &#x27;xyzabcxyzabcxyzabcxyz&#x27;) from dual;# 1.4.16 repeat 重复生成相同的字符串select repeat(&#x27;爱我中华&#x27;,3) from dual;# 1.4.17 space 生成由空格组成的字符串select concat_ws(space(6),&#x27;爱&#x27;,&#x27;我&#x27;,&#x27;中&#x27;,&#x27;华&#x27;) from dual;# 1.4.18 replace 字符串替换select &#x27;我爱你你爱我，我们一起甜蜜蜜&#x27; from dual;select insert(&#x27;我爱你你爱我，我们一起甜蜜蜜&#x27;,4,3,&#x27;李昊哲&#x27;) from dual;select replace(&#x27;我爱你你爱我，我们一起甜蜜蜜&#x27;,&#x27;你爱我&#x27;,&#x27;李昊哲&#x27;) from dual;select replace(&#x27;你爱我你爱我，我们一起甜蜜蜜&#x27;,&#x27;你爱我&#x27;,&#x27;李昊哲&#x27;) from dual;select replace(&#x27;   桃 李 不 言 下 自 成 蹊   &#x27;,&#x27; &#x27;,&#x27;&#x27;) from dual;# 1.4.19 ascii 将 ascii 字符转为 ascii 码 字符串替换select ascii(&#x27;a&#x27;)  from dual;select ascii(&#x27;b&#x27;)  from dual;# 1.4.20 strcmp 比较字符大小 返回值为正数 为第一个参数比第二个参数大 反之第二个参数比第一个参数大 返回值为零两个参数一样大select strcmp(&#x27;a&#x27;,&#x27;b&#x27;)  from dual;select strcmp(&#x27;李&#x27;,&#x27;王&#x27;)  from dual;# 1.4.21 substring 字符串截取 第一个参数为原字符串 第二个参数为截取位置 位置从1开始 第三个参数为截取长度select substring(&#x27;桃李不言下自成蹊&#x27;,2,3) from dual;select substr(&#x27;桃李不言下自成蹊&#x27;,2,3) from dual;# 1.4.22 mid 字符串截取 第一个参数为原字符串 第二个参数为截取位置 位置从1开始 第三个参数为截取长度select mid(&#x27;桃李不言下自成蹊&#x27;,2,3) from dual;# 1.4.23 locate 查找字符串中指定字符串第一次出现的位置 第一个参数是字符串中出现的字符串 返回值为零代表没有出现过select locate(&#x27;你爱我&#x27;,&#x27;我爱你你爱我我爱你你爱我&#x27;)  from dual;select locate(&#x27;蜜雪冰城&#x27;,&#x27;我爱你你爱我我爱你你爱我&#x27;)  from dual;# 1.4.24 reverse 逆序select reverse(&#x27;我爱你&#x27;) from dual;# 1.4.25 elt 返回指定位置的字符串 第一个参数是指定位置值select elt(3,&#x27;我&#x27;,&#x27;真&#x27;,&#x27;的&#x27;,&#x27;很&#x27;,&#x27;爱&#x27;,&#x27;你&#x27;) from dual;\n\n日期时间函数12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# 1.5 日期时间函数# 1.5.1 获取当前日期select curdate(),current_date() from dual;# 1.5.2 获取当前时间select curtime(),current_time() from dual;# 1.5.3 获取当前日期和时间select sysdate(),now(),localtime(),current_timestamp() from dual;# 1.5.4 获取当前时间戳select unix_timestamp(), unix_timestamp(now()),unix_timestamp(&#x27;1983-11-22 20:30:00&#x27;),from_unixtime(438352200) from dual;# 1.5.5 获取UTC时间select utc_date(),utc_time(),utc_timestamp() from dual;# 1.5.6 单独获取年、月、日、小时、分钟、秒、星期select year(now()), month(now()),day(now()),dayofmonth(now()),hour(now()),minute(now()),second(now()) from dual;# weekday 从零开始select week(now()), weekday(now()),weekofyear(now()) from dual;# 1.5.7 提取获取年、月、日、小时、分钟、秒、星期select year(&#x27;1983-11-22 20:30:00&#x27;)  from dual;select extract(year from &#x27;1983-11-22 20:30:00&#x27;) from dual;# 1.5.8 时间加减操作select now(),date_add(now(), interval 1 year ) from dual;select now(),date_add(now(), interval 1 month ) from dual;select now(),date_add(now(), interval 1 day ) from dual;select now(),date_add(now(), interval 1 hour ) from dual;select now(),date_add(now(), interval 1 minute ) from dual;select now(),date_add(now(), interval 1 second ) from dual;select now(),subdate(now(), interval 1 year ) from dual;select now(),subdate(now(), interval 1 month ) from dual;select now(),subdate(now(), interval 1 day ) from dual;select now(),subdate(now(), interval 1 hour ) from dual;select now(),subdate(now(), interval 1 minute ) from dual;select now(),subdate(now(), interval 1 second ) from dual;# 1.5.9 计算时间间隔天数select datediff(&#x27;2023-09-28 15:01:01&#x27;,&#x27;2023-09-27 16:03:03&#x27;) from dual;# 1.5.10 日期格式化输出# %Y 4位年份# %y 2位年份# %M 月份全名# %b 月份缩写# %m 2位月份# %D 当月第几天 数字th# %d 2位日期# %H 24小时# %h 12小时# %i 2位分钟# %s 2位秒# %W 星期全名# %w 星期缩写select now(),date_format(now(),&#x27;%Y/%m/%d %H:%i:%s&#x27;) from dual;# 1.5.11 时间格式化输出select now(),time_format(now(),&#x27;%Y/%m/%d %H:%i:%s&#x27;) from dual;\n\n选择函数12345678# 1.6 选择判断函数# 1.6.1 第一个参数是条件表达式 条件表达式返回值为true返回第二个参数 条件表达式返回值为false返回第三个参数select if(true,&#x27;成立&#x27;,&#x27;不成立&#x27;) from dual;select if(false,&#x27;成立&#x27;,&#x27;不成立&#x27;) from dual;select if(1,&#x27;成立&#x27;,&#x27;不成立&#x27;) from dual;select if(0,&#x27;成立&#x27;,&#x27;不成立&#x27;) from dual;select if(-1,&#x27;成立&#x27;,&#x27;不成立&#x27;) from dual;\n\n12345678910111213# 1.6.2# use chap04;# select score from scores;# # 90以上A 80~90B 70~80C 60~70D 60以下E# select s_id,c_id,#        case#            when score &gt;= 90 then &#x27;A&#x27;#            when score &gt;= 80 then &#x27;B&#x27;#            when score &gt;= 70 then &#x27;C&#x27;#            when score &gt;= 60 then &#x27;D&#x27;#            else &#x27;E&#x27;#         end as &#x27;level&#x27;#        from scores;\n\n开窗函数\n能为每行数据划分一个窗口，然后对窗口范围内的数据进行计算，最后将计算结果返回给该行\n\n12345678910Function(arg1,..., argn) OVER ([PARTITION BY &lt;...&gt;] [ORDER BY &lt;....&gt;] [&lt;window_expression&gt;])-- 其中Function(arg1,..., argn) 可以是下面分类中的任意一个    -- 聚合函数：比如sum max min avg count等    -- 排序函数：比如row_number rank dense_rank等    -- 分析函数：比如lead lag first_value last_value等-- OVER [PARTITION BY &lt;...&gt;] 类似于group by 用于指定分组  每个分组你可以把它叫做窗口-- 如果没有PARTITION BY 那么整张表的所有行就是一组-- [ORDER BY &lt;....&gt;]  用于指定每个分组内的数据排序规则 支持ASC、DESC-- [&lt;window_expression&gt;] 用于指定每个窗口中 操作的数据范围 默认是窗口中所有行\n\n12345678# 1.7.1 查询各科成绩前三名的学生-- row_number() over () 连续序号-- over()里头的分组以及排序的执行晚于 where 、group by、order by 的执行。 select c_id ,score, row_number() over () as &#x27;num&#x27; from scores;# partition by 作用相当于 group by select c_id ,score, row_number() over (partition by c_id) as &#x27;num&#x27; from scores;# order by 写在 开窗函数内 局部排序 select c_id ,score, row_number() over (partition by c_id order by score desc ) as &#x27;num&#x27; from scores;\n\n12345678-- row_number() over () 连续序号-- over()里头的分组以及排序的执行晚于 where 、group by、order by 的执行。select * from(    select s_id,c_id ,score,       row_number() over (partition by c_id order by score desc ) as &#x27;num&#x27;        from scores) t where t.num &lt; 4;\n\n1234567-- rank() over () 排名 跳跃排序 序号不是连续的select * from(    select s_id,c_id ,score,       rank() over (partition by c_id order by score desc ) as &#x27;num&#x27;        from scores) t where t.num &lt; 4;\n\n1234567-- dense_rank() over () 排名 连续排序select * from(    select s_id,c_id ,score,       dense_rank() over (partition by c_id order by score desc ) as &#x27;num&#x27;        from scores) t where t.num &lt; 4;\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n行列转换列转行1234567create table test (    stu_name varchar(50),    course_name varchar(50),    score int);insert into test values (&#x27;张三&#x27;,&#x27;语文&#x27;,&#x27;80&#x27;),(&#x27;张三&#x27;,&#x27;数学&#x27;,&#x27;90&#x27;), (&#x27;李四&#x27;,&#x27;语文&#x27;,&#x27;85&#x27;),(&#x27;李四&#x27;,&#x27;数学&#x27;,&#x27;95&#x27;);select * from test;\n\n\n12345678# 1.9.1 列转行create table test (    stu_name varchar(50),    course_name varchar(50),    score int);insert into test values (&#x27;张三&#x27;,&#x27;语文&#x27;,&#x27;80&#x27;),(&#x27;张三&#x27;,&#x27;数学&#x27;,&#x27;90&#x27;), (&#x27;李四&#x27;,&#x27;语文&#x27;,&#x27;85&#x27;),(&#x27;李四&#x27;,&#x27;数学&#x27;,&#x27;95&#x27;);select * from test;\n\n1234select stu_name,       case when course_name = &#x27;语文&#x27; then score end as &#x27;yuwen&#x27;,       case when course_name = &#x27;数学&#x27; then score end as &#x27;shuxue&#x27;       from test;\n\n123456-- null 在 比较的时候 是最小值select stu_name,       max(case when course_name = &#x27;语文&#x27; then score end) as &#x27;yuwen&#x27;,       max(case when course_name = &#x27;数学&#x27; then score end) as &#x27;shuxue&#x27;       from testgroup by stu_name;\n\n行转列123456789# 1.9.2 行转列create table sales (    emp_name varchar(50),    january int,    february int,    March int);insert into sales values (&#x27;张三&#x27;,1000,2000,3000),(&#x27;李四&#x27;,1500,2500,3500);select * from sales;\n\n\n123456select emp_name, &#x27;january&#x27; as &#x27;yue&#x27;, january from salesunion allselect emp_name,&#x27;february&#x27; as &#x27;yue&#x27;, february from salesunion allselect emp_name,&#x27;March&#x27; as &#x27;yue&#x27;, March from salesorder by  emp_name;\n\n12345678910111213select emp_name,yue_list,       substring_index(substring_index(yue_list,&#x27;,&#x27;,1),&#x27;,&#x27;,-1) as &#x27;january&#x27;,       substring_index(substring_index(yue_list,&#x27;,&#x27;,2),&#x27;,&#x27;,-1) as &#x27;february&#x27;,       substring_index(substring_index(yue_list,&#x27;,&#x27;,3),&#x27;,&#x27;,-1) as &#x27;March&#x27;from    (select emp_name ,group_concat(t.yue) as yue_list from        (select emp_name,january as &#x27;yue&#x27; from sales         union all        select emp_name,february as &#x27;yue&#x27; from sales        union all        select emp_name,March as &#x27;yue&#x27; from sales        order by emp_name) tgroup by t.emp_name) t1;\n\n身份证123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263# 1.10 身份证# 第1位和第2位数字代表出生省份地区码# 第3位和第4位数字代表出生省份所辖城市地区码# 第5位和第6位数字代表出生省份所辖城市所辖区县地区码# 第7、8、9、10位数字代表出生出生年份# 第11、12位数字代表出生出生月份# 第13、14位数字代表出生出生日期# 第15、16位顺序码# 第17位数字代表性别 奇数代表男性 偶数代表女性# 第18位数字代表校验码m，用于验证身份证号码的合法性# 1.10.1 计算性别select * from person;select * ,substring(id_card,17,1) as &#x27;gender&#x27; from person;select * ,mod(substring(id_card,17,1),2) as &#x27;gender&#x27; from person;select * ,if(mod(substring(id_card,17,1),2),&#x27;男&#x27;,&#x27;女&#x27;) as &#x27;gender&#x27; from person;select    if(mod(substring(id_card,17,1),2),&#x27;男&#x27;,&#x27;女&#x27;) as &#x27;gender&#x27; ,    count(*)    from person group by gender;# 1.10.2 按照出生日期排序select * ,substring(id_card,7,8) as &#x27;date_of_birth&#x27; from person order by date_of_birth desc;# 1.10.3 计算年龄# 方式一：子查询select id, id_card, first_name, last_name, mobile, auth_text, date_of_birth,    # 当前月份 - 出生月份 &gt; 0 说明已经过完生日了 直接返回 之前计算的年纪    if(month(curdate()) - month(date_of_birth) &gt; 0,age,        # 当前月份 - 出生月份 &lt; 0 说明还没有过生日 直接返回 年纪 = 之前计算的年纪 - 1        if(month(curdate()) - month(date_of_birth) &lt; 0,age - 1,            # 当前月份 - 出生月份 = 0            # 当前日期 - 出生日期 &gt; 0 说明已经过完生日了 直接返回 之前计算的年纪            # 当前日期 - 出生日期 &lt;= 0 说明还没有过生日 直接返回 年纪 = 之前计算的年纪 - 1            if(day(curdate()) - day(date_of_birth) &gt; 0,age,age - 1)        )    ) as &#x27;age&#x27;    from    (select id, id_card, first_name, last_name, mobile, auth_text, date_of_birth,            # 当前年份 - 出生日期 = 年纪           (year(curdate()) - year(date_of_birth)) as &#x27;age&#x27;        from            # 从身份证截取出生日期        (select * ,substring(id_card,7,8) as &#x27;date_of_birth&#x27; from person ) t1) t2;# 方式二：反复调用时间函数select id, id_card, first_name, last_name, mobile, auth_text,    # 当前月份 - 出生月份 &gt; 0 说明已经过完生日了 直接返回 之前计算的年纪    if(month(curdate()) - month(substring(id_card,7,8)) &gt; 0,        month(curdate()) - month(substring(id_card,7,8)),        # 当前月份 - 出生月份 &lt; 0 说明还没有过生日 直接返回 年纪 = 之前计算的年纪 - 1        if(month(curdate()) - month(substring(id_card,7,8)) &lt; 0,            month(curdate()) - month(substring(id_card,7,8)) - 1,            # 当前月份 - 出生月份 = 0            # 当前日期 - 出生日期 &gt; 0 说明已经过完生日了 直接返回 之前计算的年纪            # 当前日期 - 出生日期 &lt;= 0 说明还没有过生日 直接返回 年纪 = 之前计算的年纪 - 1            if(day(curdate()) - day(substring(id_card,7,8)) &gt; 0,               month(curdate()) - month(substring(id_card,7,8)),               month(curdate()) - month(substring(id_card,7,8)) - 1)        )    ) as &#x27;age&#x27;    from person;\n\njson1234select &#x27;&#123;&quot;name&quot;:&quot;李昊哲&quot;,&quot;firends&quot;:[&quot;温柔&quot;,&quot;知性&quot;,&quot;美丽&quot;,&quot;大方&quot;]&#125;&#x27; from dual;select json_extract(&#x27;&#123;&quot;name&quot;:&quot;李昊哲&quot;,&quot;firends&quot;:[&quot;温柔&quot;,&quot;知性&quot;,&quot;美丽&quot;,&quot;大方&quot;]&#125;&#x27;,&#x27;$.name&#x27;) as name from dual;select json_extract(&#x27;&#123;&quot;name&quot;:&quot;李昊哲&quot;,&quot;firends&quot;:[&quot;温柔&quot;,&quot;知性&quot;,&quot;美丽&quot;,&quot;大方&quot;]&#125;&#x27;,&#x27;$.firends&#x27;) as firends from dual;select json_extract(&#x27;&#123;&quot;name&quot;:&quot;李昊哲&quot;,&quot;firends&quot;:[&quot;温柔&quot;,&quot;知性&quot;,&quot;美丽&quot;,&quot;大方&quot;]&#125;&#x27;,&#x27;$.firends[1]&#x27;) as firend from dual;\n\n视图12345678910111213141516171819202122232425262728293031323334353637383940414243create view person_view as select * from person;select * from person_view;update person set mobile = &#x27;13427468302&#x27; where id = 1 ;update person_view set mobile = &#x27;13427468303&#x27; where id = 1 ;drop view person_view;create view person_view as    select id, id_card, first_name, last_name, mobile, auth_text, date_of_birth,    # 当前月份 - 出生月份 &gt; 0 说明已经过完生日了 直接返回 之前计算的年纪    if(month(curdate()) - month(date_of_birth) &gt; 0,age,        # 当前月份 - 出生月份 &lt; 0 说明还没有过生日 直接返回 年纪 = 之前计算的年纪 - 1        if(month(curdate()) - month(date_of_birth) &lt; 0,age - 1,            # 当前月份 - 出生月份 = 0            # 当前日期 - 出生日期 &gt; 0 说明已经过完生日了 直接返回 之前计算的年纪            # 当前日期 - 出生日期 &lt;= 0 说明还没有过生日 直接返回 年纪 = 之前计算的年纪 - 1            if(day(curdate()) - day(date_of_birth) &gt; 0,age,age - 1)        )    ) as &#x27;age&#x27;,mod(substring(id_card,17,1),2) as &#x27;gender&#x27;    from    (select id, id_card, first_name, last_name, mobile, auth_text, date_of_birth,            # 当前年份 - 出生日期 = 年纪           (year(curdate()) - year(date_of_birth)) as &#x27;age&#x27;        from            # 从身份证截取出生日期        (select * ,substring(id_card,7,8) as &#x27;date_of_birth&#x27; from person ) t1) t2;create table person_new(    id         int auto_increment comment &#x27;主键&#x27;        primary key,    id_card    varchar(18)  not null,    first_name varchar(15)  not null,    last_name  varchar(15)  not null,    mobile     varchar(11)  not null,    auth_text  varchar(255) null);insert into person_new select * from person;select * from person_new;\n\n\n\n事务1234567 select @@global.transaction_isolation;+--------------------------------+| @@global.transaction_isolation |+--------------------------------+| REPEATABLE-READ                |+--------------------------------+1 row in set (0.00 sec)\n\n1SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n12345678910select @@global.transaction_isolation;+--------------------------------+| @@global.transaction_isolation |+--------------------------------+| READ-UNCOMMITTED               |+--------------------------------+1 row in set (0.00 sec)mysql&gt; \n\n\n\n\n隔离级别\n脏读\n不可重复读\n幻影读\n\n\n\nREAD-UNCOMMITTED\n√\n√\n√\n\n\nREAD-COMMITTED\n×\n√\n√\n\n\nREPEATABLE-READ\n×\n×\n√\n\n\nSERIALIZABLE\n×\n×\n×\n\n\n表分区表分区介绍\nMySQL 数据库中的数据是以文件的形势存在磁盘上的，\n默认放在 /var/lib/mysql/ 目录下面，\n我们可以通过 show variables like &#39;%datadir%&#39;; 命令来查看：\n\n1show variables like &#x27;%datadir%&#x27;;\n\n\n\n我们进入到这个目录下，就可以看到我们定义的所有数据库了，\n一个数据库就是一个目录，一个库中，有其对应的表的信息，如下：\n\n1cd /var/lib/mysql\n\n1ls\n\n\n优点：\n\n查询性能提升：分区可以将大表划分为更小的部分，查询时只需扫描特定的分区，而不是整个表，从而提高查询性能。特别是在处理大量数据或高并发负载时，分区可以显著减少查询的响应时间。\n管理和维护的简化：使用分区可以更轻松地管理和维护数据。可以针对特定的分区执行维护操作，如备份、恢复、优化和数据清理，而不必处理整个表。这简化了维护任务并减少了操作的复杂性。\n数据管理灵活性：通过分区，可以根据业务需求轻松地添加或删除分区，而无需影响整个表。这使得数据的增长和变化更具弹性，可以根据需求进行动态调整。\n改善数据安全性和可用性：可以将不同分区的数据分布在不同的存储设备上，从而提高数据的安全性和可用性。例如，可以将热数据放在高速存储设备上，而将冷数据放在廉价存储设备上，以实现更高的性能和成本效益。\n\n缺点：\n\n复杂性增加：分区引入了额外的复杂性，包括分区策略的选择、表结构的设计和维护、查询逻辑的调整等。正确地设置和管理分区需要一定的经验和专业知识。\n索引效率下降：对于某些查询，特别是涉及跨分区的查询，可能会导致索引效率下降。由于查询需要在多个分区之间进行扫描，可能无法充分利用索引优势，从而影响查询性能。\n存储空间需求增加：使用分区会导致一定程度的存储空间浪费。每个分区都需要占用一定的存储空间，包括分区元数据和一些额外的开销。因此，对于分区键的选择和分区粒度的设置需要权衡存储空间和性能之间的关系。\n功能限制：在某些情况下，分区可能会限制某些MySQL的功能和特性的使用。例如，某些类型的索引可能无法在分区表上使用，或者某些DDL操作可能需要更复杂的处理。\n\n\n在考虑使用分区时，需要综合考虑业务需求、查询模式、数据规模和硬件资源等因素，\n并权衡分区带来的优势和缺点。对于特定的应用和数据场景，\n分区可能是一个有效的解决方案，但并不适用于所有情况。\n\n同时分区表也存在一些限制，如下：\n限制：\n\n在mysql5.6.7之前的版本，一个表最多有1024个分区；从5.6.7开始，一个表最多可以有8192个分区。\n分区表无法使用外键约束。\nNULL值会使分区过滤无效。\n所有分区必须使用相同的存储引擎。\n\n分区适用场景分区表在以下情况下可以发挥其优势，适用于以下几种使用场景：\n\n大型表处理：当面对非常大的表时，分区表可以提高查询性能。通过将表分割为更小的分区，查询操作只需要处理特定的分区，从而减少扫描的数据量，提高查询效率。这在处理日志数据、历史数据或其他需要大量存储和高性能查询的场景中非常有用。\n时间范围查询：对于按时间排序的数据，分区表可以按照时间范围进行分区，每个分区包含特定时间段内的数据。这使得按时间范围进行查询变得更高效，例如在某个时间段内检索数据、生成报表或执行时间段的聚合操作。\n数据归档和数据保留：分区表可用于数据归档和数据保留的需求。旧数据可以归档到单独的分区中，并将其存储在低成本的存储介质上。同时，可以保留较新数据在高性能的存储介质上，以便快速查询和操作。\n并行查询和负载均衡：通过哈希分区或键分区，可以将数据均匀地分布在多个分区中，从而实现并行查询和负载均衡。查询可以同时在多个分区上进行，并在最终合并结果，提高查询性能和系统吞吐量。\n数据删除和维护：使用分区表，可以更轻松地删除或清理不再需要的数据。通过删除整个分区，可以更快速地删除大量数据，而不会影响整个表的操作。此外，可以针对特定分区执行维护任务，如重新构建索引、备份和优化，以减少对整个表的影响。\n\n分区表并非适用于所有情况。在选择使用分区表时，需要综合考虑数据量、查询模式、存储资源和硬件能力等因素，并评估分区对性能和管理的影响。\n分区策略\n\nRANGE分区\n\n\nRANGE分区RANGE分区是MySQL中的一种分区策略，根据某一列的范围值将数据分布到不同的分区。\n每个分区包含特定的范围。下面是RANGE分区的定义方式、特点以及代码示例。\n定义方式：\n\n指定分区键：选择作为分区依据的列作为分区键，通常是日期、数值等具有范围特性的列。\n分区函数：通过PARTITION BY RANGE指定使用RANGE分区策略。\n定义分区范围：使用VALUES LESS THAN子句定义每个分区的范围。\n\nRANGE分区的特点：\n\n范围划分：根据指定列的范围进行分区，适用于需要按范围进行查询和管理的情况。\n灵活的范围定义：可以定义任意数量的分区，并且每个分区可以具有不同的范围。\n高效查询：根据查询条件的范围，MySQL能够快速定位到特定的分区，提高查询效率。\n动态管理：可以根据业务需求轻松添加或删除分区，适应数据增长或变更的需求。\n\n以下是一个使用RANGE分区的代码示例：\n12345678910111213create table sale(\tsale_id int,    sale_date date,    amount decimal(10,2)) partition by range(year(sale_date))(    partition p0 values less than (2020),    partition p1 values less than (2021),    partition p2 values less than (2022),    partition p3 values less than (2023),    partition p4 values less than (2024),    partition p5 values less than (2025));\n\n123456789insert into sale values (1,&#x27;2020-11-11&#x27;,9999.00);insert into sale values (2,&#x27;2020-12-12&#x27;,6666.00);insert into sale values (3,&#x27;2021-11-11&#x27;,12000.00);insert into sale values (4,&#x27;2021-12-12&#x27;,13000.00);insert into sale values (5,&#x27;2022-11-11&#x27;,13000.00);insert into sale values (6,&#x27;2022-12-12&#x27;,12500.00);insert into sale values (7,&#x27;2023-11-11&#x27;,12500.00);insert into sale values (8,&#x27;2023-12-12&#x27;,13000.00);\n\n12select * from sale partition(p0);select * from sale partition(p1);\n\n\nLIST分区LIST分区是根据某一列的离散值将数据分布到不同的分区。每个分区包含特定的列值列表。下面是LIST分区的定义方式、特点以及代码示例。定义方式：\n\n指定分区键：选择作为分区依据的列作为分区键，通常是具有离散值的列，如地区、类别等。\n分区函数：通过PARTITION BY LIST指定使用LIST分区策略。\n定义分区列表：使用VALUES IN子句定义每个分区包含的列值列表。\n\nLIST分区的特点：\n\n列值离散：根据指定列的具体取值进行分区，适用于具有离散值的列。\n灵活的分区定义：可以定义任意数量的分区，并且每个分区可以具有不同的列值列表。\n高效查询：根据查询条件的列值直接定位到特定分区，提高查询效率。\n动态管理：可以根据业务需求轻松添加或删除分区，适应数据增长或变更的需求。\n\n以下是一个使用LIST分区的代码示例：\n12345678910111213create table people(\tid_card varchar(18),    name varchar(50),    province int) partition by list(province)(    partition huabei values in (11,12,13,14,15),    partition dongbei values in (21,22,23),    partition huazhong values in (31,32,33,34,35,36,37),    partition huadong values in (41,42,43,44,45,46),    partition xinan values in (50,51,52,53,55),    partition xibei values in (61,62,63,64,65),    partition gang_ao_tai values in (71,81,91));\n\n12345678910111213141516insert into people values (&#x27;410182198903224674&#x27;,&#x27;邱赣&#x27;,41);insert into people values (&#x27;411429199211019071&#x27;,&#x27;何天&#x27;,41);insert into people values (&#x27;310182198903224674&#x27;,&#x27;方加牡&#x27;,31);insert into people values (&#x27;210182198903224674&#x27;,&#x27;贺巧&#x27;,21);insert into people values (&#x27;110182198903224674&#x27;,&#x27;闾丘饱乾&#x27;,11);insert into people values (&#x27;510182198903224674&#x27;,&#x27;丁经&#x27;,51);insert into people values (&#x27;610182198903224674&#x27;,&#x27;韦散&#x27;,61);insert into people values (&#x27;710182198903224674&#x27;,&#x27;东方让&#x27;,71);insert into people values (&#x27;810182198903224674&#x27;,&#x27;赖队瞻&#x27;,81);insert into people values (&#x27;910182198903224674&#x27;,&#x27;郭叹&#x27;,91);insert into people values (&#x27;120182198903224674&#x27;,&#x27;慕容芋岛&#x27;,12);insert into people values (&#x27;220182198903224674&#x27;,&#x27;孙劣&#x27;,22);insert into people values (&#x27;320182198903224674&#x27;,&#x27;王桃&#x27;,32);insert into people values (&#x27;420182198903224674&#x27;,&#x27;郝郑惭&#x27;,42);insert into people values (&#x27;520182198903224674&#x27;,&#x27;余烂&#x27;,52);insert into people values (&#x27;620182198903224674&#x27;,&#x27;宇文酚&#x27;,62);\n\n123456select * from people partition(huabei);select * from people partition(dongbei);select * from people partition(huazhong);select * from people partition(huadong);select * from people partition(xibei);select * from people partition(gang_ao_tai);\n\nHASH分区HASH分区是使用哈希算法将数据均匀地分布到多个分区中。下面是HASH分区的定义方式、特点以及代码示例。定义方式：\n\n指定分区键：选择作为分区依据的列作为分区键。\n分区函数：通过PARTITION BY HASH指定使用HASH分区策略。\n定义分区数量：使用PARTITIONS关键字指定分区的数量。\n\nHASH分区的特点：\n\n数据均匀分布：HASH分区使用哈希算法将数据均匀地分布到不同的分区中，确保数据在各个分区之间平衡。\n并行查询性能：通过将数据分散到多个分区，HASH分区可以提高并行查询的性能，多个查询可以同时在不同分区上执行。\n简化管理：HASH分区使得数据管理更加灵活，可以轻松地添加或删除分区，以适应数据增长或变更的需求。\n\n以下是一个使用HASH分区的代码示例：\n1234567create table user (    id int auto_increment,    name varchar(50),    primary key (id)) partition by hash (id) partitions 4;\n\n12345678910111213141516insert into user (name) values (&#x27;邱赣&#x27;);insert into user (name) values (&#x27;何天&#x27;);insert into user (name) values (&#x27;方加牡&#x27;);insert into user (name) values (&#x27;贺巧&#x27;);insert into user (name) values (&#x27;闾丘饱乾&#x27;);insert into user (name) values (&#x27;丁经&#x27;);insert into user (name) values (&#x27;韦散&#x27;);insert into user (name) values (&#x27;东方让&#x27;);insert into user (name) values (&#x27;赖队瞻&#x27;);insert into user (name) values (&#x27;郭叹&#x27;);insert into user (name) values (&#x27;慕容芋岛&#x27;);insert into user (name) values (&#x27;孙劣&#x27;);insert into user (name) values (&#x27;王桃&#x27;);insert into user (name) values (&#x27;郝郑惭&#x27;);insert into user (name) values (&#x27;余烂&#x27;);insert into user (name) values (&#x27;宇文酚&#x27;);\n\n1select * from user;\n\n1select * from user partition(p0);\n\n1select * from user partition(p1);\n\n1select * from user partition(p2);\n\n1select * from user partition(p3);\n\nKEY分区KEY分区是根据某一列的哈希值将数据分布到不同的分区。不同于HASH分区，KEY分区使用的是列值的哈希值而不是哈希函数。下面是KEY分区的定义方式、特点以及代码示例。\n定义方式：\n\n指定分区键：选择作为分区依据的列作为分区键。\n分区函数：通过PARTITION BY KEY指定使用KEY分区策略。\n定义分区数量：使用PARTITIONS关键字指定分区的数量。\n\nKEY分区的特点：\n\n哈希分布：KEY分区使用列值的哈希值将数据分布到不同的分区中，与哈希函数不同，它使用的是列值的哈希值。\n高度自定义：KEY分区允许根据业务需求自定义分区逻辑，可以灵活地选择分区键和分区数量。\n并行查询性能：通过将数据分散到多个分区，KEY分区可以提高并行查询的性能，多个查询可以同时在不同分区上执行。\n简化管理：KEY分区使得数据管理更加灵活，可以轻松地添加或删除分区，以适应数据增长或变更的需求。\n\n以下是一个使用KEY分区的代码示例：\n1234567create table person (    id int auto_increment,    name varchar(50),    primary key (id)) partition by key(id) partitions 4;\n\n12345678910111213141516insert into person (name) values (&#x27;邱赣&#x27;);insert into person (name) values (&#x27;何天&#x27;);insert into person (name) values (&#x27;方加牡&#x27;);insert into person (name) values (&#x27;贺巧&#x27;);insert into person (name) values (&#x27;闾丘饱乾&#x27;);insert into person (name) values (&#x27;丁经&#x27;);insert into person (name) values (&#x27;韦散&#x27;);insert into person (name) values (&#x27;东方让&#x27;);insert into person (name) values (&#x27;赖队瞻&#x27;);insert into person (name) values (&#x27;郭叹&#x27;);insert into person (name) values (&#x27;慕容芋岛&#x27;);insert into person (name) values (&#x27;孙劣&#x27;);insert into person (name) values (&#x27;王桃&#x27;);insert into person (name) values (&#x27;郝郑惭&#x27;);insert into person (name) values (&#x27;余烂&#x27;);insert into person (name) values (&#x27;宇文酚&#x27;);\n\n1select * from person;\n\n1select * from person partition(p0);\n\n1select * from person partition(p1);\n\n1select * from person partition(p2);\n\n1select * from person partition(p3);\n\nCOLUMNS 分区MySQL在5.5版本引入了COLUMNS分区类型，其中包括RANGE COLUMNS分区和LIST COLUMNS分区。以下是对这两种COLUMNS分区的详细说明：\n\nRANGE COLUMNS分区： RANGE COLUMNS分区是根据列的范围值将数据分布到不同的分区的分区策略。它类似于RANGE分区，但是根据多个列的范围值进行分区，而不是只根据一个列。这使得范围的定义更加灵活，可以基于多个列的组合来进行分区。下面是一个RANGE COLUMNS分区的代码示例：\n1234567891011create table product(    product_id int,    product_name varchar(50),    product_location int,    category_id int) partition by range columns(category_id,product_location)(    partition p11 values less than (1,1),    partition p12 values less than (1,2),    partition p21 values less than (2,1),    partition p22 values less than (2,2));\n\n每个分区根据这两列的范围值进行划分。\n\nLIST COLUMNS分区： LIST COLUMNS分区是根据列的离散值将数据分布到不同的分区的分区策略。它类似于LIST分区，但是根据多个列的离散值进行分区，而不是只根据一个列。这使得离散值的定义更加灵活，可以基于多个列的组合来进行分区。下面是一个LIST COLUMNS分区的代码示例：\n123456789create table product(    product_id int,    product_name varchar(50),    product_location int,    category_id int) partition by list columns(category_id,product_location)(    partition p12 values in ((1,1),(1,2)),    partition p22 values in ((2,1),(2,2)));\n\n常见分区命令向分区表添加新的分区1alter table sale add partition (partition p6 values less than (2026));\n\n删除指定的分区1alter table sale drop partition p6;\n\n重新组织分区12345alter table sale REORGANIZE PARTITION p0, p1, p2,p3, p4, p5 INTO (    partition p0 values less than (2021),    partition p1 values less than (2023),    partition p2 values less than (2025));\n\n合并相邻的分区1\n\n分析指定分区的统计信息1alter table sale analyze partition p0;\n\n主从复制\n服务器 openEuler\n\n一主一从\n\n\n角色\n主机名\nIP地址\n\n\n\n主库\nmaster\n192.168.1.201\n\n\n从库\nslave\n192.168.1.202\n\n\n分别安装MySQL下载MySQL1wget https://cdn.mysql.com//Downloads/MySQL-9.0/mysql-9.0.1-1.el9.x86_64.rpm-bundle.tar\n\n创建安装包目录1mkdir mysql\n\n释放安装包到安装包目录1tar -xvf mysql-9.0.1-1.el9.x86_64.rpm-bundle.tar -C mysql\n\n切换到MySQL安装包目录1cd mysql\n\n安装MySQL1rpm -ivh *.rpm  --force --nodeps\n\n启动MySQL1systemctl start mysqld\n\n设置MySQL开机自启动1systemctl enable mysqld\n\n在服务器初始启动时，假设服务器的数据目录为空，会发生以下情况：\n\n服务器已初始化。\n\nSSL 证书和密钥文件在数据目录中生成。\n\nvalidate_password 已安装并启用。\n\n创建了一个超级用户帐户&#39;root&#39;@&#39;localhost。超级用户的密码已设置并存储在错误日志文件中。要显示它，请使用以下命令：\n1grep &#x27;temporary password&#x27; /var/log/mysqld.log\n\n通过使用生成的临时密码登录并为超级用户帐户设置自定义密码，尽快更改 root 密码：\n1mysql -uroot -p\n\n修改密码12ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Lihaozhe!!@@1122&#x27;;FLUSH PRIVILEGES;\n\n设置远程访问地址12update mysql.user set host = &#x27;%&#x27; where user=&#x27;root&#x27;;FLUSH PRIVILEGES;\n\n退出MySQL1exit;\n\n重启MySQL1systemctl restart mysqld\n\n防火墙开放端口1firewall-cmd --zone=public --add-port=3306/tcp --add-port=33060/tcp --permanent\n\n重启防火墙1firewall-cmd --reload \n\n主库配置\n在主从库中分别建一个你需要同步的测试库，比如我这里创建的库叫lihaozhe，然后在这两个库中分别建一个测试表，都是空表即可。\n\n修改配置文件1vim /etc/my.cnf\n\n追加以下内容：\n\n实验配置\n\n1234server-id=201log-bin=mysql-bininnodb_flush_log_at_trx_commit = 1sync_binlog = 1\n\n\n生产环境配置\n还可以配置一些其他参数：\nlog_bin_index（bin日志文件索引位置），\nexpire_logs_days 日志多少天过期，binlog_format 等。\n\n1234server-id=201    #服务器 id，随意，但要唯一log-bin=mysql-bin   #二进制文件存放路径binlog-do-db=lihaozhe    #待同步的数据库日志binlog-ignore-db=mysql  #不同步的数据库日志\n\n创建账号用于主从复制1234#创建用户 我这里用户名为copyuser，注意这里的ip是从库服务器的ipCREATE USER &#x27;lihaozhe&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;Lihaozhe!!@@6633&#x27;;#给主从复制账号授权grant replication slave on *.* to &#x27;lihaozhe&#x27;@&#x27;%&#x27;;\n\n重启MySQL1systemctl restart mysqld\n\n查看主库状态\n登录数据库后查看 \n\n1show master status;\n\n显示如下：\n12345678910mysql&gt; show master status;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000001 |      157 | lihaozhe     | mysql            |                   |+------------------+----------+--------------+------------------+-------------------+1 row in set (0.00 sec)mysql&gt; \n\n\n注意：File 和 Position的值从库同步的时候需要\n\n从库配置\n在主从库中分别建一个你需要同步的测试库，比如我这里创建的库叫lihaozhe，然后在这两个库中分别建一个测试表，都是空表即可。\n\n修改配置文件1vim /etc/my.cnf\n\n追加以下内容：\n1234server-id=202    #服务器 id，随意，但要唯一log-bin=mysql-bin   #二进制文件存放路径replicate-do-db=lihaozhe    #待同步的数据库replicate-ignore-db=mysql,information_schema,performance_schema  #不同步的数据库\n\n\n以上面主库配置相比，就是除了server-id不一样，这里还需要配置replicate-do-db和replicate-ignore-db，注意不是日志。\n\n重启MySQL1systemctl restart mysqld\n\n实现主从同步\n登录数据库后\n\n1234567891011-- 关闭从库stop slave;-- 设置同步，注意这里是主库ip，日志名称和位置是我们之前上图中看到的名称和位置change master to master_host=&#x27;192.168.1.201&#x27;,master_user=&#x27;lihaozhe&#x27;,master_password=&#x27;Lihaozhe!!@@6633&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=157;-- 开启从库start slave; -- 检查服务器状态show slave status \\G;\n\n显示如下：\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869mysql&gt; show slave status \\G;*************************** 1. row ***************************               Slave_IO_State: Waiting for source to send event                  Master_Host: 192.168.1.201                  Master_User: lihaozhe                  Master_Port: 3306                Connect_Retry: 60              Master_Log_File: mysql-bin.000001          Read_Master_Log_Pos: 472               Relay_Log_File: slave-relay-bin.000002                Relay_Log_Pos: 326        Relay_Master_Log_File: mysql-bin.000001             Slave_IO_Running: Yes            Slave_SQL_Running: Yes              Replicate_Do_DB: lihaozhe          Replicate_Ignore_DB: mysql,information_schema,performance_schema           Replicate_Do_Table:        Replicate_Ignore_Table:       Replicate_Wild_Do_Table:   Replicate_Wild_Ignore_Table:                    Last_Errno: 0                   Last_Error:                  Skip_Counter: 0          Exec_Master_Log_Pos: 472              Relay_Log_Space: 536              Until_Condition: None               Until_Log_File:                 Until_Log_Pos: 0           Master_SSL_Allowed: No           Master_SSL_CA_File:            Master_SSL_CA_Path:               Master_SSL_Cert:             Master_SSL_Cipher:                Master_SSL_Key:         Seconds_Behind_Master: 0Master_SSL_Verify_Server_Cert: No                Last_IO_Errno: 0                Last_IO_Error:                Last_SQL_Errno: 0               Last_SQL_Error:   Replicate_Ignore_Server_Ids:              Master_Server_Id: 201                  Master_UUID: ee21ecf9-01be-11ed-916c-000c29c9a6f5             Master_Info_File: mysql.slave_master_info                    SQL_Delay: 0          SQL_Remaining_Delay: NULL      Slave_SQL_Running_State: Replica has read all relay log; waiting for more updates           Master_Retry_Count: 86400                  Master_Bind:       Last_IO_Error_Timestamp:      Last_SQL_Error_Timestamp:                Master_SSL_Crl:            Master_SSL_Crlpath:            Retrieved_Gtid_Set:             Executed_Gtid_Set:                 Auto_Position: 0         Replicate_Rewrite_DB:                  Channel_Name:            Master_TLS_Version:        Master_public_key_path:         Get_master_public_key: 0            Network_Namespace: 1 row in set, 1 warning (0.00 sec)ERROR: No query specifiedmysql&gt; \n\n测试\n主表操作，从表观察0\n\n","slug":"第一篇","date":"2024-10-16T01:28:20.128Z","categories_index":"","tags_index":"","author_index":"年阔正"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start\nCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2024-10-16T01:24:11.687Z","categories_index":"","tags_index":"","author_index":"年阔正"}]